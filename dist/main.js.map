{"version":3,"file":"main.js","mappings":"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AGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UAEd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UAEd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK,UACd,EAAG,EAAG,EAAGjK,KAAKiK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","sources":["webpack://knotbuild/./src/index.html","webpack://knotbuild/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://knotbuild/webpack/bootstrap","webpack://knotbuild/webpack/runtime/compat get default export","webpack://knotbuild/webpack/runtime/define property getters","webpack://knotbuild/webpack/runtime/hasOwnProperty shorthand","webpack://knotbuild/webpack/runtime/publicPath","webpack://knotbuild/webpack/runtime/jsonp chunk loading","webpack://knotbuild/./src/libs/utils/glUtils.ts","webpack://knotbuild/./src/libs/utils/uiUtils.ts","webpack://knotbuild/./node_modules/gl-matrix/esm/common.js","webpack://knotbuild/./node_modules/gl-matrix/esm/vec4.js","webpack://knotbuild/./node_modules/gl-matrix/esm/vec3.js","webpack://knotbuild/./node_modules/gl-matrix/esm/mat4.js","webpack://knotbuild/./node_modules/gl-matrix/esm/vec2.js","webpack://knotbuild/./src/libs/models/Camera.ts","webpack://knotbuild/./src/libs/models/Light.ts","webpack://knotbuild/./node_modules/gl-matrix/esm/mat3.js","webpack://knotbuild/./src/libs/objects/Sphere.ts","webpack://knotbuild/./node_modules/gl-matrix/esm/quat.js","webpack://knotbuild/./src/libs/objects/Cylinder.ts","webpack://knotbuild/./src/libs/objects/XYPlane.ts","webpack://knotbuild/./src/libs/objects/Arrow.ts","webpack://knotbuild/./src/libs/objects/Guide.ts","webpack://knotbuild/./src/libs/math/LinkedKnot.ts","webpack://knotbuild/./src/libs/math/FourierKnot.ts","webpack://knotbuild/./src/libs/objects/Circle.ts","webpack://knotbuild/./src/libs/controls/Overlay.ts","webpack://knotbuild/./src/libs/math/Quintuples.ts","webpack://knotbuild/./src/shaders/firstCompute.wgsl","webpack://knotbuild/./src/libs/controls/Scene.ts","webpack://knotbuild/./src/libs/controls/App.ts","webpack://knotbuild/./src/shaders/MainVertex.glsl","webpack://knotbuild/./src/shaders/MainFrag.glsl","webpack://knotbuild/./src/main.ts"],"sourcesContent":["// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./img/imaginary-logo-white.png\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"./img/about.png\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_2___ = new URL(\"./img/insert.png\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_3___ = new URL(\"./img/connect.png\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_4___ = new URL(\"./img/subdivide.png\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_5___ = new URL(\"./img/eraser.png\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_6___ = new URL(\"./img/delete.png\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_7___ = new URL(\"./img/camera.png\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_8___ = new URL(\"./img/play.png\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_9___ = new URL(\"./img/pause.png\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar ___HTML_LOADER_REPLACEMENT_1___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_1___);\nvar ___HTML_LOADER_REPLACEMENT_2___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_2___);\nvar ___HTML_LOADER_REPLACEMENT_3___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_3___);\nvar ___HTML_LOADER_REPLACEMENT_4___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_4___);\nvar ___HTML_LOADER_REPLACEMENT_5___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_5___);\nvar ___HTML_LOADER_REPLACEMENT_6___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_6___);\nvar ___HTML_LOADER_REPLACEMENT_7___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_7___);\nvar ___HTML_LOADER_REPLACEMENT_8___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_8___);\nvar ___HTML_LOADER_REPLACEMENT_9___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_9___);\nvar code = \"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <link rel=\\\"stylesheet\\\" href=\\\"https://fonts.googleapis.com/css?family=Ubuntu:regular,bold&subset=Latin\\\"> <title>Document</title> </head> <body> <div class=\\\"displayColumn\\\"> <div id=\\\"header\\\"> <div> <a class=\\\"logo-imaginary\\\" href=\\\"http://about.imaginary.org\\\" title=\\\"About IMAGINARY\\\"><img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" alt=\\\"Image\\\"></a> <button class=\\\"button img\\\" id=\\\"about button\\\" style=\\\"border-radius:50%\\\"> <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_1___ + \"\\\" alt=\\\"Image\\\"> </button> </div> </div> <div id=\\\"container\\\"> <canvas id=\\\"gfx-main\\\" width=\\\"400\\\" height=\\\"400\\\"></canvas> <div id=\\\"drawing tool\\\" class=\\\"drawing\\\"> <div> <button class=\\\"button img\\\" id=\\\"insert button\\\"> <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_2___ + \"\\\" alt=\\\"Image\\\"> <span>insert</span> </button> <button class=\\\"button img\\\" id=\\\"connect button\\\"> <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_3___ + \"\\\" alt=\\\"Image\\\"> <span>connect</span> </button> <button class=\\\"button img\\\" id=\\\"subdivide button\\\"> <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_4___ + \"\\\" alt=\\\"Image\\\"> <span>subdivide</span> </button> <button class=\\\"button img\\\" id=\\\"erase button\\\"> <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_5___ + \"\\\" alt=\\\"Image\\\"> <span>erase</span> </button> </div> </div> <div id=\\\"delete-check\\\" class=\\\"hidden\\\"> <div id=\\\"delete text\\\" style=\\\"font-size:16px\\\">Delete the current knot?</div> <div> <button id=\\\"delete-cancel\\\" class=\\\"button cancel\\\">Cancel</button> <button id=\\\"delete-confirm\\\" class=\\\"button confirm\\\">Delete</button> </div> </div> <div class=\\\"scene manager\\\"> <button class=\\\"button img scene-update\\\" id=\\\"advance scene\\\" sceneType=\\\"Linked Knot\\\" disabled=\\\"disabled\\\"> </button> <span class=\\\"tooltip linked\\\" style=\\\"right:40px;top:-50px\\\">Draw a closed knot first</span> <span class=\\\"tooltip fourier\\\" style=\\\"right:40px;top:-50px\\\">Make sure knot does not intersect itself</span> <div class=\\\"circle-options hidden\\\" id=\\\"circle options\\\"> <div> <span>Enable double check:</span> <div class=\\\"Toggle\\\"> <input id=\\\"double check box\\\" name=\\\"checkbox2\\\" type=\\\"checkbox\\\"/> <label for=\\\"double check box\\\"></label> </div> </div> <div> <span>Maximum number of circles per frame:</span> <div class=\\\"dropdown\\\" id=\\\"circle max dropdown\\\" style=\\\"flex:0 0 auto;width:60px;height:20px\\\"> <button class=\\\"dropbtn\\\">10</button> <div class=\\\"content hidden\\\"> <div> <div class=\\\"element\\\" id=\\\"max 30\\\" value=\\\"30\\\"><span>30</span></div> <div class=\\\"element\\\" id=\\\"max 20\\\" value=\\\"20\\\"><span>20</span></div> <div class=\\\"element\\\" id=\\\"max 15\\\" value=\\\"15\\\"><span>15</span></div> <div class=\\\"element\\\" id=\\\"max 10\\\" value=\\\"10\\\"><span>10</span></div> </div> </div> </div> </div> <div> <span>Number of frames:</span> <div class=\\\"dropdown\\\" id=\\\"knotDivision\\\" style=\\\"flex:0 0 auto;width:60px;height:20px\\\"> <button class=\\\"dropbtn\\\">1600</button> <div class=\\\"content hidden\\\"> <div> <div class=\\\"element\\\" id=\\\"50\\\" value=\\\"800\\\"><span>800</span></div> <div class=\\\"element\\\" id=\\\"20\\\" value=\\\"1600\\\"><span>1600</span></div> </div> </div> </div> </div> <div style=\\\"justify-content:center;gap:40px\\\"> <button class=\\\"button\\\" id=\\\"cancel calculate\\\" style=\\\"color:#000;font-size:16px\\\">Cancel</button> <button class=\\\"button\\\" id=\\\"confirm calculate\\\" style=\\\"background-color:#377dff;color:#fff;font-size:16px\\\">Calculate</button> </div> </div> <div class=\\\"scene slider\\\"> <input type=\\\"radio\\\" name=\\\"m\\\" id=\\\"Linked Knot\\\" checked=\\\"checked\\\"> <input type=\\\"radio\\\" name=\\\"m\\\" id=\\\"Fourier Knot\\\"> <input type=\\\"radio\\\" name=\\\"m\\\" id=\\\"Quintuples\\\"> </div> <button class=\\\"button img\\\" id=\\\"delete scene\\\" style=\\\"position:absolute;left:50px\\\"> <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_6___ + \"\\\" alt=\\\"Image\\\"> <span class=\\\"tooltip\\\" style=\\\"color:red\\\">delete</span> </button> </div> <button class=\\\"button img\\\" id=\\\"camera button\\\" style=\\\"position:absolute;right:40px;top:40px\\\"> <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_7___ + \"\\\" alt=\\\"Image\\\"> <span class=\\\"tooltip\\\">reset camera position</span> </button> <div id=\\\"loader\\\" class=\\\"loader hidden\\\"> <div class=\\\"loader overlay\\\"></div> <div class=\\\"loader box\\\"> <div class=\\\"loader spinner\\\"></div> <div class=\\\"loader text\\\" id=\\\"loader text\\\">loading</div> <div style=\\\"display:flex;justify-content:center;flex-flow:row wrap;left:0;right:0;top:230px;margin:auto;position:absolute\\\"> <button id=\\\"quit\\\" class=\\\"button\\\">Quit Calculations</button> </div> <div id=\\\"double check\\\" class=\\\"overlay hidden\\\"> <span class=\\\"text-center\\\">Are you sure you would like to quit calculations?</span> <div style=\\\"display:flex;justify-content:center;gap:80px;flex-flow:row nowrap\\\"> <button id=\\\"cancel\\\" class=\\\"button cancel\\\">Cancel</button> <button id=\\\"confirm\\\" class=\\\"button confirm\\\">Confirm</button> </div> </div> </div> </div> <div id=\\\"video-controls\\\" class=\\\"controls hidden\\\"> <div> <button id=\\\"playpause\\\" type=\\\"button\\\" data-state=\\\"play\\\"> <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_8___ + \"\\\" alt=\\\"Image\\\" class=\\\"pause\\\"> <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_9___ + \"\\\" alt=\\\"Image\\\" class=\\\"play\\\"> </button> <div class=\\\"progress\\\" id=\\\"progress\\\"> <div> <div id=\\\"progress-bar\\\" style=\\\"width:30%\\\"> <div id=\\\"progress-ball\\\"></div> </div> </div> </div> <div class=\\\"dropdown\\\" id=\\\"speed dropdown\\\" style=\\\"flex:0 0 auto;width:75px;height:90%\\\"> <button class=\\\"dropbtn\\\">X 1.0</button> <div class=\\\"content hidden\\\"> <div> <div class=\\\"element\\\" id=\\\"speed x2\\\" value=\\\"2\\\"><span>X 2.0</span></div> <div class=\\\"element\\\" id=\\\"speed x1.5\\\" value=\\\"1.5\\\"><span>X 1.5</span></div> <div class=\\\"element\\\" id=\\\"speed x1\\\" value=\\\"1\\\"><span>X 1.0</span></div> <div class=\\\"element\\\" id=\\\"speed x0.5\\\" value=\\\"0.5\\\"><span>X 0.5</span></div> </div> </div> </div> </div> </div> </div> </div> <div id=\\\"about overlay\\\" class=\\\"about hidden\\\"> <div> <div id=\\\"info-content\\\"> <button id=\\\"info-exit\\\"> <span class=\\\"close\\\">x</span> </button> <p></p> <p class=\\\"text-center\\\"><a href=\\\"https://en.wikipedia.org/wiki/Knot_theory\\\">Knot Theory</a> is a branch of mathematics that studies closed, non-self-intersecting curves in three dimension. One of the central part of Knot Theory is trying to figure out if two knots are equivalent. A useful tool to determine knot equivalences are knot invariants, which are properties that are same for equivalent knots.</p> <p class=\\\"text-center\\\">This program calculates the quadratic coefficient of the <a href=\\\"https://en.wikipedia.org/wiki/Alexander_polynomial\\\">Conway-Alexander Polynomial</a>, which is a type of knot invariant. It takes a user-drawn knot and smoothen it using Fourier Approximations. It then finds circles that intersect the knot in 5 distinct points, such that adjacent points on the circle are not adjacent on the knot. The number of circles found at each red point represent the modulo 2 quadratic coefficient of the Conway-Alexander Polynomial.</p> <p class=\\\"text-center\\\">The theory follows from the results of <a href=\\\"https://arxiv.org/abs/math/0303034\\\">this paper</a> writen by Budney, R., Conant, J., Scannell, K. P., & Sinha, D. Calculations are carried out using WebGPU.</p> <p class=\\\"text-center\\\"> This site was created in collaboration with IMAGINARY, a travelling exhibition that shows mathematics can be beautiful, interactive, something you can touch, or a way to express your emotions beyond what words can achieve. It has visited over 55 countries since 2007. </p> <p class=\\\"text-center\\\"><a href=\\\"http://about.imaginary.org\\\">Learn more about IMAGINARY</a></p> <p class=\\\"text-center\\\">Created by Sean Lee and <a href=\\\"http://rybu.org/\\\">Ryan Budney</a>.</p> </div> </div> </div> <div id=\\\"error-screen\\\" class=\\\"hidden\\\"></div> </body> </html>\";\n// Exports\nexport default code;","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = String(url.__esModule ? url.default : url);\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"/dist/\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","\r\n\r\nexport abstract class glUtils{\r\n\r\n    public static checkWebGL(canvas : HTMLCanvasElement) : WebGLRenderingContext | null{\r\n        /**\r\n         * Check if WebGL is available.\r\n         **/\r\n        const contexts : string[] = [\"experimental-webgl\", \"webkit-3d\", \"moz-webgl\"]\r\n        var gl : WebGLRenderingContext | null = <WebGLRenderingContext>canvas.getContext(\"webgl\", { preserveDrawingBuffer: true });\r\n        if (!gl) {\r\n            for (var i=0; i < contexts.length; i++) {\r\n                try {\r\n                  gl = <WebGLRenderingContext>canvas.getContext(contexts[i], { preserveDrawingBuffer: true });\r\n                } catch(e) {}\r\n                if (gl) {\r\n                  break;\r\n                }\r\n            }\r\n        }\r\n        if (!gl) {\r\n          alert(\"WebGL not available. Please use a new version of Chrome or Firefox.\");\r\n        }\r\n        return gl;\r\n    }\r\n\r\n    public static createProgram(\r\n            gl: WebGLRenderingContext, \r\n            vertexShaderSource : string, \r\n            fragmentShaderSource : string\r\n        ): WebGLProgram | null {\r\n        /**\r\n         * Create and return a shader program\r\n         **/\r\n        var program : WebGLProgram = <WebGLProgram>gl.createProgram();\r\n        var vertexShader : WebGLShader = <WebGLShader>glUtils.getShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\r\n        var fragmentShader : WebGLShader = <WebGLShader>glUtils.getShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\r\n\r\n        gl.attachShader(program, vertexShader);\r\n        gl.attachShader(program, fragmentShader);\r\n        gl.linkProgram(program);\r\n  \r\n        // Check that shader program was able to link to WebGL\r\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n            var error = gl.getProgramInfoLog(program);\r\n            console.log('Failed to link program: ' + error);\r\n            gl.deleteProgram(program);\r\n            gl.deleteShader(fragmentShader);\r\n            gl.deleteShader(vertexShader);\r\n            return null;\r\n        }\r\n        \r\n        return program;\r\n    }\r\n\r\n        // Render buffers for all the attributes\r\n    public static renderBuffers(\r\n            gl : WebGLRenderingContext, \r\n            program : WebGLProgram, \r\n            attributes : { [name: string]: Attribute }, \r\n            indices : Uint8Array | Uint16Array | null = null\r\n        ): void{\r\n\r\n\r\n        let attributeCount : number = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n        for (let i = 0; i < attributeCount; ++i ) {\r\n            let info: WebGLActiveInfo = <WebGLActiveInfo>gl.getActiveAttrib(program, i );\r\n            if ( !info ) {\r\n                break;\r\n            }\r\n            var objAttribute : Attribute = attributes[info.name];\r\n            var buffer : WebGLBuffer = <WebGLBuffer> gl.createBuffer();\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, objAttribute.bufferData, gl.STATIC_DRAW);\r\n            var attr = gl.getAttribLocation(program, info.name);\r\n            gl.enableVertexAttribArray(attr);\r\n            gl.vertexAttribPointer(\r\n                attr,\r\n                objAttribute.size,\r\n                gl.FLOAT,\r\n                false,\r\n                0,\r\n                objAttribute.bufferData.BYTES_PER_ELEMENT*objAttribute.offset\r\n            );\r\n        }\r\n        \r\n\r\n        if (indices) {\r\n            var indexBuffer : WebGLBuffer = <WebGLBuffer>gl.createBuffer();\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\r\n        }\r\n    }\r\n\r\n    public static bindBuffers(\r\n        gl : WebGLRenderingContext, \r\n        program : WebGLProgram, \r\n        attributes : { [name: string]: Attribute }, \r\n        buffers: { [name: string]: WebGLBuffer},\r\n        indexBuffer : WebGLBuffer | null = null,\r\n    ): void{\r\n        let attributeCount : number = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n        for (let i = 0; i < attributeCount; ++i ) {\r\n            let info: WebGLActiveInfo = <WebGLActiveInfo>gl.getActiveAttrib(program, i );\r\n            if ( !info ) {\r\n                break;\r\n            }\r\n\r\n            var objAttribute : Attribute = attributes[info.name];\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffers[info.name]);\r\n            var attr = gl.getAttribLocation(program, info.name);\r\n            gl.enableVertexAttribArray(attr);\r\n            gl.vertexAttribPointer(\r\n                attr,\r\n                objAttribute.size,\r\n                gl.FLOAT,\r\n                false,\r\n                0,\r\n                objAttribute.bufferData.BYTES_PER_ELEMENT*objAttribute.offset\r\n            );\r\n        \r\n        }\r\n        if (indexBuffer) {\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n        }\r\n    }\r\n\r\n    public static initBuffers(\r\n        gl : WebGLRenderingContext, \r\n        program : WebGLProgram, \r\n        attributes : { [name: string]: Attribute }, \r\n        indices : Uint8Array | Uint16Array | null = null\r\n    ): [{ [name: string]: WebGLBuffer}, WebGLBuffer | null]{\r\n\r\n\r\n        let attributeCount : number = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n        var buffers: { [name: string]: WebGLBuffer} = {};\r\n        for (let i = 0; i < attributeCount; ++i ) {\r\n            let info: WebGLActiveInfo = <WebGLActiveInfo>gl.getActiveAttrib(program, i );\r\n            if ( !info ) {\r\n                break;\r\n            }\r\n\r\n            var objAttribute : Attribute = attributes[info.name];\r\n            buffers[info.name] = <WebGLBuffer> gl.createBuffer();\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffers[info.name]);\r\n            gl.bufferData(gl.ARRAY_BUFFER, objAttribute.bufferData, gl.STATIC_DRAW);\r\n            var attr = gl.getAttribLocation(program, info.name);\r\n            gl.enableVertexAttribArray(attr);\r\n            gl.vertexAttribPointer(\r\n                attr,\r\n                objAttribute.size,\r\n                gl.FLOAT,\r\n                false,\r\n                0,\r\n                objAttribute.bufferData.BYTES_PER_ELEMENT*objAttribute.offset\r\n            );\r\n        }\r\n        \r\n        var indexBuffer : WebGLBuffer | null = null;\r\n        if (indices) {\r\n            indexBuffer = <WebGLBuffer>gl.createBuffer();\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\r\n        }\r\n        return [buffers, indexBuffer];\r\n    }\r\n  \r\n    private static getShader(gl : WebGLRenderingContext, type : number, source : string): WebGLShader | null {\r\n        /**\r\n         * Get, compile, and return an embedded shader object\r\n         **/\r\n        var shader : WebGLShader = <WebGLShader>gl.createShader(type);\r\n        gl.shaderSource(shader, source);\r\n        gl.compileShader(shader);\r\n  \r\n        // Check if compiled successfully\r\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n            console.log(\"An error occurred compiling the shaders:\" + gl.getShaderInfoLog(shader));\r\n            gl.deleteShader(shader);\r\n            return null;\r\n        }\r\n  \r\n        return shader;\r\n    }\r\n  \r\n};\r\n  \r\n    \r\n  \r\n","export abstract class uiUtils{\r\n\r\n    public static inCanvas(event : MouseEvent): boolean {\r\n        var x = event.clientX;\r\n        var y = event.clientY;\r\n        var target = <HTMLElement>event.target;\r\n        var rect = target.getBoundingClientRect();\r\n        return (rect.left <= x && x < rect.right && rect.top <= y && y < rect.bottom);\r\n    }\r\n    public static pixelInputToGLCoord(event : MouseEvent, rect : DOMRect): {relx:number, rely:number} {\r\n        var x = event.clientX;\r\n        var y = event.clientY;\r\n        var midX = (rect.width)/2;\r\n        var midY = (rect.height)/2;\r\n\r\n        x = ((x - rect.left) - midX) / midX;\r\n        y = (midY - (y - rect.top)) / midY;\r\n        return {relx:x,rely:y};\r\n    }\r\n    private static pixelInputToCanvasCoord(event : MouseEvent, canvas : HTMLCanvasElement): {x:number, y:number}  {\r\n        var x = event.clientX;\r\n        var y = event.clientY;\r\n        var rect = canvas.getBoundingClientRect();\r\n        x = x - rect.left;\r\n        y = rect.bottom - y;\r\n        return {x:x,y:y};\r\n    }\r\n    public static pixelsFromMouseClick(event : MouseEvent, canvas : HTMLCanvasElement, gl: WebGLRenderingContext) {\r\n        var point = uiUtils.pixelInputToCanvasCoord(event, canvas);\r\n        var pixels = new Uint8Array(4);\r\n        gl.readPixels(point.x, point.y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\r\n        return pixels;\r\n    }\r\n    \r\n}\r\n","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import { vec2, vec3, mat4 } from \"gl-matrix\";\r\n\r\nconst pi = Math.PI;\r\nfunction cos(t: number): number{\r\n    return Math.cos(t);\r\n}\r\nfunction sin(t: number): number{\r\n    return Math.sin(t);\r\n}\r\n\r\n\r\n\r\nexport class Camera {\r\n\r\n    private _position: vec3;\r\n    private _transformation : vec3;\r\n\r\n    \r\n    private _spherical : {\r\n        theta : number;\r\n        phi : number;\r\n        radius : number;\r\n    };\r\n\r\n    private _mView : mat4;\r\n    private _mProj : mat4;\r\n\r\n    private _ray : {\r\n        absPos: vec3;\r\n        normal : vec2;\r\n        toWorld : mat4;\r\n    };\r\n\r\n    private _reset: boolean;\r\n\r\n\r\n    constructor(theta: number = pi/4, phi: number = pi/4, radius : number = 12, transformation : vec3 = [0,0,1.5]) {\r\n        \r\n        this._spherical = {\r\n            theta : theta,\r\n            phi : phi,\r\n            radius : radius,\r\n        }\r\n\r\n        this._position = [0,0,0];\r\n\r\n        this._ray = {\r\n            absPos : [0,0,0],\r\n            normal : [0,0],\r\n            toWorld :  mat4.create(),\r\n        }\r\n        this._transformation = transformation;\r\n\r\n        this._mView = mat4.create();\r\n        this._mProj = mat4.create();\r\n\r\n        this._reset = false;\r\n\r\n        \r\n        this.updateCameraPos();\r\n        this.setRay();\r\n    }\r\n\r\n    public update(gl : WebGLRenderingContext, program : WebGLProgram, width : number, height : number) {\r\n        var matViewUniformLocation = gl.getUniformLocation(program, 'mView');\r\n        var matProjUniformLocation = gl.getUniformLocation(program, 'mProj');\r\n\r\n        \r\n\r\n        gl.viewport(0,0, width, height);\r\n\r\n        mat4.perspective(this._mProj,\r\n        pi/4, width/height, 1, 5*this._spherical.radius\r\n        );\r\n\r\n        mat4.lookAt(this._mView,\r\n            <vec3>this._position,\r\n            [0,0,0],\r\n            [0,0,1]\r\n        );\r\n\r\n        mat4.translate(this._mView, this._mView, this._transformation);\r\n\r\n        gl.uniformMatrix4fv(matViewUniformLocation, false, this._mView);\r\n        gl.uniformMatrix4fv(matProjUniformLocation, false, this._mProj);\r\n    }\r\n\r\n    public resetCam(gl : WebGLRenderingContext, program : WebGLProgram, width : number, height : number){\r\n        const factor = 30;\r\n        const dtheta = (pi/4 - this._spherical.theta);\r\n        const dphi =(pi/4 - this._spherical.phi);\r\n        const drad = (12 - this._spherical.radius);\r\n\r\n        if((dtheta < -pi) || (dtheta >= 0)){\r\n            this._spherical.theta += Math.sqrt(Math.abs(dtheta))/factor;\r\n        }else{\r\n            this._spherical.theta -= Math.sqrt(Math.abs(dtheta))/factor;\r\n        }\r\n        this._spherical.phi += Math.sign(dphi)*Math.sqrt(Math.abs(dphi))/factor;\r\n        this._spherical.phi = Math.min(Math.max(0.0001, this._spherical.phi), pi - 0.0001);\r\n        this._spherical.radius += drad/factor;\r\n\r\n        var dtrans = vec3.subtract(vec3.create(), [0,0,1.5], this._transformation);\r\n\r\n        vec3.scaleAndAdd(this._transformation, this._transformation, dtrans, 1/factor/1.6);\r\n        if(\r\n            (Math.abs(dtheta) < 0.001)\r\n            && (Math.abs(dphi) < 0.001)\r\n            && (Math.abs(drad) < 0.01)\r\n            && (vec3.len(dtrans) < 0.01)\r\n        ){\r\n            this.reset = false;\r\n        }\r\n        this.updateCameraPos();\r\n        this.update(gl, program, width, height);\r\n    }\r\n\r\n\r\n    private updateCameraPos(){\r\n\r\n        if(this._spherical.theta > 2*pi){\r\n            this._spherical.theta=this._spherical.theta-2*pi;\r\n        }if(this._spherical.theta < 0){\r\n            this._spherical.theta=2*pi-this._spherical.theta;\r\n        }\r\n\r\n        this._position[0] = this._spherical.radius * sin(this._spherical.phi) * cos(this._spherical.theta);\r\n        this._position[1] = this._spherical.radius * sin(this._spherical.phi) * sin(this._spherical.theta);\r\n        this._position[2] = this._spherical.radius * cos(this._spherical.phi);\r\n\r\n    }\r\n\r\n    public addAngle(dtheta : number, dphi : number){\r\n\r\n        // update the latest angle\r\n        this._spherical.phi = this._spherical.phi - dphi*Math.sqrt(this._spherical.radius);\r\n        this._spherical.theta = this._spherical.theta - dtheta*Math.sqrt(this._spherical.radius);\r\n        this._spherical.phi = Math.min(Math.max(0.0001, this._spherical.phi), pi - 0.0001);\r\n        this.updateCameraPos();\r\n    }\r\n\r\n    public addRadius(dradius : number){\r\n        this._spherical.radius += dradius * 0.0005 * this._spherical.radius;\r\n        this._spherical.radius = Math.min(Math.max(2, this._spherical.radius), 35);\r\n        this.updateCameraPos();\r\n    }\r\n\r\n    public transform(dx : number, dy : number, transform_z : boolean){\r\n\r\n        if(transform_z){\r\n          this._transformation[2] = this._transformation[2] - sin(this._spherical.phi)*dy*this._spherical.radius;\r\n        }else{\r\n\r\n          this._transformation[0] = this._transformation[0] - sin(this._spherical.theta)*dx*this._spherical.radius;\r\n          this._transformation[0] = this._transformation[0] + cos(this._spherical.theta)*dy*this._spherical.radius;\r\n\r\n          this._transformation[1] = this._transformation[1] + cos(this._spherical.theta)*dx*this._spherical.radius;\r\n          this._transformation[1] = this._transformation[1] + sin(this._spherical.theta)*dy*this._spherical.radius;\r\n        }\r\n\r\n        this._transformation[0] = Math.min(Math.max(-15, this._transformation[0]), 15);\r\n        this._transformation[1] = Math.min(Math.max(-15, this._transformation[1]), 15);\r\n        this._transformation[2] = Math.min(Math.max(-15, this._transformation[2]), 15);\r\n\r\n    }\r\n\r\n    public setRay(){\r\n        mat4.invert(this._ray.toWorld, mat4.multiply(mat4.create(), this._mProj, this._mView));\r\n        vec3.subtract(this._ray.absPos, this._position, this._transformation);\r\n        vec2.normalize(this._ray.normal, [this._position[0], this._position[1]]);\r\n    }\r\n\r\n    get toWorld() : mat4{\r\n        return this._ray.toWorld;\r\n    }\r\n\r\n    get absPos() : vec3{\r\n        return this._ray.absPos;\r\n    }\r\n\r\n    get normal(){\r\n        return this._ray.normal;\r\n    }\r\n\r\n    get reset(){\r\n        return this._reset;\r\n    }\r\n    set reset(bool : boolean){\r\n        this._reset = bool;\r\n    }\r\n\r\n\r\n\r\n}","import { vec3 } from \"gl-matrix\";\r\nexport abstract class Light{\r\n\r\n\r\n    public static setLight(gl : WebGLRenderingContext, program : WebGLProgram, pos: [number, number, number] = [50, 50, 50]){\r\n\r\n        var light_pos = vec3.normalize(vec3.create(), pos);\r\n        \r\n        var uAmbientLight = <WebGLUniformLocation>gl.getUniformLocation(program, 'uAmbientLight');\r\n        var uDiffuseLight = <WebGLUniformLocation>gl.getUniformLocation(program, 'uDiffuseLight');\r\n        var uLightPosition = <WebGLUniformLocation>gl.getUniformLocation(program, 'uLightPosition');\r\n\r\n        gl.uniform3f(uAmbientLight, 0.75, 0.75, 0.75);\r\n        gl.uniform3f(uDiffuseLight, 0.35, 0.35, 0.35);\r\n        gl.uniform3f(uLightPosition, light_pos[0], light_pos[1], light_pos[2]);\r\n\r\n    }\r\n\r\n}","import * as glMatrix from \"./common.js\";\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nexport var sub = subtract;","import { glUtils } from \"../utils/glUtils\"\r\nimport { mat4, mat3, vec3 } from \"gl-matrix\";\r\n\r\nexport class Sphere{\r\n\r\n    private _rad : number;\r\n    private _SBO! : SBO;\r\n\r\n    public static SBOList : SBO[] = [];\r\n\r\n    private _state : {\r\n        position : vec3;\r\n        mvp : mat4;\r\n        nm : mat3;\r\n    }\r\n\r\n\r\n    constructor(\r\n            color : vec3 = [0.10, 0.2, 0.3],\r\n            rad : number = 0.1,\r\n            pos : vec3 = [0,0,0]\r\n        ){\r\n\r\n            this._rad = rad;\r\n            this._SBO = SBO.check(color);\r\n\r\n        this._state = {\r\n            position: pos,\r\n            mvp: mat4.create(),\r\n            nm: mat3.create()\r\n        };\r\n\r\n        this.updateMat();\r\n    }\r\n\r\n    public draw(gl: WebGLRenderingContext, program :  WebGLProgram) {\r\n\r\n        if(!this._SBO.init){\r\n            this._SBO.initBuffers(gl, program);\r\n        }\r\n\r\n        var matWorldUniformLocation = gl.getUniformLocation(program, 'mWorld');\r\n        var uNormalMatrix = gl.getUniformLocation(program, 'uNormalMatrix'); \r\n\r\n        this._SBO.bindBuffers(gl, program);\r\n\r\n        gl.uniformMatrix4fv(matWorldUniformLocation, false, this._state.mvp);\r\n        gl.uniformMatrix3fv(uNormalMatrix, false, this._state.nm);\r\n        \r\n        gl.drawElements(gl.TRIANGLES, this._SBO.numVert, gl.UNSIGNED_SHORT, 0);\r\n    };\r\n\r\n    private updateMat(){\r\n        mat4.fromTranslation(this._state.mvp, this._state.position);\r\n        mat4.scale(this._state.mvp, this._state.mvp, [this._rad, this._rad, this._rad]);\r\n        mat3.normalFromMat4(this._state.nm, this._state.mvp);\r\n    }\r\n\r\n    get color(){\r\n        return this._SBO.color;\r\n    }\r\n\r\n    get position() : vec3{\r\n        return this._state.position;\r\n    }\r\n\r\n    set position(pos : vec3){\r\n        if(!pos){\r\n            alert(\"error in Sphere.ts set position\");\r\n            return;\r\n        }\r\n       this._state.position = pos;\r\n       this.updateMat();\r\n\r\n    }\r\n\r\n    public changeColor(color : vec3){\r\n        this._SBO = SBO.check(color);\r\n    }\r\n\r\n    \r\n};\r\n\r\nexport class SBO{\r\n\r\n    private _attributes : {\r\n        aColor : Attribute;\r\n        aPosition : Attribute;\r\n        aNormal : Attribute;\r\n    };\r\n\r\n    private _indices : Uint16Array;\r\n    private _color : vec3;\r\n    private _init :boolean;\r\n\r\n    private _buffers! : { [name: string]: WebGLBuffer};\r\n    private _indexBuffer! : WebGLBuffer | null;\r\n\r\n    private _numVert! : number;\r\n\r\n    constructor(color : vec3){\r\n\r\n        this._init = false;\r\n\r\n        this._color = color;\r\n        \r\n        \r\n        const stackCount = 16;\r\n        const sectorCount = 20;\r\n        const radius = 1;\r\n\r\n        let lengthInv = 1.0 / radius;\r\n        let sectorStep = 2 * Math.PI / sectorCount;\r\n        let stackStep = Math.PI / stackCount;\r\n        let sectorAngle : number, stackAngle : number;\r\n        \r\n        var vertices : number[] = [];\r\n        var normals : number[]= [];\r\n        var colors : number[] = [];\r\n        var indices : number[] = [];\r\n\r\n\r\n\r\n        var xy: number;\r\n        var z : number;\r\n        var x : number;\r\n        var y : number;\r\n\r\n        for(let i=0; i <= stackCount; ++i)\r\n        {\r\n            stackAngle = Math.PI / 2 - i * stackStep;   // starting from pi/2 to -pi/2\r\n            xy = radius * Math.cos(stackAngle);    // r * cos(u)\r\n            z = radius * Math.sin(stackAngle);     // r * sin(u)\r\n\r\n            // add (sectorCount+1) vertices per stack\r\n            // the first and last vertices have same position and normal, but different tex coords\r\n            for(let j=0; j <= sectorCount; ++j)\r\n            {\r\n                sectorAngle = j * sectorStep;           \r\n\r\n                x = xy * Math.cos(sectorAngle);         \r\n                y = xy * Math.sin(sectorAngle);         \r\n                vertices.push(x, y, z);\r\n\r\n                normals.push(x * lengthInv, y * lengthInv, z * lengthInv);\r\n                colors.push(this._color[0], this._color[1], this._color[2], 1);\r\n\r\n            }\r\n        }\r\n\r\n        var k1 : number;\r\n        var k2 : number;\r\n\r\n\r\n        for(let i=0; i < stackCount; ++i)\r\n        {\r\n            k1 = i * (sectorCount + 1);            \r\n            k2 = k1 + sectorCount + 1;           \r\n\r\n            for(let j=0; j < sectorCount; ++j, ++k1, ++k2)\r\n            {\r\n                // 2 triangles per sector excluding 1st and last stacks\r\n                if(i != 0)\r\n                {\r\n                    // this.addIndices(kk, k1, k2, k1+1);  // k1---k2---k1+1\r\n                    // kk += 3;\r\n                    indices.push(k1, k2, k1+1);\r\n                }\r\n\r\n                if(i != (stackCount-1))\r\n                {\r\n                    // this.addIndices(kk, k1+1, k2, k2+1);// k1+1---k2---k2+1\r\n                    // kk += 3;\r\n                    indices.push(k1+1, k2, k2+1);\r\n                }\r\n            }\r\n        }\r\n\r\n        this._attributes = {\r\n            aColor: {\r\n                size:4,\r\n                offset:0,\r\n                bufferData: new Float32Array(colors),\r\n            },\r\n            aPosition: {\r\n                size:3,\r\n                offset:0,\r\n                bufferData: new Float32Array(vertices),\r\n            },\r\n            aNormal: {\r\n                size:3,\r\n                offset:0,\r\n                bufferData: new Float32Array(normals),\r\n            },\r\n        };\r\n    \r\n        this._indices = new Uint16Array(indices);\r\n        this._numVert = this._indices.length;\r\n    }\r\n\r\n    public initBuffers(gl: WebGLRenderingContext, program :  WebGLProgram){\r\n        [this._buffers, this._indexBuffer] = glUtils.initBuffers(gl, program, this._attributes, this._indices);\r\n        this._init = true;\r\n    }\r\n\r\n    public bindBuffers(gl: WebGLRenderingContext, program : WebGLProgram){\r\n        glUtils.bindBuffers(gl, program, this._attributes, this._buffers, this._indexBuffer);\r\n    }\r\n\r\n    public static check(color : vec3) : SBO{\r\n        var temp: SBO;\r\n        var i;\r\n        for(i = 0; i< Sphere.SBOList.length; i++){\r\n            temp = Sphere.SBOList[i];\r\n            if(vec3.dist(temp.color, color) < 0.0001){\r\n                return temp;\r\n            }\r\n        }\r\n        \r\n        const sbo = new SBO(color);\r\n        Sphere.SBOList.push(sbo);\r\n        return sbo;\r\n        \r\n    }\r\n\r\n    get color(){\r\n        return this._color;\r\n    }\r\n\r\n    get init(){\r\n        return this._init; \r\n    }\r\n\r\n    get numVert(){\r\n        return this._numVert;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\n * Returns a string representation of a quatenion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var clone = vec4.clone;\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var fromValues = vec4.fromValues;\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\n\nexport var copy = vec4.copy;\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\n\nexport var set = vec4.set;\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\n\nexport var add = vec4.add;\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\n\nexport var scale = vec4.scale;\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = vec4.dot;\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\n\nexport var lerp = vec4.lerp;\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport var length = vec4.length;\n/**\n * Alias for {@link quat.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\n\nexport var normalize = vec4.normalize;\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat} a The first vector.\n * @param {ReadonlyQuat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var equals = vec4.equals;\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import { glUtils } from \"../utils/glUtils\"\r\nimport { mat4, mat3, vec3, quat } from \"gl-matrix\";\r\n\r\nexport class Cylinder{\r\n\r\n    private _CBO! : CBO;\r\n    public static CBOList : CBO[] = [];\r\n\r\n\r\n    private _state : {\r\n        start : vec3;\r\n        end : vec3;\r\n        rotQuat : quat;\r\n        scale : vec3;\r\n        mvp : mat4;\r\n        nm : mat3;\r\n    }\r\n\r\n\r\n\r\n    constructor(\r\n            color : vec3 = [0.18, 0.1, 0.18],\r\n            start : vec3 = [0,0,0],\r\n            end : vec3 = [0,0,1]\r\n        ){\r\n\r\n\r\n        this._CBO = CBO.check(color);\r\n\r\n        this._state = {\r\n            start: start,\r\n            end: end,\r\n            rotQuat: quat.create(),\r\n            scale: vec3.create(),\r\n            mvp: mat4.create(),\r\n            nm: mat3.create()\r\n        };\r\n\r\n        this.updateMat();\r\n    \r\n    }\r\n\r\n\r\n\r\n\r\n    public draw(gl: WebGLRenderingContext, program :  WebGLProgram) {\r\n\r\n        if(!this._CBO.init){\r\n            this._CBO.initBuffers(gl, program);\r\n        }\r\n\r\n        var matWorldUniformLocation = gl.getUniformLocation(program, 'mWorld');\r\n        var uNormalMatrix = gl.getUniformLocation(program, 'uNormalMatrix'); \r\n\r\n        this._CBO.bindBuffers(gl, program);\r\n        \r\n        gl.uniformMatrix4fv(matWorldUniformLocation, false, this._state.mvp);\r\n        gl.uniformMatrix3fv(uNormalMatrix, false, this._state.nm);\r\n        \r\n        gl.drawElements(gl.TRIANGLES, this._CBO.numVert, gl.UNSIGNED_BYTE, 0);\r\n    };\r\n\r\n    get color() : vec3{\r\n        return this._CBO.color;\r\n    }\r\n\r\n    get start() : vec3{\r\n        return this._state.start;\r\n    }\r\n    get end() : vec3{\r\n        return this._state.end;\r\n    }\r\n\r\n    private updateMat(){\r\n        vec3.subtract(\r\n            this._state.scale,\r\n            this._state.end,\r\n            this._state.start\r\n        );\r\n\r\n        quat.rotationTo(\r\n            this._state.rotQuat,\r\n            [0,0,1],\r\n            vec3.normalize(vec3.create(), this._state.scale)\r\n        );\r\n \r\n        mat4.fromRotationTranslationScale(\r\n            this._state.mvp, \r\n            this._state.rotQuat, \r\n            this._state.start, \r\n            [1,1,vec3.length(this._state.scale)]\r\n        );\r\n\r\n        mat3.normalFromMat4(this._state.nm, this._state.mvp);\r\n    }\r\n\r\n    set start(start : vec3){\r\n        if(!start){\r\n            alert(\"error in Cylinder.ts set start\");\r\n            return;\r\n        }\r\n       this._state.start = start;\r\n\r\n       this.updateMat();\r\n    }\r\n\r\n    set end(end : vec3){\r\n        if(!end){\r\n            alert(\"error in Cylinder.ts set end\");\r\n            return;\r\n        }\r\n       this._state.end = end;\r\n\r\n       this.updateMat();\r\n    }\r\n\r\n    public changeColor(color : vec3){\r\n        this._CBO = CBO.check(color);\r\n    }\r\n    \r\n};\r\n\r\n\r\nexport class CBO{\r\n\r\n    private _attributes : {\r\n        aColor : Attribute;\r\n        aPosition : Attribute;\r\n        aNormal : Attribute;\r\n    };\r\n\r\n    private _indices : Uint8Array;\r\n    private _color : vec3;\r\n    private _init :boolean;\r\n\r\n    private _buffers! : { [name: string]: WebGLBuffer};\r\n    private _indexBuffer! : WebGLBuffer | null;\r\n\r\n    private _numVert! : number;\r\n\r\n    constructor(color : vec3){\r\n\r\n        this._init = false;\r\n\r\n        this._color = color;\r\n        \r\n        \r\n\r\n        const sectorCount = 16;\r\n        const rad = 0.03;\r\n\r\n        let sectorAngle = 0;\r\n\r\n\r\n        var vertices : number[] = [];\r\n        var normals : number[]= [];\r\n        var colors : number[] = [];\r\n        var indices : number[] = [];\r\n\r\n        var z : number;\r\n        var x : number;\r\n        var y : number;\r\n\r\n        for(let i=0; i <= 1; ++i)\r\n        {\r\n            z = i;\r\n\r\n            for(let j=0, k=0; j <= sectorCount; ++j, k+=3)\r\n            {\r\n                sectorAngle = j/sectorCount * 2 * Math.PI;\r\n\r\n                x = Math.cos(sectorAngle);\r\n                y = Math.sin(sectorAngle)\r\n\r\n                vertices.push(rad * x, rad * y, z);\r\n                normals.push(x, y, 0)\r\n\r\n\r\n                colors.push(this.color[0], this.color[1], this.color[2], 1);\r\n\r\n            }\r\n        }\r\n        \r\n\r\n        var k1 : number;\r\n        var k2 : number;\r\n\r\n        for(let i=0; i < 1; ++i)\r\n        {\r\n            k1 = i * (sectorCount + 1);     // bebinning of current stack\r\n            k2 = k1 + sectorCount + 1;      // beginning of next stack\r\n\r\n            for(let j=0; j < sectorCount; ++j, ++k1, ++k2)\r\n            {\r\n                // 2 trianles per sector\r\n                indices.push(k1, k1 + 1, k2);\r\n                indices.push(k2, k1 + 1, k2 + 1);\r\n\r\n            }\r\n        }\r\n\r\n        this._attributes = {\r\n            aColor: {\r\n                size:4,\r\n                offset:0,\r\n                bufferData: new Float32Array(colors),\r\n            },\r\n            aNormal: {\r\n                size:3,\r\n                offset:0,\r\n                bufferData: new Float32Array(normals),\r\n            },\r\n            aPosition: {\r\n                size:3,\r\n                offset:0,\r\n                bufferData: new Float32Array(vertices),\r\n            }\r\n        };\r\n    \r\n        this._indices = new Uint8Array(indices);\r\n\r\n        this._numVert = this._indices.length;\r\n    }\r\n\r\n    public initBuffers(gl: WebGLRenderingContext, program :  WebGLProgram){\r\n        [this._buffers, this._indexBuffer] = glUtils.initBuffers(gl, program, this._attributes, this._indices);\r\n        this._init = true;\r\n    }\r\n\r\n    public bindBuffers(gl: WebGLRenderingContext, program : WebGLProgram){\r\n        glUtils.bindBuffers(gl, program, this._attributes, this._buffers, this._indexBuffer);\r\n    }\r\n\r\n    public static check(color : vec3) : CBO{\r\n        var temp: CBO;\r\n        var i;\r\n        for(i = 0; i< Cylinder.CBOList.length; i++){\r\n            temp = Cylinder.CBOList[i];\r\n            if(vec3.dist(temp.color, color) < 0.0001){\r\n                return temp;\r\n            }\r\n        }\r\n        \r\n        const cbo = new CBO(color);\r\n        Cylinder.CBOList.push(cbo);\r\n        return cbo;\r\n        \r\n    }\r\n\r\n    get color(){\r\n        return this._color;\r\n    }\r\n\r\n    get init(){\r\n        return this._init; \r\n    }\r\n\r\n    get numVert(){\r\n        return this._numVert;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","\r\n\r\nimport { glUtils } from \"../utils/glUtils\"\r\nimport { mat4, mat3 } from \"gl-matrix\";\r\n\r\nexport class XYPlane {\r\n    // private id : string;\r\n    private _opacity1 : number;\r\n    private _opacity2 : number;\r\n    private _attributes1 : {\r\n        aColor : Attribute;\r\n        aPosition : Attribute;\r\n        aNormal : Attribute;\r\n        \r\n    };\r\n\r\n    private _attributes2 : {\r\n        aColor : Attribute;\r\n        aPosition : Attribute;\r\n        aNormal : Attribute;\r\n        \r\n    };\r\n    private _indices1 : Uint8Array;\r\n\r\n    private _buffers1! : { [name: string]: WebGLBuffer};\r\n    private _indexBuffer1! : WebGLBuffer | null;\r\n\r\n    private _buffers2! : { [name: string]: WebGLBuffer};\r\n\r\n    private _state : {\r\n        mvp : mat4;\r\n        nm : mat3;\r\n        n1 : number;\r\n        n2 : number;\r\n    }\r\n\r\n\r\n    // Initialization\r\n    constructor(){\r\n        this._opacity1 = 0.24;\r\n        this._opacity2 = 0.40;\r\n        this._attributes1 =  {\r\n            aColor: {\r\n                size:4,\r\n                offset:0,\r\n                bufferData: new Float32Array([\r\n                    0, 0, 0, this._opacity1,\r\n                    0, 0, 0, this._opacity1,\r\n                    0, 0, 0, this._opacity1,\r\n                    0, 0, 0, this._opacity1,\r\n                ]),\r\n            },\r\n            aNormal: {\r\n                size:3,\r\n                offset:0,\r\n                bufferData: new Float32Array([\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                ]),\r\n            },\r\n            aPosition: {\r\n                size:3,\r\n                offset:0,\r\n                bufferData: new Float32Array([       \r\n                    5, 5, 0.0,\r\n                    5, -5, 0.0,\r\n                    -5, 5, 0.0,\r\n                    -5, -5, 0.0,\r\n                ]),\r\n            },\r\n        };\r\n        this._indices1 = new Uint8Array([\r\n            0,1,2, 1,2,3,\r\n        ]);\r\n\r\n        this._attributes2 =  {\r\n            aColor: {\r\n                size:4,\r\n                offset:0,\r\n                bufferData: new Float32Array([\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                    0, 0, 0, this._opacity2,\r\n                ]),\r\n            },\r\n            aNormal: {\r\n                size:3,\r\n                offset:0,\r\n                bufferData: new Float32Array([\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                    0, 0, 1,\r\n                ]),\r\n            },\r\n            aPosition: {\r\n                size:3,\r\n                offset:0,\r\n                bufferData: new Float32Array([       \r\n                    5.0, 0.0, 0.0,\r\n                    -5.0, 0.0, 0.0,\r\n                    5.0, 0.5, 0.0,\r\n                    -5.0, 0.5, 0.0,\r\n                    5.0, 1.0, 0.0,\r\n                    -5.0, 1.0, 0.0,\r\n                    5.0, 1.5, 0.0,\r\n                    -5.0, 1.5, 0.0,\r\n                    5.0, 2.0, 0.0,\r\n                    -5.0, 2.0, 0.0,\r\n                    5.0, 2.5, 0.0,\r\n                    -5.0, 2.5, 0.0,\r\n                    5.0, 3.0, 0.0,\r\n                    -5.0, 3.0, 0.0,\r\n                    5.0, 3.5, 0.0,\r\n                    -5.0, 3.5, 0.0,\r\n                    5.0, 4.0, 0.0,\r\n                    -5.0, 4.0, 0.0,\r\n                    5.0, 4.5, 0.0,\r\n                    -5.0, 4.5, 0.0,\r\n\r\n                    5.0, -0.5, 0.0,\r\n                    -5.0, -0.5, 0.0,\r\n                    5.0, -1.0, 0.0,\r\n                    -5.0, -1.0, 0.0,\r\n                    5.0, -1.5, 0.0,\r\n                    -5.0, -1.5, 0.0,\r\n                    5.0, -2.0, 0.0,\r\n                    -5.0, -2.0, 0.0,\r\n                    5.0, -2.5, 0.0,\r\n                    -5.0, -2.5, 0.0,\r\n                    5.0, -3.0, 0.0,\r\n                    -5.0, -3.0, 0.0,\r\n                    5.0, -3.5, 0.0,\r\n                    -5.0, -3.5, 0.0,\r\n                    5.0, -4.0, 0.0,\r\n                    -5.0, -4.0, 0.0,\r\n                    5.0, -4.5, 0.0,\r\n                    -5.0, -4.5, 0.0,\r\n\r\n                    0.0, 5.0, 0.0,\r\n                    0.0, -5.0, 0.0,\r\n                    0.5, 5.0, 0.0,\r\n                    0.5, -5.0, 0.0,\r\n                    1.0, 5.0, 0.0,\r\n                    1.0, -5.0, 0.0,\r\n                    1.5, 5.0, 0.0,\r\n                    1.5, -5.0, 0.0,\r\n                    2.0, 5.0, 0.0,\r\n                    2.0, -5.0, 0.0,\r\n                    2.5, 5.0, 0.0,\r\n                    2.5, -5.0, 0.0,\r\n                    3.0, 5.0, 0.0,\r\n                    3.0, -5.0, 0.0,\r\n                    3.5, 5.0, 0.0,\r\n                    3.5, -5.0, 0.0,\r\n                    4.0, 5.0, 0.0,\r\n                    4.0, -5.0, 0.0,\r\n                    4.5, 5.0, 0.0,\r\n                    4.5, -5.0, 0.0,\r\n                    \r\n                    -0.5, 5.0, 0.0,\r\n                    -0.5, -5.0, 0.0,\r\n                    -1.0, 5.0, 0.0,\r\n                    -1.0, -5.0, 0.0,\r\n                    -1.5, 5.0, 0.0,\r\n                    -1.5, -5.0, 0.0,\r\n                    -2.0, 5.0, 0.0,\r\n                    -2.0, -5.0, 0.0,\r\n                    -2.5, 5.0, 0.0,\r\n                    -2.5, -5.0, 0.0,\r\n                    -3.0, 5.0, 0.0,\r\n                    -3.0, -5.0, 0.0,\r\n                    -3.5, 5.0, 0.0,\r\n                    -3.5, -5.0, 0.0,\r\n                    -4.0, 5.0, 0.0,\r\n                    -4.0, -5.0, 0.0,\r\n                    -4.5, 5.0, 0.0,\r\n                    -4.5, -5.0, 0.0,\r\n                ]),\r\n            },\r\n\r\n        };\r\n\r\n        this._state = {\r\n            mvp : mat4.create(),\r\n            nm: mat3.create(),\r\n            n1 : this._indices1.length,\r\n            n2 : 76,\r\n        };\r\n\r\n        mat4.identity(this._state.mvp);\r\n        this._state.nm = mat3.normalFromMat4(mat3.create(), this._state.mvp);\r\n    }\r\n    \r\n    \r\n    public draw(gl: WebGLRenderingContext, program :  WebGLProgram) {\r\n\r\n        if(!this._buffers1){\r\n            [this._buffers1, this._indexBuffer1] = glUtils.initBuffers(gl, program, this._attributes1, this._indices1);\r\n            [this._buffers2,] = glUtils.initBuffers(gl, program, this._attributes2);\r\n        }\r\n\r\n        var matWorldUniformLocation = gl.getUniformLocation(program, 'mWorld');\r\n\r\n        var uNormalMatrix = gl.getUniformLocation(program, 'uNormalMatrix'); \r\n\r\n\r\n        gl.uniformMatrix4fv(matWorldUniformLocation, false, this._state.mvp);\r\n        gl.uniformMatrix3fv(uNormalMatrix, false, this._state.nm);\r\n\r\n\r\n        glUtils.bindBuffers(gl, program, this._attributes1, this._buffers1, this._indexBuffer1);\r\n        gl.drawElements(gl.TRIANGLES, this._state.n1, gl.UNSIGNED_BYTE, 0);\r\n\r\n        glUtils.bindBuffers(gl, program, this._attributes2, this._buffers2);\r\n        gl.drawArrays(gl.LINES, 0, this._state.n2);\r\n    };\r\n\r\n    \r\n};\r\n\r\n","\r\n\r\nimport { glUtils } from \"../utils/glUtils\"\r\nimport { mat4, mat3, vec3, quat } from \"gl-matrix\";\r\n\r\nexport class VerticalArrows {\r\n    private _arrows : Arrow[];\r\n    private _position : vec3;\r\n\r\n    constructor(){\r\n        this._arrows = [new Arrow([0,0,1]), new Arrow([0,0,-1])];\r\n        this._position = [0,0,0];\r\n    }\r\n\r\n    public draw(gl: WebGLRenderingContext, program :  WebGLProgram) {\r\n\r\n        this._arrows[0].draw(gl, program);\r\n        this._arrows[1].draw(gl, program);\r\n    }\r\n\r\n    set position(pos: vec3){\r\n        if(!pos){\r\n            throw new Error(\"error in Arrow.ts set position\");\r\n        }\r\n        this._arrows[0].position = pos;\r\n        this._arrows[1].position = pos;\r\n\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport class PlanarArrows {\r\n    private _arrows : Arrow[];\r\n    private _position : vec3;\r\n    \r\n    constructor(){\r\n        this._arrows = [new Arrow([1,0,0]), new Arrow([-1,0,0]), new Arrow([0,1,0]), new Arrow([0,-1,0])];\r\n        this._position = [0,0,0];\r\n    }\r\n\r\n    public draw(gl: WebGLRenderingContext, program :  WebGLProgram) {\r\n\r\n        this._arrows[0].draw(gl, program);\r\n        this._arrows[1].draw(gl, program);\r\n        this._arrows[2].draw(gl, program);\r\n        this._arrows[3].draw(gl, program);\r\n    };\r\n\r\n    set position(pos: vec3){\r\n        if(!pos){\r\n            throw new Error(\"error in Arrow.ts set position\");\r\n        }\r\n        this._arrows[0].position = pos;\r\n        this._arrows[1].position = pos;\r\n        this._arrows[2].position = pos;\r\n        this._arrows[3].position = pos;\r\n    }\r\n    \r\n\r\n}\r\n\r\nexport class Arrow {\r\n    // private id : string;\r\n\r\n    private _attributes : {\r\n        aColor : Attribute;\r\n        aPosition : Attribute;\r\n        aNormal : Attribute;\r\n    };\r\n    private _indices : Uint8Array;\r\n    private _state : {\r\n        mvp : mat4;\r\n        nm : mat3;\r\n        n : number;\r\n    }\r\n\r\n\r\n    // Initialization\r\n    constructor(\r\n        normal : vec3 = [0,0,0],\r\n    ){\r\n\r\n    this._state = {\r\n        mvp: mat4.create(),\r\n        nm: mat3.create(),\r\n        n : 0,\r\n    };\r\n\r\n    const color: vec3 = [0.3, 0.3, 0.3];\r\n    const opacity: number = 0.3;\r\n\r\n\r\n\r\n    const sectorCount = 16;\r\n\r\n    const offset = 0.2;\r\n    const shaftLen = 0.2;\r\n    const shaftRad = 0.04;\r\n    const coneLen = 0.2;\r\n    const coneRad = 0.08;\r\n\r\n    let sectorAngle = 0;\r\n\r\n\r\n    var vertices : number[] = [];\r\n    var normals : number[]= [];\r\n    var colors : number[] = [];\r\n    var indices : number[] = [];\r\n\r\n    const normQuat = quat.rotationTo(\r\n        quat.create(),\r\n        [0,0,1],\r\n        normal\r\n    );\r\n\r\n    var temp : vec3 = vec3.create();\r\n    var z : number;\r\n    var x : number;\r\n    var y : number;\r\n\r\n    for(let i=0; i <= 1; ++i)\r\n    {\r\n        z = i*shaftLen + offset;\r\n\r\n        for(let j=0, k=0; j <= sectorCount; ++j, k+=3)\r\n        {\r\n            sectorAngle = j/sectorCount * 2 * Math.PI;\r\n\r\n            x = Math.cos(sectorAngle);\r\n            y = Math.sin(sectorAngle)\r\n\r\n            vec3.transformQuat(temp, [shaftRad * x, shaftRad * y, z], normQuat);\r\n\r\n            vertices.push(temp[0], temp[1], temp[2]);\r\n\r\n            vec3.transformQuat(temp, [x, y, 0], normQuat);\r\n\r\n            normals.push(temp[0], temp[1], temp[2]);\r\n\r\n            colors.push(color[0], color[1], color[2], opacity);\r\n\r\n        }\r\n    }\r\n    \r\n\r\n    var k1 : number;\r\n    var k2 : number;\r\n\r\n    for(let i=0; i < 1; ++i)\r\n    {\r\n        k1 = i * (sectorCount + 1);     // bebinning of current stack\r\n        k2 = k1 + sectorCount + 1;      // beginning of next stack\r\n\r\n        for(let j=0; j < sectorCount; ++j, ++k1, ++k2)\r\n        {\r\n            // 2 trianles per sector\r\n            indices.push(k1, k1 + 1, k2);\r\n            indices.push(k2, k1 + 1, k2 + 1);\r\n\r\n        }\r\n    }\r\n\r\n    for(let i=0; i <= 1; ++i)\r\n    {\r\n        z = offset + shaftLen;\r\n\r\n        for(let j=0, k=0; j <= sectorCount; ++j, k+=3)\r\n        {\r\n            sectorAngle = j/sectorCount * 2 * Math.PI;\r\n\r\n            x = Math.cos(sectorAngle);\r\n            y = Math.sin(sectorAngle)\r\n\r\n            if(i == 0){\r\n                vec3.transformQuat(temp, [shaftRad * x, shaftRad * y, z], normQuat);\r\n            }else{\r\n                vec3.transformQuat(temp, [coneRad * x, coneRad * y, z], normQuat);\r\n            }\r\n\r\n\r\n            vertices.push(temp[0], temp[1], temp[2]);\r\n\r\n            vec3.transformQuat(temp, [0, 0, -1], normQuat);\r\n\r\n            normals.push(temp[0], temp[1], temp[2]);\r\n\r\n            colors.push(color[0], color[1], color[2], opacity);\r\n\r\n        }\r\n    }\r\n\r\n    for(let i=2; i < 3; ++i)\r\n    {\r\n        k1 = i * (sectorCount + 1);     // bebinning of current stack\r\n        k2 = k1 + sectorCount + 1;      // beginning of next stack\r\n\r\n        for(let j=0; j < sectorCount; ++j, ++k1, ++k2)\r\n        {\r\n            // 2 trianles per sector\r\n            indices.push(k1, k1 + 1, k2);\r\n            indices.push(k2, k1 + 1, k2 + 1);\r\n\r\n        }\r\n    }\r\n    \r\n\r\n\r\n\r\n    for(let i=0; i <= 1; ++i)\r\n    {\r\n        z = i*coneLen + offset + shaftLen;\r\n\r\n        for(let j=0, k=0; j <= sectorCount; ++j, k+=3)\r\n        {\r\n            sectorAngle = j/sectorCount * 2 * Math.PI;\r\n\r\n            x = Math.cos(sectorAngle);\r\n            y = Math.sin(sectorAngle)\r\n\r\n            if(i == 0){\r\n                vec3.transformQuat(temp, [coneRad * x, coneRad * y, z], normQuat);\r\n            }else{\r\n                vec3.transformQuat(temp, [0, 0, z], normQuat);\r\n            }\r\n\r\n            vertices.push(temp[0], temp[1], temp[2]);\r\n\r\n            vec3.transformQuat(temp, [x * coneLen, y * coneLen, coneRad], normQuat);\r\n            vec3.normalize(temp, temp);\r\n\r\n            normals.push(temp[0], temp[1], temp[2]);\r\n\r\n            colors.push(color[0], color[1], color[2], opacity);\r\n\r\n        }\r\n    }\r\n\r\n    for(let i=4; i < 5; ++i)\r\n    {\r\n        k1 = i * (sectorCount + 1);     // bebinning of current stack\r\n        k2 = k1 + sectorCount + 1;      // beginning of next stack\r\n\r\n        for(let j=0; j < sectorCount; ++j, ++k1, ++k2)\r\n        {\r\n            // 2 trianles per sector\r\n            indices.push(k1, k1 + 1, k2);\r\n            indices.push(k2, k1 + 1, k2 + 1);\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    this._attributes = {\r\n        aColor: {\r\n            size:4,\r\n            offset:0,\r\n            bufferData: new Float32Array(colors),\r\n        },\r\n        aNormal: {\r\n            size:3,\r\n            offset:0,\r\n            bufferData: new Float32Array(normals),\r\n        },\r\n        aPosition: {\r\n            size:3,\r\n            offset:0,\r\n            bufferData: new Float32Array(vertices),\r\n        },\r\n\r\n    };\r\n\r\n    this._indices = new Uint8Array(indices);\r\n\r\n\r\n\r\n    this._state.n = this._indices.length;\r\n    mat4.identity(this._state.mvp);\r\n    mat3.normalFromMat4(this._state.nm, this._state.mvp);\r\n\r\n}\r\n    \r\n    \r\n    public draw(gl: WebGLRenderingContext, program :  WebGLProgram) {\r\n\r\n\r\n        var matWorldUniformLocation = gl.getUniformLocation(program, 'mWorld');\r\n        var uNormalMatrix = gl.getUniformLocation(program, 'uNormalMatrix'); \r\n\r\n        glUtils.renderBuffers(gl, program, this._attributes, this._indices);\r\n\r\n        gl.uniformMatrix4fv(matWorldUniformLocation, false, this._state.mvp);\r\n\r\n        \r\n        gl.uniformMatrix3fv(uNormalMatrix, false, this._state.nm);\r\n    \r\n        gl.drawElements(gl.TRIANGLES, this._state.n, gl.UNSIGNED_BYTE, 0);\r\n    };\r\n\r\n    set position(pos : vec3){\r\n        mat4.fromTranslation(this._state.mvp, pos);\r\n        mat3.normalFromMat4(this._state.nm, this._state.mvp);\r\n    }\r\n\r\n    \r\n};\r\n\r\n","import { glUtils } from \"../utils/glUtils\"\r\nimport { mat4, vec3 } from \"gl-matrix\";\r\n\r\n\r\n\r\nconst length = 0.125\r\n\r\n\r\nexport class Guide{\r\n\r\n    private _opacity : number;\r\n    private _attributes : {\r\n        aColor : Attribute;\r\n        aPosition : Attribute;\r\n        aNormal : Attribute;\r\n    };\r\n\r\n\r\n    private _color : vec3;\r\n\r\n    \r\n\r\n    private _state : {\r\n        position : vec3;\r\n        length : number;\r\n        mvp : mat4;\r\n        n : number;\r\n    }\r\n\r\n\r\n\r\n    constructor(){\r\n\r\n        this._opacity = 0.8;\r\n        this._color = [0.2,0.2,0.2];\r\n\r\n\r\n\r\n\r\n        var vertices : number[] = [];\r\n        var normals : number[]= [];\r\n        var colors : number[] = [];\r\n\r\n\r\n        for(let i=0; i <= 40; ++i)\r\n        {\r\n            vertices.push(0, 0, i * length);\r\n            normals.push(0, 0, 0)\r\n            colors.push(this._color[0], this._color[1], this._color[2], this._opacity);\r\n        }\r\n        \r\n\r\n        this._attributes = {\r\n            aColor: {\r\n                size:4,\r\n                offset:0,\r\n                bufferData: new Float32Array(colors),\r\n            },\r\n            aNormal: {\r\n                size:3,\r\n                offset:0,\r\n                bufferData: new Float32Array(normals),\r\n            },\r\n            aPosition: {\r\n                size:3,\r\n                offset:0,\r\n                bufferData: new Float32Array(vertices),\r\n            },\r\n        };\r\n    \r\n\r\n\r\n        this._state = {\r\n            position:[0,0,0],\r\n            length:0,\r\n            mvp: mat4.create(),\r\n            n : 0,\r\n        };\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    public draw(gl: WebGLRenderingContext, program :  WebGLProgram) {\r\n        \r\n        var matWorldUniformLocation = gl.getUniformLocation(program, 'mWorld');\r\n\r\n\r\n        glUtils.renderBuffers(gl, program, this._attributes);\r\n        \r\n\r\n        gl.uniformMatrix4fv(matWorldUniformLocation, false, this._state.mvp);\r\n\r\n        gl.drawArrays(gl.LINES, 0, this._state.n);\r\n    };\r\n\r\n\r\n    set position(pos : vec3){\r\n        if(!pos){\r\n            throw new Error(\"error in Cylinder.ts set start\");\r\n        }\r\n        this._state.position[0] = pos[0];\r\n        this._state.position[1] = pos[1];\r\n        this._state.length = pos[2];\r\n\r\n        mat4.fromScaling(this._state.mvp , [1,1,Math.sign(this._state.length)]);\r\n        mat4.translate(this._state.mvp , this._state.mvp, this._state.position);\r\n\r\n        this._state.n = Math.floor(Math.abs(this._state.length)/length +1.5)\r\n        this._state.n -= this._state.n%2;\r\n\r\n    }\r\n\r\n    \r\n};\r\n","import { Sphere, SBO } from \"../objects/Sphere\"\r\nimport { Cylinder } from \"../objects/Cylinder\"\r\nimport { XYPlane } from \"../objects/XYPlane\"\r\nimport { PlanarArrows, VerticalArrows } from \"../objects/Arrow\"\r\nimport { Guide } from \"../objects/Guide\"\r\nimport { vec2, vec3 } from \"gl-matrix\";\r\n\r\nconst adjacent = 0.25;\r\n\r\n\r\nexport class LinkedKnot{\r\n\r\n    private _nodeStack : Stack; \r\n    private _edgeStack : Stack; \r\n    private _nodeNum : number;\r\n    private _edgeNum : number;\r\n    private _isKnot : boolean;\r\n    private _nodeArr : vec3[];\r\n\r\n    private _transform_z : boolean;\r\n\r\n    private _selected : Node | Edge | null;\r\n\r\n    private _xyPlane : XYPlane;\r\n    private _planeArrows : PlanarArrows;\r\n    private _verticalArrows : VerticalArrows;\r\n\r\n    private _guide : Guide;\r\n\r\n    private _overlapNode : Node | null;\r\n\r\n    private _drawingTool : DrawingTool;\r\n\r\n\r\n    constructor(){\r\n        this._nodeStack = new Stack();\r\n\r\n        this._edgeStack = new Stack();\r\n        this._nodeNum = 0;\r\n        this._edgeNum = 0;\r\n        this._isKnot =  false;\r\n        this._nodeArr = [];\r\n\r\n        this._transform_z = false;\r\n\r\n        this._selected = null;\r\n\r\n        this._xyPlane = new XYPlane();\r\n        this._planeArrows =  new PlanarArrows();\r\n        this._verticalArrows = new VerticalArrows();\r\n\r\n        this._guide = new Guide();\r\n\r\n        this._overlapNode = null;\r\n        this._drawingTool = new DrawingTool(this);\r\n        this._drawingTool.initCallback();\r\n\r\n    }\r\n\r\n    public deleteData(){\r\n        this._nodeStack = new Stack();\r\n        this._edgeStack = new Stack();\r\n        this._nodeNum = 0;\r\n        this._edgeNum = 0;\r\n        this._isKnot =  false;\r\n        this._nodeArr = [];\r\n        this._selected = null;\r\n        this._drawingTool.reset();\r\n    }\r\n\r\n\r\n    public insert(){\r\n        /*\r\n            insert a node.\r\n        */\r\n        var pos : vec3= [0,0,0]\r\n        if(this.selectedNode){\r\n            // @ts-ignore\r\n            pos = this.selected.object.position;\r\n            // @ts-ignore\r\n            this._overlapNode = this.selected;\r\n        }\r\n\r\n\r\n        const index = this._nodeStack.available();\r\n        if(index > 255){\r\n            alert(\"Can only have at most 255 Nodes\");\r\n            return;\r\n        }\r\n\r\n        const node = new Node(pos);\r\n        this._nodeStack.insert(\r\n            node,\r\n            index\r\n        );\r\n        this.nodeNum++;\r\n        this._isKnot =  false;\r\n        this.selected = node;\r\n    }\r\n\r\n    public connect(prev : Node, next : Node){\r\n\r\n        const index = this._edgeStack.available();\r\n        if(index > 255){\r\n            alert(\"Can only have at most 255 Edges\");\r\n            return;\r\n        }\r\n\r\n        var edge : Edge;\r\n\r\n        if(!prev.curNext && !next.prevCur){\r\n            edge = new Edge(prev, next);\r\n        } else if (!prev.prevCur && !next.curNext){\r\n            edge = new Edge(next, prev);\r\n        } else if(!prev.curNext && !next.curNext){\r\n            LinkedKnot.reverse(next);\r\n            edge = new Edge(prev, next);\r\n        }else if(!prev.prevCur && !next.prevCur){\r\n            LinkedKnot.reverse(prev);\r\n            edge = new Edge(prev, next);\r\n        }else{\r\n            alert(\"Nodes can only have 2 edges\");\r\n            return;\r\n        }\r\n        this._edgeStack.insert(\r\n            edge,\r\n            index\r\n        );\r\n        this.edgeNum++;\r\n\r\n        this.checkKnot();\r\n\r\n    }\r\n\r\n    public subdivide(){\r\n        if(this.selected instanceof Edge){\r\n            const startNode : Node = this.selected.startNode;\r\n            const endNode : Node = this.selected.endNode;\r\n            const pos : vec3 = vec3.scale(vec3.create(), vec3.add(vec3.create(), endNode.object.position, startNode.object.position), 1/2);\r\n            this.delete();\r\n            this.insert();\r\n            // @ts-ignore\r\n            this.selected.object.position = pos;\r\n            // @ts-ignore\r\n            this.connect(this.selected, endNode);            \r\n            // @ts-ignore\r\n            this.connect(startNode, this.selected);\r\n            // @ts-ignore\r\n            this._verticalArrows.position = this.selected.object.position;\r\n            // @ts-ignore\r\n            this._planeArrows.position = this.selected.object.position;\r\n        }\r\n    }\r\n\r\n    private connected(prev : Node, next : Node) : boolean{\r\n        return (((prev.next instanceof Node) && ((prev.next === next.next) || (prev.next === next.prev))) || ((prev.prev instanceof Node) && ((prev.prev === next.next) || (prev.prev === next.prev))));\r\n\r\n    }\r\n\r\n\r\n    public delete(object : Node | Edge | null = this.selected){\r\n\r\n        if(object instanceof Node){\r\n            \r\n            this._nodeStack.delete(object);\r\n            this.nodeNum--;\r\n            if(object.prevCur){\r\n                this._edgeStack.delete(object.prevCur);\r\n                this.edgeNum--;\r\n            }\r\n            if(object.curNext){\r\n                this._edgeStack.delete(object.curNext);\r\n                this.edgeNum--;\r\n            }\r\n            object.delete();\r\n        }\r\n        else if(object instanceof Edge){\r\n            object.delete();\r\n            this._edgeStack.delete(object);\r\n            this.edgeNum--;\r\n        }\r\n\r\n        this.selected = null;\r\n        this.checkKnot();\r\n    }\r\n\r\n    private static reverse(node : Node){\r\n        var prev : Node;\r\n        var curr : Node | null =  node;\r\n    \r\n        if(node.next){\r\n            do{\r\n                prev = curr;\r\n                curr = curr.next;\r\n\r\n                prev.curNext?.reverse();\r\n                prev.reverse();\r\n\r\n            }while(curr)\r\n        }else if(node.prev){\r\n            do{\r\n\r\n                prev = curr;\r\n                curr = curr.prev;\r\n\r\n                prev.prevCur?.reverse();\r\n                prev.reverse();\r\n\r\n            }while(curr)\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    public checkKnot(){\r\n        if((this.nodeNum == this.edgeNum) && (this.nodeNum > 2)){\r\n\r\n            var first : Node | null = null;\r\n\r\n    \r\n            for(let i =0; i < this._nodeStack.data.length; i++){\r\n                if(this._nodeStack.data[i] !== null)\r\n                {\r\n                    first = this._nodeStack.data[i];\r\n                    break;\r\n                }\r\n            }\r\n\r\n            var temp : Node | null | undefined = first?.next;\r\n    \r\n            for(let i = 1; i< this.nodeNum; i++){\r\n                if(!temp){\r\n                    this._isKnot =  false;\r\n                    return;\r\n                }\r\n                if(first === temp){\r\n                    this._isKnot =  false;\r\n                    return;\r\n                }\r\n                temp = temp.next;\r\n            }\r\n\r\n            this._isKnot = true;\r\n            return;\r\n        }else{\r\n            this._isKnot =  false;\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    public draw(gl : WebGLRenderingContext, program : WebGLProgram){\r\n\r\n        var temp : Node | Edge | null;\r\n        for(let i = 0; i < this._nodeStack.data.length; i++){\r\n\r\n            temp = this._nodeStack.data[i];\r\n            if(temp){\r\n                temp.object.draw(gl, program);\r\n                \r\n            }\r\n        }\r\n        for(let i = 0; i < this._edgeStack.data.length; i++){\r\n\r\n            temp = this._edgeStack.data[i];\r\n            if(temp){\r\n                temp.object.draw(gl, program);\r\n            }\r\n        }\r\n\r\n\r\n            // gl.disable(gl.DEPTH_TEST);\r\n        gl.enable(gl.BLEND);\r\n        gl.depthMask(false);\r\n\r\n        this._xyPlane.draw(gl, program);\r\n        if(this.selectedNode){\r\n            if(this.transform_z){\r\n                this._verticalArrows.draw(gl, program);\r\n            }else{\r\n                this._planeArrows.draw(gl, program);\r\n            }\r\n            this._guide.draw(gl, program);\r\n        }\r\n\r\n        gl.disable(gl.BLEND);\r\n        gl.depthMask(true);\r\n    \r\n\r\n    }\r\n\r\n    get isEmpty(){\r\n        return (this.nodeNum == 0 && this.edgeNum == 0);\r\n    }\r\n\r\n    get isKnot(){\r\n        return this._isKnot;\r\n    }\r\n    get nodeArr(){\r\n        var first : Node | null = null;\r\n\r\n        for(let i =0; i < this._nodeStack.data.length; i++){\r\n            if(this._nodeStack.data[i] !== null)\r\n            {\r\n                first = this._nodeStack.data[i];\r\n                break;\r\n            }\r\n        }\r\n\r\n        var temp : Node | null | undefined = first?.next;\r\n        this._nodeArr = [];\r\n        this._nodeArr.push(first!.object.position);\r\n\r\n    \r\n        for(let i = 1; i< this.nodeNum; i++){\r\n            if(!temp){\r\n                this._isKnot =  false;\r\n                alert(\"not a knot\");\r\n                return;\r\n            }\r\n            this._nodeArr.push(temp.object.position);\r\n\r\n            if(first === temp){\r\n                this._isKnot =  false;\r\n                return;\r\n            }\r\n            temp = temp.next;\r\n        }\r\n        return this._nodeArr;\r\n    }\r\n\r\n    get selectedNode(){\r\n        return (this.selected instanceof Node);\r\n    }\r\n\r\n    get selected(){\r\n        return this._selected;\r\n    }\r\n\r\n    set selected(obj: Node | Edge | null){\r\n        if(this.selected instanceof Node){\r\n            this.selected.object.changeColor(vec3.subtract(vec3.create(), this.selected.object.color, [0.18,0.18,0.18]));\r\n        }else if(this.selected instanceof Edge){\r\n            this.selected.object.changeColor(vec3.subtract(vec3.create(), this.selected.object.color, [0.18,0.18,0.18]));\r\n        }\r\n        \r\n        this._selected = obj;\r\n\r\n        if(this.selected instanceof Node){\r\n            this.selected.object.changeColor(vec3.add(vec3.create(), this.selected.object.color, [0.18,0.18,0.18]));\r\n            // @ts-ignore\r\n            this._verticalArrows.position = this.selected.object.position;\r\n            // @ts-ignore\r\n            this._planeArrows.position = this.selected.object.position;\r\n            // @ts-ignore\r\n            this._guide.position = this.selected.object.position;\r\n        }else if(this.selected instanceof Edge){\r\n            this.selected.object.changeColor(vec3.add(vec3.create(), this.selected.object.color, [0.18,0.18,0.18]));\r\n        }\r\n        \r\n    }\r\n\r\n    get drawingTool(){\r\n        return this._drawingTool;\r\n    }\r\n\r\n    get nodeNum(){\r\n        return this._nodeNum;\r\n    }\r\n\r\n    set nodeNum(num : number){\r\n        this._nodeNum = num;\r\n    }\r\n\r\n    get edgeNum(){\r\n        return this._edgeNum;\r\n    }\r\n\r\n    set edgeNum(num : number){\r\n        this._edgeNum = num;\r\n    }\r\n\r\n    get transform_z(){\r\n        return this._transform_z;\r\n    }\r\n\r\n    set transform_z(bool : boolean){\r\n        this._transform_z = bool;\r\n    }\r\n\r\n\r\n    public setDrawState(render: boolean){\r\n        if(render){\r\n            this._nodeStack.data.forEach(\r\n                function(value){\r\n                    if(value)\r\n                    {\r\n                        value.object.drawState();\r\n                    }\r\n                }\r\n            )\r\n            this._edgeStack.data.forEach(\r\n                function(value){\r\n                    if(value)\r\n                    {\r\n                        value.object.drawState();\r\n                    }\r\n                }\r\n            )\r\n        }else{\r\n            this._nodeStack.data.forEach(\r\n                function(value){\r\n                    if(value)\r\n                    {\r\n                        value.object.readState();\r\n                    }\r\n                }\r\n            )\r\n            this._edgeStack.data.forEach(\r\n                function(value){\r\n                    if(value)\r\n                    {\r\n                        value.object.readState();\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    public btnManager(){\r\n        if(this.drawingTool.insert){\r\n            if(this._overlapNode && (this.selected instanceof Node)){\r\n                this.delete();\r\n                this.selected = this._overlapNode;\r\n            }\r\n            //@ts-ignore\r\n            this.insert();\r\n            this.drawingTool.insert = true;\r\n        }else if(this.drawingTool.connectFirst){\r\n            if(this._overlapNode && (this.selected instanceof Node)){\r\n                this.delete();\r\n                this.selected = this._overlapNode;\r\n            }\r\n            //@ts-ignore\r\n            const temp : Node = this.selected;\r\n            this.insert();\r\n            //@ts-ignore\r\n            this.connect(temp, this.selected);\r\n\r\n            this.drawingTool.connectFirst = false;\r\n        }else if(this.drawingTool.connectLast){\r\n            if(this.selected instanceof Node){\r\n                var temp : Node | null = null;\r\n\r\n                if(this._overlapNode){\r\n                    if(this.selected.prev){\r\n                        temp = this.selected.prev;\r\n                    }else if(this.selected.next){\r\n                        temp = this.selected.next;\r\n                    }\r\n                    this.delete();\r\n                    this.selected = this._overlapNode;\r\n                    //@ts-ignore\r\n                    this.connect(temp, this.selected);\r\n                    if(this.selected.next && this.selected.prev){\r\n                        this.drawingTool.connectLast = false;\r\n                        return;\r\n                    }\r\n                }\r\n                temp = this.selected;\r\n                this.insert();\r\n                //@ts-ignore\r\n                this.connect(temp, this.selected);\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public moveNode(vec: vec3, absPos: vec3, normal : vec2)\r\n    {\r\n        if(this.selected instanceof Node){\r\n\r\n            var updatedPos : vec3 = vec3.create();\r\n            vec3.copy(updatedPos, this.selected.object.position);\r\n            const diff : vec3 = vec3.subtract(vec3.create(), absPos, this.selected.object.position);\r\n            \r\n            if(this.transform_z){\r\n                const dist  = vec2.dot(normal, [diff[0], diff[1]]);\r\n    \r\n                updatedPos[2] = vec[2]*(-dist/vec2.dot([vec[0], vec[1]], normal)) + absPos[2];\r\n\r\n                updatedPos[2] = Math.max(-5, Math.min(5, updatedPos[2]));\r\n\r\n            }else{\r\n                const t = -diff[2]/vec[2];\r\n\r\n                updatedPos[0] = vec[0] * t + absPos[0];\r\n                updatedPos[1] = vec[1] * t + absPos[1];\r\n\r\n                updatedPos[0] = Math.max(-5, Math.min(5, updatedPos[0]));\r\n                updatedPos[1] = Math.max(-5, Math.min(5, updatedPos[1]));\r\n            }\r\n\r\n            this.selected.object.position = updatedPos;\r\n\r\n            if(this.drawingTool.insert || this.drawingTool.connectLast){\r\n                this.overlapping(vec3.normalize(vec3.create(), vec), absPos);\r\n                if(this._overlapNode){\r\n                    this.selected.object.position = this._overlapNode.object.position;\r\n                }\r\n            }\r\n            \r\n            this.selected.prevCur?.updatePos(); \r\n            this.selected.curNext?.updatePos();\r\n        \r\n            this._verticalArrows.position = this.selected.object.position;\r\n            this._planeArrows.position = this.selected.object.position;\r\n            this._guide.position = this.selected.object.position;\r\n        }\r\n    }\r\n\r\n    private overlapping(vec: vec3, absPos : vec3){\r\n        if(this.selected instanceof Node){\r\n            var adjNode : Node | null;\r\n            var dist : number;\r\n            var pos : vec3;\r\n            for(let i = 0; i < this._nodeStack.data.length; i++){\r\n                adjNode = this._nodeStack.data[i];\r\n                if(adjNode){\r\n                    if((adjNode === this.selected) || (adjNode === this.selected.prev) || (adjNode === this.selected.next) || this.connected(adjNode, this.selected)){\r\n                        continue;\r\n                    }\r\n                    if(!adjNode.prevCur || !adjNode.curNext){\r\n                        dist = vec3.distance(absPos, adjNode.object.position);\r\n                        pos = vec3.add(vec3.create(), vec3.scale(vec3.create(), vec, dist), absPos);\r\n                        if(vec3.distance(adjNode.object.position, pos) < adjacent){\r\n                            this._overlapNode = adjNode;\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        this._overlapNode = null;\r\n    }\r\n\r\n    public pickObj(vec: vec3, absPos: vec3){\r\n\r\n        this._overlapNode = null;\r\n        this.selected = null;\r\n        \r\n        var temp : Node | Edge | null;\r\n        var tempPos : vec3 = vec3.create();\r\n        var minTempPos : number = 100;\r\n        var n : vec3 = vec3.create();\r\n        var dist : vec3 = vec3.create();\r\n\r\n        for(let i = 0; i < this._nodeStack.data.length; i++){\r\n            temp = this._nodeStack.data[i];\r\n            if(temp){\r\n                //@ts-ignore\r\n                vec3.subtract(tempPos, temp.object.position, absPos);\r\n                vec3.normalize(n, vec);\r\n                vec3.scaleAndAdd(dist, tempPos, n, -vec3.dot(n, tempPos));\r\n                \r\n                if(vec3.length(dist)<0.12){\r\n                    if(minTempPos > vec3.len(tempPos)){\r\n                        this.selected = temp;\r\n                        minTempPos = vec3.len(tempPos);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(!this.selected){\r\n            for(let i = 0; i < this._edgeStack.data.length; i++){\r\n                temp = this._edgeStack.data[i];\r\n                if(temp){\r\n                    //@ts-ignore\r\n                    vec3.subtract(tempPos, temp.object.end, temp.object.start);\r\n                    vec3.cross(n, tempPos, vec);\r\n\r\n                    if(vec3.len(n)< 0.001){\r\n                        continue;\r\n                    }else{\r\n                        //@ts-ignore\r\n                        vec3.subtract(dist, absPos, temp.object.start);\r\n                        vec3.normalize(n,n);\r\n                        if(Math.abs(vec3.dot(n, dist)) < 0.12){\r\n                            vec3.cross(n, vec, n);\r\n                            //@ts-ignore\r\n                            const c = vec3.dot(dist, n)/vec3.dot(n, tempPos);\r\n                            if((c>0) && (c<1)){\r\n                                //@ts-ignore\r\n                                const closest = vec3.subtract(vec3.create(), vec3.scaleAndAdd(vec3.create(), temp.object.start, tempPos, c), absPos)\r\n                                if(minTempPos > vec3.len(closest)){\r\n                                    this.selected = temp;\r\n                                    minTempPos = vec3.len(closest);\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    \r\n                    \r\n                }\r\n            }\r\n        }\r\n        \r\n\r\n        if(this.drawingTool.erase){\r\n            this.delete();\r\n            if(this.isEmpty){\r\n                this.drawingTool.erase = false;\r\n            }\r\n        }else if(this.drawingTool.subdivide){\r\n            this.subdivide();\r\n            if(this.selectedNode){\r\n                this.drawingTool.subdivide = false;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nclass Stack{\r\n    private _data : any[];\r\n\r\n    public constructor(){\r\n        /*\r\n            A stack object.\r\n        */\r\n        this._data = [];\r\n    }\r\n\r\n    public insert(object : any, index : number){\r\n        /*\r\n            insert object at given index.\r\n        */\r\n        if (index < this._data.length){\r\n            this._data[index] = object;\r\n        } else{\r\n            this._data.push(object);\r\n        }\r\n    }\r\n    public free(index : number){\r\n        /*\r\n           free an index\r\n        */\r\n        this._data[index] = null;\r\n    }\r\n\r\n    public delete(obj : Node | Edge){\r\n        for(let i =0; i < this._data.length; i++){\r\n            if(this._data[i] === obj){\r\n                this._data[i] = null;\r\n            }\r\n        }\r\n    }\r\n    public available(): number{\r\n        /*\r\n           returns the smallest index at which the stack is empty\r\n        */\r\n        for(let i =0; i < this._data.length; i++){\r\n            if (!this._data[i]){\r\n                return i;\r\n            }\r\n        }\r\n        return this._data.length;\r\n    }\r\n\r\n    get data() : any[]{\r\n        return this._data;\r\n    }\r\n\r\n}\r\n\r\nexport class Edge {\r\n\r\n    private _object : Cylinder;\r\n    private _startNode : Node;\r\n    private _endNode : Node;\r\n\r\n\r\n\r\n    public constructor(\r\n            start : Node, \r\n            end : Node,\r\n        ){\r\n\r\n        const color : [number, number, number] = [0.4, 0.4, 0.4]\r\n\r\n        this._startNode = start;\r\n        this._endNode = end;\r\n\r\n        this._startNode.curNext = this;\r\n        this._startNode.next = this._endNode;\r\n\r\n        this._endNode.prevCur = this;\r\n        this._endNode.prev = this._startNode;\r\n\r\n\r\n        this._object = new Cylinder(\r\n            color,\r\n            this._startNode.object.position,\r\n            this._endNode.object.position)\r\n    }\r\n\r\n    public delete(){\r\n        this._startNode.next = null;\r\n        this._endNode.prev = null;\r\n        this._startNode.curNext = null;\r\n        this._endNode.prevCur = null;\r\n    }\r\n\r\n    public updatePos(){\r\n        this.object.start = this._startNode.object.position;\r\n        this.object.end = this._endNode.object.position;\r\n    }\r\n\r\n    public reverse(){\r\n        const temp = this._startNode;\r\n        this._startNode = this._endNode;\r\n        this._endNode = temp;\r\n    }\r\n\r\n    get object() : Cylinder{\r\n        return this._object;\r\n    }\r\n\r\n    get startNode(){\r\n        return this._startNode;\r\n    }\r\n\r\n    set startNode(node : Node){\r\n        this._startNode = node;\r\n    }\r\n\r\n    get endNode(){\r\n        return this._endNode;\r\n    }\r\n\r\n    set endNode(node : Node){\r\n        this._endNode = node;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class Node {\r\n\r\n    private _object : Sphere;\r\n    private _next : Node | null;\r\n    private _prev : Node | null;\r\n    \r\n    private _prevCur : Edge | null;\r\n    private _curNext : Edge | null;\r\n\r\n\r\n\r\n\r\n    public constructor(\r\n            pos : vec3 = vec3.fromValues(0,0,0),\r\n            prev : Node | null = null, \r\n            next : Node | null = null\r\n        ){\r\n\r\n        const color : [number, number, number] = [42, 106, 209];\r\n        this._object = new Sphere(vec3.scale(vec3.create(), color, 1/255), 0.1, pos);\r\n\r\n        this._prev = prev;\r\n        this._next = next;\r\n\r\n\r\n        this._curNext = null;\r\n        this._prevCur = null;\r\n        \r\n    }\r\n\r\n    public delete(){\r\n        this._prevCur?.delete();\r\n        this._curNext?.delete();\r\n    }\r\n\r\n    public reverse(){\r\n        const tempNode = this._next;\r\n        this._next = this._prev;\r\n        this._prev = tempNode;\r\n\r\n        const tempEdge = this._curNext;\r\n        this._curNext = this._prevCur;\r\n        this._prevCur = tempEdge;\r\n    }\r\n\r\n    get object() : Sphere{\r\n        return this._object;\r\n    }\r\n\r\n\r\n\r\n    get next(): Node | null{\r\n        return this._next;\r\n    }\r\n    \r\n    get prev(): Node | null{\r\n        return this._prev;\r\n    }\r\n\r\n    get prevCur(): Edge | null{\r\n        return this._prevCur;\r\n    }\r\n    \r\n    get curNext(): Edge | null{\r\n        return this._curNext;\r\n    }\r\n\r\n\r\n    set next(node : Node | null){\r\n        this._next = node;\r\n    }\r\n    set prev(node : Node | null){\r\n        this._prev = node;\r\n    }\r\n\r\n    set prevCur(edge : Edge | null){\r\n        this._prevCur = edge;\r\n    }\r\n    set curNext(edge : Edge | null){\r\n        this._curNext = edge;\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport class DrawingTool{\r\n    \r\n    private _overlay : HTMLElement;\r\n    private _insertBtn : HTMLElement;\r\n    private _connectBtn : HTMLElement;\r\n    private _subdivideBtn : HTMLElement;\r\n    private _eraseBtn : HTMLElement;\r\n    private _insert : boolean;\r\n    private _connectFirst : boolean;\r\n    private _connectLast : boolean;\r\n    private _subdivide : boolean;\r\n    private _erase : boolean;\r\n\r\n    private _linkedKnot : LinkedKnot;\r\n    \r\n\r\n    constructor(linkedKnot : LinkedKnot){\r\n        this._linkedKnot = linkedKnot;\r\n\r\n        this._overlay = <HTMLElement>document.getElementById(\"drawing tool\");\r\n        this._insertBtn = <HTMLElement>document.getElementById(\"insert button\");\r\n        this._connectBtn = <HTMLElement>document.getElementById(\"connect button\");\r\n        this._subdivideBtn = <HTMLElement>document.getElementById(\"subdivide button\");\r\n        this._eraseBtn = <HTMLElement>document.getElementById(\"erase button\");\r\n        this._insert = false;\r\n        this._connectFirst = false;\r\n        this._connectLast = false;\r\n        this._subdivide = false;\r\n        this._erase = false;\r\n\r\n    }\r\n\r\n    public initCallback(){\r\n        \r\n        this._overlay.addEventListener('mousedown', (event : MouseEvent) => {this.resize(event);})\r\n\r\n        this._insertBtn.addEventListener('click', () => {this.insertBtnResponse();});\r\n        this._connectBtn.addEventListener('click', () => {this.connectBtnResponse();});\r\n        this._eraseBtn.addEventListener('click', () => {this.eraseBtnResponse();});\r\n        this._subdivideBtn.addEventListener('click', () => {this.subdivideBtnResponse();});\r\n\r\n    }\r\n\r\n    public reset(){\r\n        this.insert = false;\r\n        this.connectLast = false;\r\n        this.subdivide = false;\r\n        this.erase = false;\r\n    }\r\n\r\n    private insertBtnResponse(){\r\n        if(this.linkedKnot.nodeNum > 254){\r\n            alert(\"cannot have more than 255 nodes\");\r\n            return;\r\n        }\r\n        \r\n        this.insert = !this.insert;\r\n\r\n        if(this.insert){\r\n            this.linkedKnot.transform_z = false;\r\n            if(this.connectFirst){\r\n                this.connectLast = false;\r\n                return;\r\n            }else if(this.connectLast){\r\n                this.linkedKnot.delete();\r\n            }\r\n            this.linkedKnot.insert();\r\n        }else{\r\n            this.linkedKnot.delete();\r\n        }\r\n\r\n        this.erase = false;\r\n        this.connectLast = false;\r\n        this.subdivide = false;\r\n    }\r\n\r\n    private connectBtnResponse(){\r\n        if(this.linkedKnot.nodeNum > 254){\r\n            alert(\"cannot have more than 255 nodes\");\r\n            return;\r\n        }\r\n        \r\n        this.connectLast = !this.connectLast;\r\n\r\n        if(this.connectLast){\r\n            this.linkedKnot.transform_z = false;\r\n            if(!this.insert){\r\n                this.linkedKnot.insert();\r\n            }\r\n        }else{\r\n            this.linkedKnot.delete();\r\n        }\r\n\r\n        this.insert = false;\r\n        this.erase = false;\r\n        this.subdivide = false;\r\n\r\n\r\n    }\r\n\r\n    private eraseBtnResponse(){\r\n        this.erase = !this.erase;\r\n\r\n        if(this.erase){\r\n            if(this.connectLast){\r\n                this.linkedKnot.delete();\r\n            }else if(this.insert){\r\n                this.linkedKnot.delete();\r\n            }\r\n            this.linkedKnot.selected = null;\r\n        }\r\n\r\n        this.insert = false;\r\n        this.connectLast = false;\r\n        this.subdivide = false;\r\n    }\r\n\r\n    private subdivideBtnResponse(){\r\n        this.subdivide = !this.subdivide;\r\n\r\n        if(this.subdivide){\r\n            if(this.connectLast){\r\n                this.linkedKnot.delete();\r\n            }else if(this.insert){\r\n                this.linkedKnot.delete();\r\n            }\r\n            this.linkedKnot.selected = null;\r\n        }\r\n\r\n        this.insert = false;\r\n        this.connectLast = false;\r\n        this.erase = false;\r\n    }\r\n\r\n\r\n    get insert(){\r\n        return this._insert;\r\n    }\r\n    set insert(bool : boolean){\r\n        this._insert = bool;\r\n        this._insertBtn.classList.toggle('active', bool);\r\n    }\r\n\r\n    set connectLast(bool : boolean){\r\n        this._connectLast = bool;\r\n        this._connectFirst = bool;\r\n        this._connectBtn.classList.toggle('active', bool);\r\n    }\r\n\r\n    set connectFirst(bool : boolean){\r\n        this._connectFirst = bool;\r\n    }\r\n\r\n    get connectLast(){\r\n        return this._connectLast;\r\n    }\r\n\r\n    get connectFirst(){\r\n        return this._connectFirst;\r\n    }\r\n\r\n    get subdivide(){\r\n        return this._subdivide;\r\n    }\r\n\r\n    set subdivide(bool : boolean){\r\n        this._subdivide = bool;\r\n        this._subdivideBtn.classList.toggle('active', bool);\r\n    }\r\n\r\n    set erase(bool : boolean){\r\n        this._erase = bool;\r\n        this._eraseBtn.classList.toggle('active', bool);\r\n    }\r\n\r\n    get erase(){\r\n        return this._erase;\r\n    }\r\n    \r\n    get linkedKnot(){\r\n        return this._linkedKnot;\r\n    }\r\n    \r\n    public Disable(disable : boolean){\r\n        \r\n        this.insert = false;\r\n        this.connectLast = false;\r\n        this.subdivide = false;\r\n        this.erase = false;\r\n\r\n        if(disable === true){\r\n            this._overlay.classList.toggle('hidden', true);\r\n        } else {\r\n            this._overlay.classList.toggle('hidden', false);\r\n        }\r\n    }\r\n\r\n    private resize(event : MouseEvent){\r\n        if ((event.offsetY >= 75) && (event.offsetX < 240) && (event.offsetX > 160)) {\r\n            if(this._overlay.style.transform === \"translate(0px, -80%)\"){\r\n                this._overlay.style.transform = \"translate(0px, -0%)\";\r\n            }else{\r\n                this._overlay.style.transform = \"translate(0px, -80%)\";\r\n            }\r\n        }\r\n    }\r\n    \r\n}","import { vec3, mat4, mat3 } from \"gl-matrix\";\r\nimport { glUtils } from \"../utils/glUtils\"\r\n\r\n\r\nconst pi = Math.PI;\r\nfunction cos(t: number): number{\r\n    return Math.cos(t);\r\n}\r\nfunction sin(t: number): number{\r\n    return Math.sin(t);\r\n}\r\n\r\nconst KnotDivision = 800;\r\n\r\nexport class FourierKnot{\r\n\r\n    private _cosCoef : vec3[];\r\n    private _sinCoef : vec3[];\r\n\r\n    private _attributes : {\r\n        aColor : Attribute;\r\n        aPosition : Attribute;\r\n        aNormal : Attribute;\r\n    };\r\n\r\n    private _color : [number, number, number];\r\n    private _opacity : number;\r\n\r\n    private _indices : Uint16Array;\r\n\r\n    private _buffers! : { [name: string]: WebGLBuffer};\r\n    private _indexBuffer! : WebGLBuffer | null;\r\n\r\n    private _state : {\r\n        mvp : mat4;\r\n        nm : mat3;\r\n        n : number;\r\n    }\r\n\r\n\r\n    private _calculated : boolean;\r\n    private _intersecting : boolean;\r\n\r\n\r\n\r\n    constructor(){\r\n\r\n        this._cosCoef = [];\r\n        this._sinCoef = [];\r\n\r\n\r\n        this._color = [50, 105, 205];\r\n        vec3.scale(this._color, this._color, 1/255);\r\n        this._opacity = 1.0;\r\n\r\n        this._attributes = {\r\n            aColor: {\r\n                size:4,\r\n                offset:0,\r\n                bufferData: new Float32Array(),\r\n            },\r\n            aNormal: {\r\n                size:3,\r\n                offset:0,\r\n                bufferData: new Float32Array(),\r\n            },\r\n            aPosition: {\r\n                size:3,\r\n                offset:0,\r\n                bufferData: new Float32Array(),\r\n            },\r\n        };\r\n\r\n        this._indices = new Uint16Array();\r\n\r\n        this._state = {\r\n            mvp : mat4.create(),\r\n            nm : mat3.create(),\r\n            n : 0,\r\n        }\r\n\r\n        this._calculated = false;\r\n        this._intersecting = true;\r\n\r\n    }\r\n\r\n    public deleteData(){\r\n\r\n        this._calculated = false;\r\n        this._intersecting = true;\r\n    }\r\n\r\n    public calcFourier(arr : vec3[]){\r\n\r\n\r\n        var cosCoef : vec3[] = [];\r\n        var sinCoef : vec3[] = [];\r\n\r\n        var len =  arr.length;\r\n\r\n        var curr : vec3;\r\n        var prev : vec3;\r\n        var L : number = 0;\r\n\r\n        var maxDist : vec3 = [0, 0, 0];\r\n    \r\n        for(let i =0; i < len; i++){\r\n            curr = arr[i];\r\n            if(i == 0){\r\n                prev = arr[len-1];\r\n            }else{\r\n                prev = arr[i-1];\r\n            }\r\n            L += vec3.distance(curr, prev);\r\n\r\n            for (let j =0; j < len; j++){\r\n                let temp =  vec3.subtract(vec3.create(), curr, arr[j]);\r\n                if(Math.abs(temp[0]) > maxDist[0]){\r\n                    maxDist[0] = Math.abs(temp[0]);\r\n                }\r\n                if(Math.abs(temp[1]) > maxDist[1]){\r\n                    maxDist[1] = Math.abs(temp[1]);\r\n                }\r\n                if(Math.abs(temp[2]) > maxDist[2]){\r\n                    maxDist[2] = Math.abs(temp[2]);\r\n                }\r\n            }\r\n        }\r\n\r\n        const factor = 10/Math.max(maxDist[0], maxDist[1], maxDist[2]);\r\n\r\n        var a : vec3 = vec3.create();\r\n        var b : vec3 = vec3.create();\r\n\r\n        var upper_bound : number = 0;\r\n        var lower_bound : number;\r\n\r\n        var upper_sum : vec3 = vec3.create();\r\n        var lower_sum : vec3 = vec3.create();\r\n\r\n        for(let n = 1; n <=6 ; n++){\r\n            let cos_coef : vec3 = vec3.create();\r\n            let sin_coef : vec3 = vec3.create();\r\n\r\n            vec3.zero(cos_coef);\r\n            vec3.zero(sin_coef);  \r\n\r\n            for(let i =0; i < len; i++){\r\n                curr = arr[i];\r\n                if(i == 0 ){\r\n                    prev = arr[len-1];\r\n                }else{\r\n                    prev = arr[i-1];\r\n                }\r\n                lower_bound = upper_bound;\r\n                upper_bound += vec3.distance(curr, prev);\r\n\r\n                vec3.normalize(a, vec3.subtract(vec3.create(), curr, prev));\r\n                vec3.scaleAndAdd(b, prev, a, -lower_bound);\r\n\r\n                vec3.add(upper_sum, vec3.add(vec3.create(), vec3.scale(vec3.create(), b, 2*pi*n*sin(2*pi*n*upper_bound/L)), vec3.scale(vec3.create(), a, 2*pi*n*upper_bound*sin(2*pi*n*upper_bound/L))), vec3.scale(vec3.create(), a, L*cos(2*pi*n*upper_bound/L)));\r\n                vec3.add(lower_sum, vec3.add(vec3.create(), vec3.scale(vec3.create(), b, 2*pi*n*sin(2*pi*n*lower_bound/L)), vec3.scale(vec3.create(), a, 2*pi*n*lower_bound*sin(2*pi*n*lower_bound/L))), vec3.scale(vec3.create(), a, L*cos(2*pi*n*lower_bound/L)));\r\n                \r\n                vec3.scaleAndAdd(cos_coef, cos_coef, vec3.subtract(vec3.create(), upper_sum, lower_sum), 1/(2*pi*pi*n*n));\r\n\r\n                vec3.add(upper_sum, vec3.add(vec3.create(), vec3.scale(vec3.create(), b, -2*pi*n*cos(2*pi*n*upper_bound/L)), vec3.scale(vec3.create(), a, -2*pi*n*upper_bound*cos(2*pi*n*upper_bound/L))), vec3.scale(vec3.create(), a, L*sin(2*pi*n*upper_bound/L)));\r\n                vec3.add(lower_sum, vec3.add(vec3.create(), vec3.scale(vec3.create(), b, -2*pi*n*cos(2*pi*n*lower_bound/L)), vec3.scale(vec3.create(), a, -2*pi*n*lower_bound*cos(2*pi*n*lower_bound/L))), vec3.scale(vec3.create(), a, L*sin(2*pi*n*lower_bound/L)));\r\n\r\n                vec3.scaleAndAdd(sin_coef, sin_coef, vec3.subtract(vec3.create(), upper_sum, lower_sum), 1/(2*pi*pi*n*n));\r\n            }\r\n            vec3.scale(cos_coef, cos_coef, factor);\r\n            vec3.scale(sin_coef, sin_coef, factor);\r\n            cosCoef.push(cos_coef);\r\n            sinCoef.push(sin_coef);\r\n        }\r\n\r\n        this._cosCoef = cosCoef;\r\n        this._sinCoef = sinCoef;\r\n\r\n\r\n        this._calculated = false;\r\n\r\n        \r\n        const stack = KnotDivision;\r\n        const sector = 12;\r\n        const rad = 0.035;\r\n        \r\n        var vertices = [];\r\n        var normals = [];\r\n        var colors = [];\r\n        var indices = [];\r\n\r\n        var temp = vec3.create();\r\n        var normVec = vec3.create();\r\n\r\n        var prevCurvature : vec3 = [0,0,1];\r\n        var t:vec3;\r\n        var n1:vec3;\r\n        var n2:vec3;\r\n        for (let i = 0; i <= stack; i++) {\r\n\r\n            t = vec3.subtract(vec3.create(), this.knot((i)/stack), this.knot((i+1)/stack));\r\n            vec3.normalize(t, t);\r\n            \r\n\r\n            n1 = vec3.subtract(vec3.create(), prevCurvature, vec3.scale(vec3.create(), t, vec3.dot(prevCurvature,t)));\r\n            \r\n\r\n            if(vec3.length(n1) < 0.000001){\r\n                \r\n                n1 = vec3.subtract(vec3.create(), [0,1,0], vec3.scale(vec3.create(), t, vec3.dot([0,1,0],t)));\r\n                if(vec3.length(n1) < 0.00001){\r\n                    n1 = [1,0,0];\r\n                    n1 = vec3.subtract(vec3.create(), n1, vec3.scale(vec3.create(), t, vec3.dot(n1,t)));\r\n                }\r\n            }\r\n            vec3.normalize(n1, n1);\r\n\r\n            n2 = vec3.cross(vec3.create(), n1, t);\r\n            vec3.normalize(n2, n2);\r\n\r\n            prevCurvature = n1;\r\n      \r\n            for (let j = 0; j <= sector; j++) {\r\n\r\n                const u = j / sector;\r\n                const sector_angle = u * 2 * Math.PI;\r\n\r\n                vec3.add(temp, vec3.scale(vec3.create(), n1, cos(sector_angle)), vec3.scale(vec3.create(), n2, sin(sector_angle)));\r\n                vec3.copy(normVec, temp);\r\n                vec3.scale(temp, temp, rad)\r\n\r\n                vec3.add(temp, temp, this.knot(i/stack))\r\n\r\n                vertices.push(temp[0], temp[1], temp[2]);\r\n\r\n                \r\n                normals.push(normVec[0], normVec[1], normVec[2])\r\n\r\n                colors.push(\r\n                    this._color[0], \r\n                    this._color[1], \r\n                    this._color[2], \r\n                    this._opacity\r\n                );\r\n\r\n\r\n            }\r\n            \r\n            \r\n        }\r\n          \r\n        const vertsPerStack = sector + 1;\r\n\r\n        var k1;\r\n        var k2;\r\n\r\n        for (let i = 0; i < stack; ++i) {\r\n            k1 = i * vertsPerStack;\r\n            k2 = k1 + vertsPerStack;\r\n            \r\n            for (let j = 0; j < sector; ++j, ++k1, ++k2) {\r\n\r\n                indices.push(k1, k1 + 1, k2);\r\n                indices.push(k2, k1 + 1, k2 + 1);\r\n\r\n            }\r\n        }\r\n\r\n\r\n        this._attributes.aColor.bufferData = new Float32Array(colors);\r\n        this._attributes.aNormal.bufferData = new Float32Array(normals);\r\n        this._attributes.aPosition.bufferData = new Float32Array(vertices);\r\n    \r\n        this._indices = new Uint16Array(indices);\r\n\r\n        mat4.identity(this._state.mvp);\r\n        mat3.normalFromMat4(this._state.nm, this._state.mvp);\r\n        this._state.n = this._indices.length;\r\n\r\n\r\n        this._intersecting = true;\r\n       \r\n        \r\n        this.checkIntersection();\r\n\r\n    }\r\n\r\n\r\n    public knot(param : number) : vec3{\r\n        const t = param * 2 * pi;\r\n\r\n        return vec3.add(\r\n            vec3.create(),\r\n            vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(),vec3.scale(vec3.create(), this._cosCoef[5], cos(6*t)), this._cosCoef[4], cos(5*t)), this._cosCoef[3], cos(4*t)), this._cosCoef[2], cos(3*t)), this._cosCoef[1], cos(2*t)), this._cosCoef[0], cos(t)),\r\n            vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(),vec3.scale(vec3.create(), this._sinCoef[5], sin(6*t)), this._sinCoef[4], sin(5*t)), this._sinCoef[3], sin(4*t)), this._sinCoef[2], sin(3*t)), this._sinCoef[1], sin(2*t)), this._sinCoef[0], sin(t))\r\n        )\r\n    }\r\n\r\n\r\n    public draw(gl: WebGLRenderingContext, program :  WebGLProgram) {\r\n\r\n        if(!this.calculated){\r\n            [this._buffers, this._indexBuffer] = glUtils.initBuffers(gl, program, this._attributes, this._indices);\r\n            this._calculated = true;\r\n        }\r\n        \r\n        var matWorldUniformLocation = gl.getUniformLocation(program, 'mWorld');\r\n        var uNormalMatrix = gl.getUniformLocation(program, 'uNormalMatrix'); \r\n\r\n        glUtils.bindBuffers(gl, program, this._attributes, this._buffers, this._indexBuffer);\r\n        \r\n        gl.uniformMatrix4fv(matWorldUniformLocation, false, this._state.mvp);\r\n        gl.uniformMatrix3fv(uNormalMatrix, false, this._state.nm);\r\n\r\n        gl.drawElements(gl.TRIANGLES, this._state.n, gl.UNSIGNED_SHORT, 0);\r\n    };\r\n\r\n    public exportKI() : Float32Array{\r\n        var ret : number[] = [];\r\n        for(let i =0; i<6; i++){\r\n            ret.push(this._cosCoef[i][0], this._cosCoef[i][1], this._cosCoef[i][2], 0)\r\n        }\r\n        for(let i =0; i<6; i++){\r\n            ret.push(this._sinCoef[i][0], this._sinCoef[i][1], this._sinCoef[i][2], 0)\r\n        }\r\n        return new Float32Array(ret);\r\n    }\r\n\r\n    public exportKIArr(): vec3[][]{\r\n\r\n        var dcosCoef : vec3[] = [];\r\n        var dsinCoef : vec3[] = [];\r\n\r\n        var d2cosCoef : vec3[] = [];\r\n        var d2sinCoef : vec3[] = [];\r\n\r\n        for(let i = 0; i<this._cosCoef.length; i++){\r\n            dcosCoef.push(vec3.scale(vec3.create(), this._sinCoef[i], (i+1)))\r\n            dsinCoef.push(vec3.scale(vec3.create(), this._cosCoef[i], -(i+1)))\r\n\r\n            d2cosCoef.push(vec3.scale(vec3.create(), this._cosCoef[i], -(i+1)*(i+1)))\r\n            d2sinCoef.push(vec3.scale(vec3.create(), this._sinCoef[i], -(i+1)*(i+1)))\r\n        }\r\n\r\n        return [this._cosCoef, this._sinCoef, dcosCoef, dsinCoef, d2cosCoef, d2sinCoef];\r\n    }\r\n\r\n    private checkIntersection(){\r\n\r\n        const intervals = KnotDivision*2;\r\n        for(let i =0; i<intervals; i++){\r\n            for(let j = i + Math.round(intervals/50); j< Math.floor(48* intervals/50); j++){\r\n                if(vec3.dist(this.knot(i/intervals), this.knot(j/intervals))<0.05){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this._intersecting = false;\r\n\r\n    }\r\n\r\n    get intersecting(){\r\n        return this._intersecting;\r\n    }\r\n\r\n    get calculated(){\r\n        return this._calculated;\r\n    }\r\n    \r\n}","import { glUtils } from \"../utils/glUtils\"\r\nimport { mat4, mat3, quat, vec3 } from \"gl-matrix\";\r\n\r\nexport class Circle{\r\n\r\n\r\n    private _CBO : CBO;\r\n\r\n    public static CBOList : CBO[] = [];\r\n\r\n    private _state : {\r\n        center : vec3;\r\n        normal : vec3;\r\n        radius : number;\r\n        mvp : mat4;\r\n        nm : mat3;\r\n    }\r\n\r\n\r\n\r\n    constructor(\r\n            radius : number = 1,\r\n            color : vec3 = [0.5, 0.5, 0.5],\r\n        ){\r\n\r\n        this._CBO = CBO.check(color, radius);\r\n\r\n        this._state = {\r\n            center : [0,0,0],\r\n            normal : [0,0,1],\r\n            radius : radius,\r\n            mvp : mat4.create(),\r\n            nm : mat3.create(),\r\n        }\r\n\r\n        mat4.identity(this._state.mvp);\r\n        mat3.normalFromMat4(this._state.nm, this._state.mvp);\r\n\r\n\r\n    }\r\n\r\n\r\n    // Functionality\r\n\r\n    public setCenterNormalRad(center : vec3, normal : vec3, rad : number){\r\n        var ratio : number;\r\n\r\n        ratio = rad/this._state.radius;\r\n        \r\n\r\n        mat4.fromRotationTranslationScale(\r\n            this._state.mvp, \r\n            quat.rotationTo(\r\n                quat.create(),\r\n                [0,0,1],\r\n                normal\r\n            ), \r\n            center, \r\n            [ratio,ratio,ratio]\r\n        );\r\n\r\n        mat3.normalFromMat4(this._state.nm, this._state.mvp);\r\n    }\r\n\r\n\r\n    public draw(gl: WebGLRenderingContext, program :  WebGLProgram) {\r\n\r\n        if(!this._CBO.init){\r\n            this._CBO.initBuffers(gl, program);\r\n        }\r\n\r\n        var matWorldUniformLocation = gl.getUniformLocation(program, 'mWorld');\r\n        var uNormalMatrix = gl.getUniformLocation(program, 'uNormalMatrix'); \r\n\r\n        this._CBO.bindBuffers(gl, program);\r\n\r\n        gl.uniformMatrix4fv(matWorldUniformLocation, false, this._state.mvp);\r\n        gl.uniformMatrix3fv(uNormalMatrix, false, this._state.nm);\r\n    \r\n        gl.drawElements(gl.TRIANGLES, this._CBO.numVert , gl.UNSIGNED_SHORT, 0);\r\n    };\r\n    \r\n};\r\n\r\n\r\nexport class CBO{\r\n\r\n    private _attributes : {\r\n        aColor : Attribute;\r\n        aPosition : Attribute;\r\n        aNormal : Attribute;\r\n    };\r\n\r\n    private _indices : Uint16Array;\r\n    private _color : vec3;\r\n    private _majorRad : number;\r\n    private _init :boolean;\r\n\r\n    private _buffers! : { [name: string]: WebGLBuffer};\r\n    private _indexBuffer! : WebGLBuffer | null;\r\n\r\n    private _numVert! : number;\r\n\r\n    constructor(color : vec3, rad : number){\r\n\r\n        this._init = false;\r\n\r\n        this._color = color;\r\n        this._majorRad = rad;\r\n        \r\n\r\n\r\n        var slices= 10;\r\n        var loops = Math.max(Math.min(Math.round(60*Math.sqrt(rad)), 500), 50);\r\n        var inner_rad= 0.02;\r\n        var outerRad = rad;\r\n        \r\n        var vertices = [];\r\n        var normals = [];\r\n        var colors = [];\r\n        var indices = [];\r\n            \r\n      \r\n        for (let slice = 0; slice <= slices; ++slice) {\r\n            const v = slice / slices;\r\n            const slice_angle = v * 2 * Math.PI;\r\n            const cos_slices = Math.cos(slice_angle);\r\n            const sin_slices = Math.sin(slice_angle);\r\n            const slice_rad = outerRad + inner_rad * cos_slices;\r\n      \r\n            for (let loop = 0; loop <= loops; ++loop) {\r\n              //   x=(R+r·cos(v))cos(w)\r\n              //   y=(R+r·cos(v))sin(w)\r\n              //             z=r.sin(v)\r\n                const u = loop / loops;\r\n                const loop_angle = u * 2 * Math.PI;\r\n                const cos_loops = Math.cos(loop_angle);\r\n                const sin_loops = Math.sin(loop_angle);\r\n        \r\n                const x = slice_rad * cos_loops;\r\n                const y = slice_rad * sin_loops;\r\n                const z = inner_rad * sin_slices;\r\n        \r\n\r\n                vertices.push(x, y, z);\r\n                \r\n                normals.push(cos_loops * cos_slices, sin_loops * cos_slices, sin_slices)\r\n\r\n                colors.push(\r\n                    this._color[0], \r\n                    this._color[1], \r\n                    this._color[2], \r\n                    1\r\n                );\r\n\r\n\r\n            }\r\n            \r\n        }\r\n\r\n      \r\n        const vertsPerSlice = loops + 1;\r\n\r\n        var k1;\r\n        var k2;\r\n\r\n        for (let i = 0; i < slices; ++i) {\r\n            k1 = i * vertsPerSlice;\r\n            k2 = k1 + vertsPerSlice;\r\n            \r\n            for (let j = 0; j < loops; ++j, ++k1, ++k2) {\r\n\r\n                indices.push(k1, k1 + 1, k2);\r\n                indices.push(k1 + 1, k2 + 1, k2);  \r\n\r\n            }\r\n        }\r\n\r\n\r\n       this._attributes = {\r\n            aColor: {\r\n                size:4,\r\n                offset:0,\r\n                bufferData: new Float32Array(colors),\r\n            },\r\n            aNormal: {\r\n                size:3,\r\n                offset:0,\r\n                bufferData: new Float32Array(normals),\r\n            },\r\n            aPosition: {\r\n                size:3,\r\n                offset:0,\r\n                bufferData: new Float32Array(vertices),\r\n            },\r\n        };\r\n    \r\n        this._indices = new Uint16Array(indices);\r\n        this._numVert = this._indices.length;\r\n    }\r\n\r\n    public initBuffers(gl: WebGLRenderingContext, program :  WebGLProgram){\r\n        [this._buffers, this._indexBuffer] = glUtils.initBuffers(gl, program, this._attributes, this._indices);\r\n        this._init = true;\r\n    }\r\n\r\n    public bindBuffers(gl: WebGLRenderingContext, program : WebGLProgram){\r\n        glUtils.bindBuffers(gl, program, this._attributes, this._buffers, this._indexBuffer);\r\n    }\r\n\r\n    public static check(color : vec3, rad : number) : CBO{\r\n        var temp: CBO;\r\n        var i;\r\n        for(i = 0; i< Circle.CBOList.length; i++){\r\n            temp = Circle.CBOList[i];\r\n            if((vec3.dist(temp.color, color) < 0.0001) && (Math.abs(temp.radius - rad) < 0.001)){\r\n                return temp;\r\n            }\r\n        }\r\n        \r\n        const cbo = new CBO(color, rad);\r\n        Circle.CBOList.push(cbo);\r\n        return cbo;\r\n        \r\n    }\r\n\r\n    get color(){\r\n        return this._color;\r\n    }\r\n\r\n    get init(){\r\n        return this._init; \r\n    }\r\n\r\n    get numVert(){\r\n        return this._numVert;\r\n    }\r\n\r\n    get radius(){\r\n        return this._majorRad;\r\n    }\r\n\r\n\r\n}\r\n\r\n","\r\nexport class Loader{\r\n\r\n    private _loader : HTMLElement;\r\n    private _text : HTMLElement;\r\n    private _quit : HTMLElement;\r\n    private _doubleCheck : {\r\n        overlay : HTMLElement;\r\n        confirm : HTMLElement;\r\n        cancel : HTMLElement;\r\n    };\r\n    private _cancel : boolean;\r\n\r\n    \r\n    constructor(){\r\n        this._loader = <HTMLElement>document.getElementById(\"loader\");\r\n        this._text = <HTMLElement>document.getElementById(\"loader text\");\r\n        this._quit = <HTMLElement>document.getElementById(\"quit\");\r\n        this._doubleCheck = {\r\n            overlay : <HTMLElement>document.getElementById(\"double check\"),\r\n            confirm : <HTMLElement>document.getElementById(\"confirm\"),\r\n            cancel : <HTMLElement>document.getElementById(\"cancel\"),\r\n        };\r\n        this._cancel = false;\r\n    }\r\n\r\n\r\n    public initCallback(){\r\n        this._quit.addEventListener('click', () => {this.quitBtnResponse();});\r\n        this._doubleCheck.confirm.addEventListener('click', () => {this.confirmBtnResponse();});\r\n        this._doubleCheck.cancel.addEventListener('click', () => {this.cancelBtnResponse();});\r\n\r\n    }\r\n\r\n    private quitBtnResponse(){\r\n        this._doubleCheck.overlay.classList.toggle('hidden', false);\r\n    }\r\n\r\n    private confirmBtnResponse(){\r\n        this._doubleCheck.overlay.classList.toggle('hidden', true);\r\n        this._cancel = true;\r\n    }\r\n\r\n    private cancelBtnResponse(){\r\n        this._doubleCheck.overlay.classList.toggle('hidden', true);\r\n        this._cancel = false;\r\n    }\r\n\r\n    public load(bool : boolean){\r\n        this.text = \"\";\r\n\r\n        this._loader.classList.toggle('hidden', !bool);\r\n        this._doubleCheck.overlay.classList.toggle('hidden', true);\r\n        this._cancel = false;\r\n        \r\n    }\r\n\r\n    set text(text: string){\r\n        this._text.textContent = text;\r\n    }\r\n\r\n\r\n    get cancel(){\r\n        return this._cancel;\r\n    }\r\n\r\n}\r\n\r\nexport class DropDown{\r\n    private _resetValue : number;\r\n    private _value: number;\r\n    private _button : HTMLButtonElement;\r\n    private _overlay : HTMLElement;\r\n    private _element : HTMLElement[];\r\n\r\n    private _resetStr :string; \r\n\r\n\r\n    constructor(idName : string, initvalue: number = 0){\r\n        this._resetValue = initvalue;\r\n        this._value = initvalue;\r\n        \r\n\r\n        const dropdown = <HTMLElement>document.getElementById(idName);\r\n        this._button = <HTMLButtonElement>dropdown.querySelector(\".dropbtn\");\r\n        this._button.addEventListener('focus', ()=>{this._overlay.classList.toggle('hidden', false);})\r\n        this._button.addEventListener('blur', ()=>{this._overlay.classList.toggle('hidden', true);})\r\n\r\n        this._overlay = <HTMLElement>dropdown.querySelector(\".content\");\r\n\r\n        this._resetStr = this._button.textContent?this._button.textContent : \"\";\r\n\r\n        const elements = dropdown.querySelectorAll(\".element\");\r\n        this._element = [];\r\n        for(let i = 0; i< elements.length; i++){\r\n            let temp = <HTMLElement>elements[i];\r\n            this._element.push(temp);\r\n            temp.addEventListener('mousedown', ()=>{\r\n                this.value = Number(temp.getAttribute(\"value\")); \r\n                this._overlay.classList.toggle('hidden', true);\r\n                this._button.textContent = temp.textContent;\r\n            });\r\n        }\r\n\r\n        this.reset();\r\n    }\r\n    public reset(){\r\n        this.value = this._resetValue;\r\n        this._overlay.classList.toggle('hidden', true);\r\n        this._button.textContent =  this._resetStr\r\n    }\r\n\r\n    set value(val : number | undefined){\r\n        val = val?val : this._resetValue;\r\n        this._value = val;\r\n    }\r\n\r\n    get value() : number{\r\n        return this._value;\r\n    }\r\n}\r\n\r\n\r\n\r\n","\r\nimport Compute from \"../../shaders/firstCompute.wgsl\"\r\nimport { vec3, vec4, mat4 } from \"gl-matrix\";\r\nimport { Circle } from \"../objects/Circle\"\r\nimport { Sphere } from \"../objects/Sphere\"\r\nimport { DropDown, Loader } from \"../controls/Overlay\"\r\n\r\n\r\n\r\nconst circleRadLimit = 80;\r\nconst GPUloop = 40;\r\nconst pi = Math.PI;\r\n\r\n\r\nfunction cos(t: number) {\r\n    return Math.cos(t);\r\n}\r\n\r\nfunction sin(t: number) {\r\n    return Math.sin(t);\r\n}\r\n\r\ntype vec5 = [number, number, number, number, number];\r\n\r\n\r\nexport class Quintuples{\r\n\r\n\r\n    private _device! : GPUDevice;\r\n    private _adapter! : GPUAdapter;\r\n\r\n    private _bindGroupLayout! : GPUBindGroupLayout;\r\n    private _computePipeline! : GPUComputePipeline;\r\n\r\n    private _bufferSize : number; //2992500\r\n        // 9576000\r\n\r\n    private _calc : {\r\n        error_field : number;\r\n        ACPolyAve : number;\r\n    }\r\n\r\n    private _cosCoef : vec3[];\r\n    private _sinCoef : vec3[];\r\n\r\n    private _dcosCoef : vec3[];\r\n    private _dsinCoef : vec3[];\r\n\r\n    private _d2cosCoef : vec3[];\r\n    private _d2sinCoef : vec3[];\r\n\r\n\r\n    private _calculated : boolean;\r\n\r\n    private _frames : {\r\n        redPoints : {\r\n            position : vec3;\r\n        };\r\n        blackPoints : {\r\n            position : vec3;\r\n        }[];\r\n        circles : {\r\n            center : vec3;\r\n            normal :vec3;\r\n            radius : number;\r\n            radID : number;\r\n        }[];\r\n    }[];\r\n\r\n    private _circles : Circle[];\r\n    private _spheres : {\r\n        red : Sphere;\r\n        black : Sphere;\r\n    };\r\n\r\n    private _player : Player;\r\n\r\n    \r\n    constructor(){\r\n\r\n        this._bufferSize = 0;\r\n        this._calc = {\r\n            error_field : 0.0000001,\r\n            ACPolyAve : 0,\r\n        }\r\n\r\n        this._frames = [];\r\n\r\n        this._cosCoef = [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]];\r\n        this._sinCoef = [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]];\r\n\r\n        this._dcosCoef = [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]];\r\n        this._dsinCoef = [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]];\r\n\r\n        this._d2cosCoef = [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]];\r\n        this._d2sinCoef = [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]];\r\n\r\n        this._circles = new Array(circleRadLimit);\r\n        for(let i  = 0; i < circleRadLimit; i++){\r\n            this._circles[i] = new Circle(Math.pow(2, (i-10)/5), [0.5,0.5,0.5])\r\n        }\r\n        this._spheres = {\r\n            red : new Sphere([1,0,0], 0.08),\r\n            black : new Sphere([0.2, 0.2, 0.2], 0.06)\r\n        }\r\n\r\n\r\n        this._calculated = false;\r\n        this._player = new Player();\r\n\r\n        this._player.initCallback();\r\n         \r\n    }\r\n\r\n    public deleteData(){\r\n        this._player.reset();\r\n        this._frames = [];\r\n        this.calculated = false;\r\n    }\r\n\r\n\r\n\r\n        \r\n    public async Initialize(){\r\n\r\n        if (!navigator.gpu) {\r\n            throw new Error('WebGPU not supported.');\r\n        }\r\n        this._adapter = <GPUAdapter> await navigator.gpu.requestAdapter();\r\n        if (!this._adapter) {\r\n            throw new Error('Couldn\\'t request WebGPU adapter.');\r\n        }\r\n        this._device = <GPUDevice> await this._adapter.requestDevice();\r\n\r\n\r\n    }\r\n\r\n    public initKnot(coefs: vec3[][]){\r\n\r\n        this._cosCoef = coefs[0];\r\n        this._sinCoef = coefs[1];\r\n\r\n        this._dcosCoef = coefs[2];\r\n        this._dsinCoef = coefs[3];\r\n\r\n        this._d2cosCoef = coefs[4];\r\n        this._d2sinCoef = coefs[5];\r\n\r\n    }\r\n\r\n    get calculated(){\r\n        return this._calculated;\r\n    }\r\n\r\n    set calculated(bool : boolean){\r\n        this._calculated = bool;\r\n    }\r\n\r\n\r\n    public async findCircles(knotInfo : Float32Array, doubleCheck: boolean, maxCircles: number, knotDivision: number, loader : Loader){\r\n\r\n        loader.text = (0).toFixed(1) + \" %\";\r\n        \r\n        var ki : GPUBuffer;\r\n        var input : GPUBuffer;\r\n        var output : GPUBuffer;\r\n        var staging : GPUBuffer;\r\n\r\n        \r\n        \r\n        this._frames = new Array(knotDivision);\r\n        var temp_data = new Array(knotDivision);\r\n\r\n        this._bufferSize = 5985 * 5 * knotDivision/GPUloop;\r\n\r\n        this._bindGroupLayout = this._device.createBindGroupLayout({\r\n            entries: [\r\n            {\r\n                binding: 0,\r\n                visibility: GPUShaderStage.COMPUTE,\r\n                buffer: {\r\n                    type: \"uniform\"\r\n                }\r\n            },\r\n            {\r\n                binding: 1,\r\n                visibility: GPUShaderStage.COMPUTE,\r\n                buffer: {\r\n                    type: \"read-only-storage\"\r\n                }\r\n            },\r\n            {\r\n                binding: 2,\r\n                visibility: GPUShaderStage.COMPUTE,\r\n                buffer: {\r\n                    type: \"storage\"\r\n                }\r\n            }]\r\n        });\r\n\r\n        const shaderModule = this._device.createShaderModule({\r\n            code: Compute\r\n        });\r\n\r\n        this._computePipeline = this._device.createComputePipeline({\r\n            layout: this._device.createPipelineLayout({\r\n                bindGroupLayouts: [this._bindGroupLayout]\r\n            }),\r\n            compute: {\r\n                module: shaderModule,\r\n                entryPoint: 'main',\r\n                constants: {\r\n                    BUFFER_SIZE : this._bufferSize,\r\n                },\r\n            },\r\n        });\r\n\r\n\r\n\r\n        for (let i = 0 ; i<knotDivision; i++){\r\n            temp_data[i] = [];\r\n        }\r\n\r\n        for(let calc_iter = 0; calc_iter < GPUloop; calc_iter++){\r\n\r\n            const [, tlist] = this.sett_i(knotDivision, knotDivision/GPUloop, knotDivision/GPUloop*calc_iter);\r\n\r\n            const commandEncoder = this._device.createCommandEncoder();\r\n            const passEncoder = commandEncoder.beginComputePass();\r\n\r\n            ki = this._device.createBuffer({\r\n                size: 48 * Float32Array.BYTES_PER_ELEMENT,\r\n                usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST\r\n            });\r\n        \r\n            this._device.queue.writeBuffer(ki, 0, knotInfo);\r\n\r\n            input = this._device.createBuffer({\r\n                size:  this._bufferSize * Float32Array.BYTES_PER_ELEMENT,\r\n                usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST\r\n            });\r\n\r\n            output = this._device.createBuffer({\r\n                size: this._bufferSize * Float32Array.BYTES_PER_ELEMENT,\r\n                usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC\r\n            });\r\n\r\n            staging = this._device.createBuffer({\r\n                size: this._bufferSize * Float32Array.BYTES_PER_ELEMENT,\r\n                usage: GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST\r\n            });\r\n        \r\n\r\n\r\n            this._device.queue.writeBuffer(input, 0, tlist);\r\n\r\n            const bindGroup = this._device.createBindGroup({\r\n                layout: this._bindGroupLayout,\r\n                entries: [\r\n                {\r\n                    binding: 0,\r\n                    resource: {\r\n                        buffer: ki,\r\n                    }\r\n                },\r\n                {\r\n                    binding: 1,\r\n                    resource: {\r\n                        buffer: input,\r\n                    }\r\n                },\r\n                {\r\n                    binding: 2,\r\n                    resource: {\r\n                        buffer: output,\r\n                    }\r\n                }]\r\n            });\r\n\r\n                \r\n            passEncoder.setPipeline(this._computePipeline);\r\n            passEncoder.setBindGroup(0, bindGroup);\r\n            passEncoder.dispatchWorkgroups(200,200);\r\n\r\n            // End the render pass\r\n            passEncoder.end();\r\n\r\n            // Copy output buffer to staging buffer\r\n            commandEncoder.copyBufferToBuffer(\r\n                output,\r\n                0, // Source offset\r\n                staging,\r\n                0, // Destination offset\r\n                this._bufferSize*Float32Array.BYTES_PER_ELEMENT\r\n            );\r\n\r\n            // 8: End frame by passing array of command buffers to command queue for execution\r\n            this._device.queue.submit([commandEncoder.finish()]);\r\n\r\n            // map staging buffer to read results back to JS\r\n            await staging.mapAsync(\r\n                GPUMapMode.READ,\r\n                0, // Offset\r\n                this._bufferSize*Float32Array.BYTES_PER_ELEMENT // Length\r\n            );\r\n\r\n            var data = new Float32Array(staging.getMappedRange(0, this._bufferSize*Float32Array.BYTES_PER_ELEMENT).slice(0));\r\n\r\n\r\n            for(let i = 0; i < data.length/5; i++){\r\n                if((data[5*i] == 1.0)){\r\n                    continue;\r\n                } \r\n                var ind = Math.round(data[5*i]*knotDivision);\r\n                if((ind >= knotDivision) || (ind < 0)){\r\n                    continue;\r\n                }\r\n                temp_data[ind].push([data[5*i], data[5*i+1], data[5*i+2], data[5*i+3], data[5*i+4]]);\r\n\r\n            }\r\n\r\n            loader.text = (calc_iter*100/GPUloop).toFixed(1) + \" %\";\r\n            if(loader.cancel){\r\n                return;\r\n            }\r\n        }\r\n\r\n        var ACPolyOpt = new Array(2);\r\n        ACPolyOpt[0] = [];\r\n        ACPolyOpt[1] = [];\r\n\r\n\r\n        for(let i = 0; i<knotDivision; i++){\r\n\r\n            temp_data[i] = this.removeDupe(temp_data[i], 0.01);\r\n\r\n            temp_data[i] = temp_data[i].slice(0, maxCircles * 2);\r\n\r\n            temp_data[i] = this.c5_ptolemy(temp_data[i]);\r\n\r\n            temp_data[i] = this.removeDupe(temp_data[i], 0.002);\r\n\r\n            temp_data[i] = temp_data[i].slice(0, maxCircles);\r\n            \r\n            this._calc.ACPolyAve += temp_data[i].length % 2;\r\n\r\n            ACPolyOpt[temp_data[i].length % 2].push(i);\r\n\r\n            if(loader.cancel){\r\n                return;\r\n            }\r\n        }\r\n\r\n        \r\n\r\n        this._calc.ACPolyAve = Math.round(this._calc.ACPolyAve/knotDivision);\r\n\r\n        if(doubleCheck){\r\n            loader.text = \"verifying number of circles\";\r\n            var frameIndex : number;\r\n            var leftIndex :number;\r\n            var rightIndex :number;\r\n            var maxIndex : number;\r\n            var tempDoubleCheckData : number[][];\r\n\r\n            const wonrgACPoly = ACPolyOpt[(this._calc.ACPolyAve +1)%2];\r\n\r\n            for(let i = 0; i<wonrgACPoly.length; i++){\r\n\r\n                tempDoubleCheckData = [];\r\n\r\n                frameIndex = wonrgACPoly[i];\r\n                leftIndex = frameIndex-1;\r\n                rightIndex = frameIndex+1;\r\n                if(leftIndex < 0){\r\n                    leftIndex = knotDivision-1;\r\n                }\r\n                if(rightIndex >= knotDivision){\r\n                    rightIndex = 0;\r\n                }\r\n                if(temp_data[leftIndex].length < temp_data[rightIndex]){\r\n                    maxIndex = rightIndex;\r\n                }else{\r\n                    maxIndex = leftIndex;\r\n                }\r\n\r\n                let temp : number[];\r\n                \r\n\r\n                for(let j = 0; j< temp_data[maxIndex].length; j++){\r\n                    temp = temp_data[maxIndex][j];\r\n                    tempDoubleCheckData.push([frameIndex/knotDivision, temp[1], temp[2], temp[3], temp[4]]);\r\n                }\r\n\r\n                tempDoubleCheckData = this.removeDupe(tempDoubleCheckData, 0.002);\r\n                tempDoubleCheckData = this.c5_ptolemy(tempDoubleCheckData);\r\n                temp_data[frameIndex] = this.removeDupe(tempDoubleCheckData, 0.002);\r\n\r\n                if(loader.cancel){\r\n                    return;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n        loader.text = \"creating buffers\";\r\n\r\n        this._calculated = false;\r\n\r\n\r\n        this.setFrameData(temp_data, knotDivision, loader);\r\n        if(loader.cancel){\r\n            return;\r\n        }\r\n\r\n        this.player.max = knotDivision;\r\n\r\n        this._calculated = true;\r\n        this._player.play = true;\r\n\r\n    }\r\n\r\n\r\n\r\n    private removeDupe(list : number[][], aprox : number) : number[][]{\r\n\r\n        let temp =[];\r\n\r\n        for(var i = 0; i < list.length; i++){\r\n            var include = true;\r\n            let len2 = temp.length;\r\n            for(var j = 0; j < len2; j++){\r\n                const diff = Math.sqrt(\r\n                    Math.pow(list[i][1]-temp[j][1], 2)\r\n                    + Math.pow(list[i][2]-temp[j][2], 2)\r\n                    + Math.pow(list[i][3]-temp[j][3], 2)\r\n                    + Math.pow(list[i][4]-temp[j][4], 2)\r\n                )\r\n                \r\n                if(diff < aprox){\r\n                    include = false;\r\n                }\r\n            }\r\n            if(include){\r\n                temp.push(list[i]);\r\n            }\r\n            \r\n        }\r\n        return temp;\r\n\r\n    }\r\n\r\n\r\n    private sett_i(knotDivision: number, t_0num : number, offset : number) : [number, Float32Array]{\r\n        var ind2 : number, ind3 : number, ind4 : number, ind5 : number;\r\n        var ind1 : number;\r\n        var length = 0;\r\n\r\n        const partitions = 22;\r\n\r\n        const t_i = new Float32Array(5985*t_0num*5);\r\n        length = 0;\r\n        for(ind1 = 0; ind1< t_0num; ind1++)\r\n        {\r\n            for (ind2=1;ind2<partitions;ind2++)\r\n            {\r\n                for (ind3=ind2+1;ind3<partitions;ind3++)\r\n                {\r\n                    for (ind4=ind3+1;ind4<partitions;ind4++)\r\n                    {\r\n                        for (ind5=ind4+1;ind5<partitions;ind5++)\r\n                        {\t\t\r\n                            t_i[length] = offset/knotDivision + ind1/knotDivision;\r\n                            t_i[length+1] = ind2/partitions+t_i[length];\r\n                            t_i[length+2] = ind3/partitions+t_i[length];\r\n                            t_i[length+3] = ind4/partitions+t_i[length];\r\n                            t_i[length+4] = ind5/partitions+t_i[length];\r\n\r\n                            length+=5;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return [length, t_i];\r\n    }\r\n\r\n    private setFrameData(data : number[][][], knotDivision : number, loader : Loader){\r\n\r\n        var c : vec3;\r\n        var n : vec3;\r\n        var r : number;\r\n\r\n        var tempSphere : {\r\n            position : vec3;\r\n        }[];\r\n\r\n        var radID;\r\n        \r\n        for(let iter  = 0; iter < knotDivision; iter++){\r\n\r\n            this._frames[iter] = {\r\n                redPoints : {\r\n                    position : this.knot(iter/knotDivision)\r\n                },\r\n                blackPoints : [],\r\n                circles : [],\r\n            }\r\n\r\n            tempSphere = [];\r\n\r\n            var frameData = data[iter];\r\n            for(let i = 0; i< frameData.length; i++){\r\n\r\n                var include : boolean[] = [true, true, true, true]\r\n\r\n                c = [frameData[i][5],frameData[i][6],frameData[i][7]];\r\n                n = [frameData[i][8],frameData[i][9],frameData[i][10]];\r\n                r = frameData[i][11];\r\n\r\n                radID = Math.max(0, Math.min(Math.floor(5*Math.log2(r)) + 10, circleRadLimit-1));\r\n\r\n                this._frames[iter].circles.push({center : c, normal : n, radius : r, radID : radID});\r\n\r\n                for(let j = 0; j < tempSphere.length; j++){\r\n                    for(let k = 0; k <4; k++){\r\n                        if(vec3.dist(tempSphere[j].position, this.knot(frameData[i][k+1])) < 0.001){\r\n                            include[k] = false;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                for(let k = 0; k <4; k++){\r\n                    if(include[k]){\r\n                        tempSphere.push({position : this.knot(frameData[i][k+1])});\r\n                    }\r\n\r\n                }\r\n            } \r\n\r\n            this._frames[iter].blackPoints = tempSphere;\r\n\r\n            if(loader.cancel){\r\n                return;\r\n            }\r\n\r\n        }\r\n           \r\n    }\r\n\r\n\r\n\r\n    public draw(gl: WebGLRenderingContext, program :  WebGLProgram) {\r\n\r\n        var objs = this._frames[this._player.frame]\r\n        \r\n        var tempCircle : {\r\n            center : vec3;\r\n            normal :vec3;\r\n            radius : number;\r\n            radID : number;\r\n        };\r\n\r\n        for(let i =0; i<objs.circles.length; i++){\r\n            tempCircle = objs.circles[i];\r\n            this._circles[tempCircle.radID].setCenterNormalRad(tempCircle.center, tempCircle.normal, tempCircle.radius);\r\n            this._circles[tempCircle.radID].draw(gl, program);\r\n        }\r\n\r\n        for(let i =0; i<objs.blackPoints.length; i++){\r\n            this._spheres.black.position = objs.blackPoints[i].position;\r\n            this._spheres.black.draw(gl, program);\r\n        }\r\n\r\n        this._spheres.red.position = objs.redPoints.position;\r\n        this._spheres.red.draw(gl, program);\r\n\r\n        if(this._player.play){\r\n            this._player.addFrame();\r\n        }\r\n\r\n    };\r\n\r\n    get player(){\r\n        return this._player;\r\n    }\r\n\r\n\r\n    private toCVR(v1 : vec3, v2 : vec3, v3 : vec3) : [vec3, vec3, number]{\r\n\r\n        const v12 = subtract(v1, v2);\r\n        const v23 = subtract(v2, v3);\r\n        const v31 = subtract(v3, v1);\r\n                    \r\n        // A perp vect...\r\n        var v = crossprod(v12,v23);\r\n        \r\n        // The radius...\r\n        const r = .5*(lenv(v12)*lenv(v23)*lenv(v31))/lenv(v);\r\n        \r\n        // The center...\r\n        const alpha = -0.5*((lenv(v23)*lenv(v23))*dot(v12,v31))/dot(v,v);\r\n        const beta = -0.5*((lenv(v31)*lenv(v31))*dot(v12,v23))/dot(v,v);\r\n        const gamma = -0.5*((lenv(v12)*lenv(v12))*dot(v31,v23))/dot(v,v);\r\n        \r\n        const c = addv(addv(scalarmult(alpha,v1),scalarmult(beta,v2)),scalarmult(gamma,v3));\r\n        \r\n        // Normalize v now\r\n        v = normalize(v);\r\n\r\n        return [c, v, r];\r\n    }\r\n\r\n    private decim(t_i : vec5){\r\n        \r\n        for(var i=1; i<5; i++){\r\n            t_i[i] %= 1;\r\n            if(t_i[i] < 0){\r\n                t_i[i] += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    private proxim(t_i : vec5, proxim_double : number) :boolean{\r\n        for(var i = 0 ; i < 5; i++){\r\n            for(var j = i+1; j < 5; j++){\r\n                if(\r\n                    (Math.abs(t_i[i] - t_i[j]) < proxim_double )||\r\n                    (Math.abs(t_i[i] - t_i[j] + 1 ) < proxim_double)||\r\n                    (Math.abs(t_i[j] - t_i[i] + 1 ) < proxim_double)\r\n                ){\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    private modified_Cholesky(A : mat4, X : vec4) : vec4 {\r\n        // Solves the system of equations using modified Cholesky decomposition as presented in \r\n        //\"Gill, P. E., Murray, W., and Wright, M. H. (1981). Practical optimization. Academic Press.\"\r\n\r\n        if((A.length != 16) || (X.length != 4)){\r\n            throw new Error(\"dimension error in modified_Cholesky\")\r\n        }\r\n\r\n        var max_diag = 0.0;\r\n        var max_nondiag = 0.0;\r\n        var i, j, k, s;\r\n\r\n        for (i = 0; i < 4; i++)\r\n        {\r\n            if(Math.abs(A[i*4+i]) > max_diag){\r\n                max_diag = Math.abs(A[i*4+i]);\r\n            }\r\n            for(j =0; j < 4; j++){\r\n                if((Math.abs(A[i*4+j]) > max_nondiag) && (j!= i)){\r\n                    max_nondiag = Math.abs(A[i*4+j]);\r\n                }\r\n            }\r\n        }\r\n\r\n        var beta2 = Math.max(max_diag, max_nondiag/(Math.sqrt(4*4-1)), 0.0001);\r\n\r\n        var temp = new Array(16);\r\n        var D = new Array(4);\r\n        var L = new Array(16);\r\n\r\n        var theta = [0, 0, 0, 0];\r\n\r\n        for(j =0; j<4; j++){\r\n            temp[j*4 + j] = A[j*4 + j];\r\n            for(s = 0; s< j; s++){\r\n                temp[j*4 + j] -= D[s]*L[j*4 + s]*L[j*4 + s];\r\n            }\r\n            \r\n            for(i=j+1; i<4; i++){\r\n                temp[i*4 + j] = A[i*4 + j];\r\n                for(s = 0; s< j; s++){\r\n                    temp[i*4 + j] -= D[s]*L[i*4 + s]*L[j*4 + s];\r\n                }\r\n\r\n                if(theta[j]< Math.abs(temp[i*4 + j])){\r\n                    theta[j]= Math.abs(temp[i*4 + j]);\r\n                }\r\n            }\r\n\r\n            D[j] = Math.max(Math.abs(temp[j*4 + j]), theta[j]*theta[j]/beta2, 0.001);\r\n            \r\n            for(i=j+1; i<4; i++){\r\n                L[i*4 + j] = temp[i*4 + j]/D[j];\r\n            }\r\n            L[j*4 + j] = 1.0;\r\n        }\r\n\r\n        // forward substitution.\r\n        var y = new Array(4);\r\n        var sum;\r\n\r\n        for (i = 0; i < 4; i++)\r\n        {\r\n            sum = X[i];\r\n            for (j = 0; j < i; j++){\r\n                sum -= L[i*4+j] * y[j];\r\n            }\r\n            y[i] = sum / L[i*4 +i];\r\n        }\r\n\r\n\r\n        // back substitution.\r\n        var retval : vec4 = [0,0,0,0];\r\n\r\n        for (k = 4 - 1; k >= 0; k--)\r\n        {\r\n            sum = y[k];\r\n            for (j = k + 1; j < 4; j++){\r\n                sum -= L[j*4+k] * retval[j] * D[k];\r\n            }\r\n            retval[k] = sum / (D[k]);\r\n        }\r\n        return retval;\r\n\r\n    }\r\n\r\n\r\n    private gradient_ptolemy(nv : number[], vdv : number[], grad : vec4){\r\n        \r\n        const dptolemy1423d2 = (-nv[2]/nv[4])*vdv[1]+(-nv[1]/nv[5])*vdv[2]-(nv[7]/nv[0])*vdv[0];\r\n        const dptolemy1423d3 = (nv[2]/nv[4])*vdv[5]+(nv[5]/nv[1])*vdv[4]-(-nv[0]/nv[7])*vdv[6];\r\n        const dptolemy1423d4 = (nv[4]/nv[2])*vdv[8]+(nv[1]/nv[5])*vdv[9]-(nv[0]/nv[7])*vdv[10];\r\n\r\n        const dptolemy1253d2 = (nv[8]/nv[0])*vdv[0]+(-nv[1]/nv[6])*vdv[3]-(-nv[3]/nv[4])*vdv[1];\r\n        const dptolemy1253d3 = (-nv[0]/nv[8])*vdv[7]+(nv[6]/nv[1])*vdv[4]-(nv[3]/nv[4])*vdv[5];\r\n        const dptolemy1253d5 = (nv[0]/nv[8])*vdv[13]+(nv[1]/nv[6])*vdv[12]-(nv[4]/nv[3])*vdv[11];\r\n\r\n\r\n        grad[0] = dptolemy1423d2 + dptolemy1253d2;\r\n        grad[1] = dptolemy1423d3 + dptolemy1253d3;\r\n        grad[2] = dptolemy1423d4;\r\n        grad[3] = dptolemy1253d5;\r\n\r\n    }\r\n\r\n    private hessian_ptolemy(nv : number[], vdv : number[], dvdv : number[], vd2v : number[], hess : mat4){\r\n        \r\n\r\n\r\n            const d2ptolemy1423d2d2 = ((-nv[2]/nv[4])*(vd2v[1] - dvdv[0] + (Math.pow(vdv[1], 2)/ Math.pow(nv[4] , 2)))\r\n                +(-nv[1]/nv[5])*(vd2v[2] - dvdv[0] + (Math.pow(vdv[2], 2)/ Math.pow(nv[5] , 2)))\r\n                -(nv[7]/nv[0])*(vd2v[0] + dvdv[0] -(Math.pow(vdv[0], 2)/ Math.pow(nv[0] , 2))));\r\n\r\n            const d2ptolemy1423d2d3 = (1/(nv[7]*nv[0])*vdv[6]*vdv[0] \r\n                + (-nv[2]/nv[4])*(dvdv[1] - (vdv[5]*vdv[1]/ Math.pow(nv[4] , 2))) + 1/(-nv[1]*nv[5])*vdv[4]*vdv[2]);\r\n\r\n            const d2ptolemy1423d2d4 = (-1/(nv[7]*nv[0])*vdv[10]*vdv[0] + 1/(-nv[2]*nv[4])*vdv[8]*vdv[1]\r\n                + (-nv[1]/nv[5])*(dvdv[2] - (vdv[9]*vdv[2]/ Math.pow(nv[5] , 2)))); \r\n\r\n            const d2ptolemy1423d3d3 = ((nv[2]/nv[4])*(vd2v[5] + dvdv[4] - (Math.pow(vdv[5], 2)/ Math.pow(nv[4] , 2)))\r\n                +(nv[5]/nv[1])*(vd2v[4] + dvdv[4] - (Math.pow(vdv[4], 2)/ Math.pow(nv[1] , 2)))\r\n                -(-nv[0]/nv[7])*(vd2v[6] - dvdv[4] +(Math.pow(vdv[6], 2)/ Math.pow(nv[7] , 2))));\r\n\r\n            const d2ptolemy1423d3d4 = (-(-nv[0]/nv[7])*(dvdv[5] - vdv[10]*vdv[6]/ Math.pow(nv[7] , 2)) \r\n                + 1/(nv[2]*nv[4])*vdv[8]*vdv[5]+1/(nv[5]*nv[1])*vdv[9]*vdv[4]);\r\n            \r\n            const d2ptolemy1423d4d4 = ((nv[4]/nv[2])*(vd2v[8] + dvdv[7] - (Math.pow(vdv[8], 2)/ Math.pow(nv[2] , 2)))\r\n                +(nv[1]/nv[5])*(vd2v[9] + dvdv[7] - (Math.pow(vdv[9], 2)/ Math.pow(nv[5] , 2)))\r\n                -(nv[0]/nv[7])*(vd2v[10] + dvdv[7] -(Math.pow(vdv[10], 2)/ Math.pow(nv[7] , 2))));\r\n\r\n\r\n\r\n            const d2ptolemy1253d2d2 = ((nv[8]/nv[0])*(vd2v[0] + dvdv[0] - (Math.pow(vdv[0], 2)/ Math.pow(nv[0] , 2)))\r\n                +(-nv[1]/nv[6])*(vd2v[3] - dvdv[0] + (Math.pow(vdv[3], 2)/ Math.pow(nv[6] , 2)))\r\n                -(-nv[3]/nv[4])*(vd2v[1] - dvdv[0] +(Math.pow(vdv[1], 2)/ Math.pow(nv[4] , 2))));\r\n            \r\n            const d2ptolemy1253d2d3 = (-(-nv[3]/nv[4])*(dvdv[1]-vdv[1]*vdv[5]/Math.pow(nv[4] , 2)) \r\n                + 1/(-nv[8]*nv[0])*vdv[7]*vdv[0]+1/(-nv[1]*nv[6])*vdv[4]*vdv[3]);\r\n\r\n            const d2ptolemy1253d2d5 = (-1/(-nv[3]*nv[4])*vdv[11]*vdv[1] + 1/(nv[8]*nv[0])*vdv[13]*vdv[0]\r\n                +(-nv[1]/nv[6])*(dvdv[3]-vdv[3]*vdv[12]/ Math.pow(nv[6] , 2)));\r\n\r\n            const d2ptolemy1253d3d3 = ((-nv[0]/nv[8])*(vd2v[7] - dvdv[4] + (Math.pow(vdv[7], 2)/ Math.pow(nv[8] , 2)))\r\n                +(nv[6]/nv[1])*(vd2v[4] + dvdv[4] - (Math.pow(vdv[4], 2)/ Math.pow(nv[1] , 2)))\r\n                -(nv[3]/nv[4])*(vd2v[5] + dvdv[4] -(Math.pow(vdv[5], 2)/ Math.pow(nv[4] , 2))));\r\n\r\n            const d2ptolemy1253d3d5 = (-1/(nv[3]*nv[4])*vdv[11]*vdv[5] + (-nv[0]/nv[8])*(dvdv[6]-vdv[7]*vdv[13]/Math.pow(nv[8] , 2))\r\n                +1/(nv[6]*nv[1])*vdv[12]*vdv[4]);\r\n\r\n            const d2ptolemy1253d5d5 = ((nv[0]/nv[8])*(vd2v[13] + dvdv[8] - (Math.pow(vdv[13], 2)/ Math.pow(nv[8] , 2)))\r\n                +(nv[1]/nv[6])*(vd2v[12] + dvdv[8] - (Math.pow(vdv[12], 2)/ Math.pow(nv[6] , 2)))\r\n                -(nv[4]/nv[3])*(vd2v[11] + dvdv[8] -(Math.pow(vdv[11], 2)/ Math.pow(nv[3] , 2))));\r\n\r\n\r\n            hess[0] = d2ptolemy1423d2d2 + d2ptolemy1253d2d2; \r\n            hess[1] = d2ptolemy1423d2d3 + d2ptolemy1253d2d3;\r\n            hess[2] = d2ptolemy1423d2d4;\r\n            hess[3] = d2ptolemy1253d2d5;\r\n\r\n            hess[4] = d2ptolemy1423d2d3 + d2ptolemy1253d2d3;\r\n            hess[5] = d2ptolemy1423d3d3 + d2ptolemy1253d3d3;\r\n            hess[6] = d2ptolemy1423d3d4;\r\n            hess[7] = d2ptolemy1253d3d5;\r\n\r\n            hess[8] = d2ptolemy1423d2d4; \r\n            hess[9] = d2ptolemy1423d3d4;\r\n            hess[10] = d2ptolemy1423d4d4;\r\n            hess[11] = 0.0;\r\n\r\n            hess[12] = d2ptolemy1253d2d5; \r\n            hess[13] = d2ptolemy1253d3d5;\r\n            hess[14] = 0.0;\r\n            hess[15] = d2ptolemy1253d5d5;\r\n\r\n        \r\n    }\r\n\r\n\r\n    private setvariables(t_i : vec5, v: vec3[], nv : number[], vv : vec3[], dv : vec3[], vdv : number[], dvdv : number[], d2v : vec3[], vd2v : number[]){\r\n\r\n        v[0] = this.knot(t_i[0]);\r\n        v[1] = this.knot(t_i[1]);\r\n        v[2] = this.knot(t_i[2]);\r\n        v[3] = this.knot(t_i[3]);\r\n        v[4] = this.knot(t_i[4]);\r\n\r\n        vv[0] = subtract(v[1], v[0]);\r\n        vv[1] = subtract(v[2], v[0]);\r\n        vv[2] = subtract(v[3], v[0]);\r\n        vv[3] = subtract(v[4], v[0]);\r\n        vv[4] = subtract(v[2], v[1]);\r\n        vv[5] = subtract(v[3], v[1]);\r\n        vv[6] = subtract(v[4], v[1]);\r\n        vv[7] = subtract(v[3], v[2]);\r\n        vv[8] = subtract(v[4], v[2]);\r\n\r\n        nv[0] = lenv(vv[0]);\r\n        nv[1] = lenv(vv[1]);\r\n        nv[2] = lenv(vv[2]);\r\n        nv[3] = lenv(vv[3]);\r\n        nv[4] = lenv(vv[4]);\r\n        nv[5] = lenv(vv[5]);\r\n        nv[6] = lenv(vv[6]);\r\n        nv[7] = lenv(vv[7]);\r\n        nv[8] = lenv(vv[8]);\r\n\r\n        for(var i =0; i<9; i++){\r\n            if(nv[i] < this._calc.error_field){\r\n                return true;\r\n                }\r\n        }\r\n\r\n        dv[0] = this.dknot(t_i[1]);\r\n        dv[1] = this.dknot(t_i[2]);\r\n        dv[2] = this.dknot(t_i[3]);\r\n        dv[3] = this.dknot(t_i[4]);\r\n\r\n        vdv[0] = dot(vv[0],dv[0]);\r\n        vdv[1] = dot(vv[4],dv[0]);\r\n        vdv[2] = dot(vv[5],dv[0]);\r\n        vdv[3] = dot(vv[6],dv[0]);\r\n        vdv[4] = dot(vv[1],dv[1]);\r\n        vdv[5] = dot(vv[4],dv[1]);\r\n        vdv[6] = dot(vv[7],dv[1]);\r\n        vdv[7] = dot(vv[8],dv[1]);\r\n        vdv[8] = dot(vv[2],dv[2]);\r\n        vdv[9] = dot(vv[5],dv[2]);\r\n        vdv[10] = dot(vv[7],dv[2]);\r\n        vdv[11] = dot(vv[3],dv[3]);\r\n        vdv[12] = dot(vv[6],dv[3]);\r\n        vdv[13] = dot(vv[8],dv[3]);\r\n\r\n        d2v[0] = this.d2knot(t_i[1]);\r\n        d2v[1] = this.d2knot(t_i[2]);\r\n        d2v[2] = this.d2knot(t_i[3]);\r\n        d2v[3] = this.d2knot(t_i[4]);\r\n\r\n        vd2v[0] = dot(vv[0],d2v[0]);\r\n        vd2v[1] = dot(vv[4],d2v[0]);\r\n        vd2v[2] = dot(vv[5],d2v[0]);\r\n        vd2v[3] = dot(vv[6],d2v[0]);\r\n        vd2v[4] = dot(vv[1],d2v[1]);\r\n        vd2v[5] = dot(vv[4],d2v[1]);\r\n        vd2v[6] = dot(vv[7],d2v[1]);\r\n        vd2v[7] = dot(vv[8],d2v[1]);\r\n        vd2v[8] = dot(vv[2],d2v[2]);\r\n        vd2v[9] = dot(vv[5],d2v[2]);\r\n        vd2v[10] = dot(vv[7],d2v[2]);\r\n        vd2v[11] = dot(vv[3],d2v[3]);\r\n        vd2v[12] = dot(vv[6],d2v[3]);\r\n        vd2v[13] = dot(vv[8],d2v[3]);\r\n\r\n\r\n        dvdv[0] = dot(dv[0],dv[0]);\r\n        dvdv[1] = dot(dv[0],dv[1]);\r\n        dvdv[2] = dot(dv[0],dv[2]);\r\n        dvdv[3] = dot(dv[0],dv[3]);\r\n        dvdv[4] = dot(dv[1],dv[1]);\r\n        dvdv[5] = dot(dv[1],dv[2]);\r\n        dvdv[6] = dot(dv[1],dv[3]);\r\n        dvdv[7] = dot(dv[2],dv[2]);\r\n        dvdv[8] = dot(dv[3],dv[3]);\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    \r\n    private knot(param : number) : vec3{\r\n        const t = param * 2 * pi;\r\n\r\n        return vec3.add(\r\n            vec3.create(),\r\n            vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scale(vec3.create(), this._cosCoef[5], cos(6*t)), this._cosCoef[4], cos(5*t)), this._cosCoef[3], cos(4*t)), this._cosCoef[2], cos(3*t)), this._cosCoef[1], cos(2*t)), this._cosCoef[0], cos(t)),\r\n            vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scale(vec3.create(), this._sinCoef[5], sin(6*t)), this._sinCoef[4], sin(5*t)), this._sinCoef[3], sin(4*t)), this._sinCoef[2], sin(3*t)), this._sinCoef[1], sin(2*t)), this._sinCoef[0], sin(t))\r\n        )\r\n    }\r\n\r\n    private dknot(param : number) : vec3{\r\n        const t = param * 2 * pi;\r\n\r\n        return vec3.scale(\r\n            vec3.create(), \r\n            vec3.add(\r\n                vec3.create(),\r\n                vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scale(vec3.create(), this._dcosCoef[5], cos(6*t)), this._dcosCoef[4], cos(5*t)), this._dcosCoef[3], cos(4*t)), this._dcosCoef[2], cos(3*t)), this._dcosCoef[1], cos(2*t)), this._dcosCoef[0], cos(t)),\r\n                vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scale(vec3.create(), this._dsinCoef[5], sin(6*t)), this._dsinCoef[4], sin(5*t)), this._dsinCoef[3], sin(4*t)), this._dsinCoef[2], sin(3*t)), this._dsinCoef[1], sin(2*t)), this._dsinCoef[0], sin(t))\r\n            ),\r\n            2*pi\r\n        )\r\n    }\r\n\r\n    private d2knot(param : number) : vec3{\r\n        const t = param * 2 * pi;\r\n        return vec3.scale(\r\n            vec3.create(),\r\n            vec3.add(\r\n                vec3.create(),\r\n                vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(),vec3.scale(vec3.create(), this._d2cosCoef[5], cos(6*t)),  this._d2cosCoef[4], cos(5*t)), this._d2cosCoef[3], cos(4*t)), this._d2cosCoef[2], cos(3*t)), this._d2cosCoef[1], cos(2*t)), this._d2cosCoef[0], cos(t)),\r\n                vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scaleAndAdd(vec3.create(), vec3.scale(vec3.create(), this._d2cosCoef[5], sin(6*t)), this._d2sinCoef[4], sin(5*t)), this._d2sinCoef[3], sin(4*t)), this._d2sinCoef[2], sin(3*t)), this._d2sinCoef[1], sin(2*t)), this._d2sinCoef[0], sin(t))\r\n            ),\r\n            4*pi*pi\r\n        )\r\n    }\r\n\r\n\r\n\r\n    private c5_ptolemy(list : number[][]) : number[][]\r\n    {\r\n        \r\n        var quint = [];\r\n        const max_iter : number = 250;\r\n\r\n        var v : vec3[] = new Array(5);\r\n        var vv : vec3[] = new Array(9);\r\n        var nv : number[] = new Array(9);\r\n        var dv : vec3[] = new Array(4);\r\n        var vdv : number[] = new Array(14);\r\n        var dvdv : number[] = new Array(9);\r\n        var d2v : vec3[] = new Array(4);\r\n        var vd2v : number[] = new Array(14);\r\n\r\n        var t_i : vec5 = [0,0,0,0,0];\r\n\r\n        var grad : vec4 = [0,0,0,0];\r\n        var grad_length : number;\r\n        var diff : vec4 = [0,0,0,0];\r\n        var ptol : number;\r\n\r\n        var hess : mat4 = [0,0,0,0,\r\n            0,0,0,0,\r\n            0,0,0,0,\r\n            0,0,0,0];\r\n\r\n\r\n        const stop_double = 0.00001;\r\n\r\n        var bad_abort = false;\r\n\r\n\r\n        var i : number;\r\n        \r\n\r\n        var iter = 0;\r\n\r\n        const c : number = 0.0001;\r\n        const rho : number = 0.75;\r\n        var alpha : number;\r\n\r\n        var diff_len : number;\r\n        var grad_dot_diff : number;\r\n\r\n        var counter : number;\r\n        var x_n : vec5 = [0,0,0,0,0];\r\n        var func : number;                          \r\n\r\n        \r\n        \r\n        \r\n\r\n\r\n        for(let ticker = 0; ticker < list.length; ticker++){\r\n\r\n            t_i[0] = list[ticker][0];\r\n            t_i[1] = list[ticker][1];\r\n            t_i[2] = list[ticker][2];\r\n            t_i[3] = list[ticker][3];\r\n            t_i[4] = list[ticker][4];\r\n\r\n            iter = 0;\r\n\r\n            while(iter<max_iter){\r\n\r\n                bad_abort = this.setvariables(t_i, v, nv, vv, dv, vdv, dvdv, d2v, vd2v);\r\n\r\n                if(bad_abort){\r\n                    break;\r\n                }\r\n\r\n                ptol = nv[0]*nv[8]+nv[1]*nv[6]-nv[3]*nv[4] + nv[2]*nv[4]+nv[5]*nv[1]-nv[0]*nv[7];\r\n                this.gradient_ptolemy(nv, vdv, grad);\r\n                this.hessian_ptolemy(nv, vdv , dvdv, vd2v, hess);\r\n\r\n                grad_length = Math.sqrt(\r\n                    Math.pow(grad[0], 2)\r\n                    + Math.pow(grad[1], 2)\r\n                    + Math.pow(grad[2], 2)\r\n                    + Math.pow(grad[3], 2)\r\n                )\r\n\r\n                \r\n                if((grad_length < 0.0000001) || (ptol <= 0.0000001)){\r\n                    if(ptol > 0.0000001){\r\n                        break;\r\n                    }\r\n                    var [center, normal, radius] = this.toCVR(this.knot(t_i[0]),this.knot(t_i[1]),this.knot(t_i[2]));\r\n                    quint.push([t_i,center, normal, radius].flat());\r\n                    break;\r\n                }\r\n\r\n\r\n\r\n                diff = this.modified_Cholesky(hess, grad);\r\n\r\n\r\n                counter =0;\r\n                alpha = 1.0/rho;\r\n\r\n                diff_len = Math.sqrt(\r\n                    Math.pow(diff[0], 2)\r\n                    + Math.pow(diff[1], 2)\r\n                    + Math.pow(diff[2], 2)\r\n                    + Math.pow(diff[3], 2)\r\n                );\r\n\r\n                grad_dot_diff = (\r\n                        grad[0]*diff[0]\r\n                        + grad[1]*diff[1]\r\n                        + grad[2]*diff[2]\r\n                        + grad[3]*diff[3]\r\n                );\r\n\r\n                do{\r\n\r\n                    alpha *= rho;\r\n                    counter++;\r\n                    \r\n                    x_n[0] = t_i[0];\r\n                    for(i = 0; i<4; i++){\r\n                        x_n[i+1] = t_i[i+1] - alpha*diff[i];\r\n                    }\r\n\r\n                    v[1] = this.knot(x_n[1]);\r\n                    v[2] = this.knot(x_n[2]);\r\n                    v[3] = this.knot(x_n[3]);\r\n                    v[4] = this.knot(x_n[4]);\r\n\r\n                    vv[0] = subtract(v[1], v[0]);\r\n                    vv[1] = subtract(v[2], v[0]);\r\n                    vv[2] = subtract(v[3], v[0]);\r\n                    vv[3] = subtract(v[4], v[0]);\r\n                    vv[4] = subtract(v[2], v[1]);\r\n                    vv[5] = subtract(v[3], v[1]);\r\n                    vv[6] = subtract(v[4], v[1]);\r\n                    vv[7] = subtract(v[3], v[2]);\r\n                    vv[8] = subtract(v[4], v[2]);\r\n\r\n\r\n                    nv[0] = lenv(vv[0]);\r\n                    nv[1] = lenv(vv[1]);\r\n                    nv[2] = lenv(vv[2]);\r\n                    nv[3] = lenv(vv[3]);\r\n                    nv[4] = lenv(vv[4]);\r\n                    nv[5] = lenv(vv[5]);\r\n                    nv[6] = lenv(vv[6]);\r\n                    nv[7] = lenv(vv[7]);\r\n                    nv[8] = lenv(vv[8]);\r\n\r\n                    func =  nv[0]*nv[8]+nv[1]*nv[6]-nv[3]*nv[4] + nv[2]*nv[4]+nv[5]*nv[1]-nv[0]*nv[7];\r\n\r\n                }while((func > (ptol - c*alpha*grad_dot_diff))&& (alpha*diff_len>0.000005) && (counter < 20));\r\n\r\n                t_i = [x_n[0], x_n[1], x_n[2], x_n[3], x_n[4]];\r\n\r\n                this.decim(t_i);\r\n\r\n                if(this.proxim(t_i, 0.0002)){\r\n                    break;\r\n                }\r\n\r\n                iter++;\r\n\r\n            } \r\n\r\n\r\n        }\r\n        \r\n        return <number[][]>quint;\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction subtract (a : vec3, b : vec3) : vec3{\r\n    return [a[0]-b[0],a[1]-b[1],a[2]-b[2]];\r\n}\r\nfunction addv(a : vec3, b : vec3) : vec3{\r\n    return [a[0]+b[0],a[1]+b[1],a[2]+b[2]];\r\n}\r\nfunction lenv (a : vec3) : number{\r\n    return Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);\r\n}\r\nfunction scalarmult (c : number, a : vec3) : vec3{\r\n    return [c*a[0], c*a[1], c*a[2]];\r\n}\r\nfunction dot (a : vec3, b : vec3) : number {\r\n    return a[0]*b[0]+a[1]*b[1]+a[2]*b[2];\r\n}\r\nfunction crossprod(a : vec3, b : vec3) : vec3 {\r\n    return [a[1]*b[2]- a[2]*b[1], a[2]*b[0]-a[0]*b[2], a[0]*b[1]-a[1]*b[0]];\r\n}\r\nfunction normalize(a : vec3) : vec3 {\r\n    const lena = lenv(a);\r\n    return [a[0]/lena,a[1]/lena,a[2]/lena];\r\n}\r\n\r\n\r\nexport class Player{\r\n\r\n    private videoControls : HTMLElement;\r\n\r\n    private playpause : HTMLElement;\r\n    private speedDrop : DropDown;\r\n    private progress : HTMLElement;\r\n    private progressBar : HTMLElement;\r\n\r\n    private left:number;\r\n    private pressed : boolean;\r\n\r\n    private _animation: {\r\n        play : boolean;\r\n        frame : number;\r\n        max : number;\r\n        speed : number;\r\n    };\r\n    \r\n\r\n    constructor(){\r\n        this.videoControls = <HTMLElement>document.getElementById('video-controls');\r\n        this.playpause = <HTMLElement>document.getElementById('playpause');\r\n\r\n        this.progress = <HTMLElement>document.getElementById('progress');\r\n        this.progressBar = <HTMLElement>document.getElementById('progress-bar');\r\n\r\n        this.left = 0;\r\n        this.pressed = false;\r\n\r\n        this.speedDrop = new DropDown(\"speed dropdown\", 1);\r\n\r\n        this._animation = {\r\n            play : false,\r\n            frame : 0,\r\n            max : 0,\r\n            speed : 1,\r\n        };\r\n\r\n        this.videoControls.classList.toggle('hidden', true);\r\n        this.resize();\r\n\r\n    }\r\n\r\n    public initCallback(){\r\n\r\n        this.playpause.addEventListener('click', () => {this.playBtnResponse();});\t\t\t\r\n   \r\n        this.progress.addEventListener('mousedown', (event) => {if(event.button == 0){this.pressed = true;this.progressResponse(event);}});\r\n        document.addEventListener('mousemove', (event) => {this.progressResponse(event);});\r\n        document.addEventListener('mouseup', ()=>{this.pressed = false;})\r\n\r\n    }\r\n\r\n    private progressResponse(event : MouseEvent){\r\n        if(this.pressed){\r\n            var pos = (event.clientX - this.left) / this.progress.offsetWidth;\r\n            this.frame = Math.max(Math.min(Math.round(pos * (this._animation.max-1)), this._animation.max-1), 0);\r\n        }\r\n    }\r\n\r\n    private playBtnResponse() {\r\n        // Play/Pause button\r\n        this._animation.play = !this._animation.play;\r\n        if (this._animation.play) {\r\n            this.playpause.setAttribute('data-state', 'play');\r\n        }\r\n        else {\r\n            this.playpause.setAttribute('data-state', 'pause');\r\n        }\r\n\r\n    }\r\n\r\n    get frame(){\r\n        return Math.floor(this._animation.frame);\r\n    }\r\n\r\n    public addFrame(num : number = this.speed){\r\n        if(this._animation.max == 1600){\r\n        }else{\r\n            num /= 2;\r\n        }\r\n        this.frame = this._animation.frame + num;\r\n    }\r\n\r\n    set frame(frame : number){\r\n        if(frame < 0){\r\n            frame = 0;\r\n        } else if(frame >= this._animation.max){\r\n            frame = 0;\r\n        }\r\n\r\n        this.progressBar.style.width = String(Math.floor((frame / (this._animation.max-1)) * 1000)/10) + '%';\r\n        this._animation.frame = frame;\r\n    }\r\n\r\n    get speed(){\r\n        this._animation.speed = this.speedDrop.value;\r\n        return this._animation.speed;\r\n    }\r\n\r\n    get play(){\r\n        return this._animation.play;\r\n    }\r\n\r\n    set max(max : number){\r\n        this._animation.max = max;\r\n    }\r\n\r\n    set play(bool : boolean){\r\n        this._animation.play = bool;\r\n    }\r\n\r\n    public Disable(disable : boolean){\r\n        if(disable === true){\r\n            this.videoControls.classList.toggle('hidden', true);\r\n        } else {\r\n            this.videoControls.classList.toggle('hidden', false);\r\n        }\r\n    }\r\n\r\n    public resize(){\r\n        this.left = this.progress.getBoundingClientRect().left;\r\n    }\r\n    public reset(){\r\n        this.frame = 0;\r\n        this.play = true;\r\n        this._animation.speed=1;\r\n        this.speedDrop.reset();\r\n        this.resize();\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\n","export default \"\\r\\n\\r\\n\\r\\nstruct fourier_series {\\r\\n    cos : array<vec3f, 6>,\\r\\n    sin : array<vec3f, 6>,\\r\\n};\\r\\n\\r\\n\\r\\n@group(0) @binding(0)var<uniform> knot_info: fourier_series;\\r\\n@group(0) @binding(1)var<storage, read> tlist: array<f32>;\\r\\n@group(0) @binding(2)var<storage, read_write> output: array<f32>;\\r\\n\\r\\n\\r\\nconst PI : f32 = 3.1415926535897932384626433832795;\\r\\nconst error_field : f32 = 0.0025;\\r\\nconst grad_stop_double : f32 = 0.00001;\\r\\nconst ptol_stop_double : f32 = 0.001;\\r\\n\\r\\nconst MAX_ITER : i32 = 150;\\r\\noverride BUFFER_SIZE : u32 = 5985 * 100;\\r\\n\\r\\nvar<workgroup> t_i : array<array<f32, 5>, 16>;\\r\\n\\r\\nvar<workgroup> abort : array<bool, 16>;\\r\\n\\r\\nvar<workgroup> vv : array<array<vec3f, 16>, 16>;\\r\\nvar<workgroup> nv : array<array<f32, 16>, 16>;\\r\\nvar<workgroup> dv : array<array<vec3f, 4>, 16>;\\r\\nvar<workgroup> d2v : array<array<vec3f, 4>, 16>;\\r\\n\\r\\nvar<workgroup> ptol : array<f32, 16>;\\r\\nvar<workgroup> grad : array<array<f32, 4>, 16>;\\r\\nvar<workgroup> hess : array<array<f32, 16>, 16>;\\r\\n\\r\\n\\r\\nvar<workgroup> diff : array<array<f32, 4>, 16>;\\r\\nvar<workgroup> backtrack : array<array<u32, 16>, 16>;\\r\\n\\r\\n\\r\\nfn set_variables(x_index : u32, z_index : u32){\\r\\n\\r\\n    for(var i : u32 = 0; i<4; i++){\\r\\n        vv[z_index][x_index + 4*i] = (\\r\\n            knotc(t_i[z_index][x_index + 1]) \\r\\n            - knotc(t_i[z_index][i])\\r\\n        );\\r\\n    }\\r\\n\\r\\n    vv[z_index][9] = -vv[z_index][11];\\r\\n    vv[z_index][14] = -vv[z_index][15];\\r\\n\\r\\n    for(var i : u32 = 0; i<4; i++){\\r\\n        nv[z_index][x_index + 4*i] = length(vv[z_index][x_index + 4*i]);\\r\\n    }\\r\\n\\r\\n\\r\\n    if(\\r\\n        (nv[z_index][0] < error_field) ||\\r\\n        (nv[z_index][1] < error_field) ||\\r\\n        (nv[z_index][2] < error_field) ||\\r\\n        (nv[z_index][3] < error_field) ||\\r\\n        (nv[z_index][5] < error_field) ||\\r\\n        (nv[z_index][6] < error_field) ||\\r\\n        (nv[z_index][10] < error_field) ||\\r\\n        (nv[z_index][11] < error_field) ||\\r\\n        (nv[z_index][15] < error_field)){\\r\\n        abort[z_index] = true;\\r\\n    }\\r\\n\\r\\n\\r\\n    ptol[z_index] = nv[z_index][2]*nv[z_index][5]+nv[z_index][6]*nv[z_index][1]-nv[z_index][0]*nv[z_index][10] \\r\\n                    +nv[z_index][2]*nv[z_index][11]+nv[z_index][1]*nv[z_index][15]-nv[z_index][3]*nv[z_index][10];\\r\\n\\r\\n\\r\\n    dv[z_index][x_index] = knotd(t_i[z_index][x_index + 1]);\\r\\n    d2v[z_index][x_index] = knotd2(t_i[z_index][x_index + 1]);\\r\\n\\r\\n}\\r\\n    \\r\\nfn grad_compute(x : u32, z_index : u32){\\r\\n\\r\\n    var sgn : array<f32, 3>;\\r\\n\\r\\n    var index1 : array<u32, 3>;\\r\\n    var index2 : array<u32, 3>;\\r\\n\\r\\n    let dvv : vec3f = dv[z_index][x];\\r\\n\\r\\n    index2[0] = 1;\\r\\n\\r\\n    switch x {\\r\\n        case 0: {\\r\\n            index1[0] = 10;   index1[1] = 2;   index1[2] = 1;\\r\\n            index2[0] = 0;   index2[1] = 8;   index2[2] = 12;\\r\\n            sgn[0] = f32(-1);   sgn[1] = f32(1);   sgn[2] = f32(1);\\r\\n\\r\\n        }\\r\\n        case 1: {\\r\\n            index1[0] = 6;   index1[1] = 0;   index1[2] = 2;\\r\\n            index2[0] = 1;   index2[1] = 13;   index2[2] = 5;\\r\\n            sgn[0] = f32(1);   sgn[1] = f32(-1);   sgn[2] = f32(1);\\r\\n\\r\\n        }\\r\\n        case 2: {\\r\\n            index1[0] = 5;   index1[1] = 1;   index1[2] = 0;\\r\\n            index2[0] = 2;   index2[1] = 6;   index2[2] = 10;\\r\\n            sgn[0] = f32(1);   sgn[1] = f32(1);   sgn[2] = f32(-1);\\r\\n\\r\\n        }\\r\\n        default {\\r\\n            sgn[0] = f32(0);   sgn[1] = f32(0);   sgn[2] = f32(0);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    \\r\\n\\r\\n    let dptol1423 : f32= (\\r\\n        sgn[0]*(nv[z_index][index1[0]]/nv[z_index][index2[0]])*dot(vv[z_index][index2[0]],dvv) \\r\\n        + sgn[1]*(nv[z_index][index1[1]]/nv[z_index][index2[1]])*dot(vv[z_index][index2[1]],dvv)\\r\\n        + sgn[2]*(nv[z_index][index1[2]]/nv[z_index][index2[2]])*dot(vv[z_index][index2[2]],dvv)\\r\\n    );\\r\\n\\r\\n    switch x {\\r\\n        case 1: {\\r\\n            index1[0] = 3;   index1[1] = 2;   index1[2] = 15;\\r\\n            index2[0] = 13;   index2[1] = 9;   index2[2] = 1;\\r\\n            sgn[0] = f32(-1);   sgn[1] = f32(1);   sgn[2] = f32(1);\\r\\n\\r\\n        }\\r\\n        case 2: {\\r\\n            index1[0] = 1;   index1[1] = 3;   index1[2] = 11;\\r\\n            index2[0] = 14;   index2[1] = 10;   index2[2] = 2;\\r\\n            sgn[0] = f32(1);   sgn[1] = f32(-1);   sgn[2] = f32(1);\\r\\n\\r\\n        }\\r\\n        case 3: {\\r\\n            index1[0] = 2;   index1[1] = 1;   index1[2] = 10;\\r\\n            index2[0] = 11;   index2[1] = 15;   index2[2] = 3;\\r\\n            sgn[0] = f32(1);   sgn[1] = f32(1);   sgn[2] = f32(-1);\\r\\n\\r\\n        }\\r\\n        default {\\r\\n            sgn[0] = f32(0);   sgn[1] = f32(0);   sgn[2] = f32(0);\\r\\n        }\\r\\n    }\\r\\n\\r\\n\\r\\n    let dptol1453 : f32 = (\\r\\n        sgn[0]*(nv[z_index][index1[0]]/nv[z_index][index2[0]])*dot(vv[z_index][index2[0]],dvv) \\r\\n        + sgn[1]*(nv[z_index][index1[1]]/nv[z_index][index2[1]])*dot(vv[z_index][index2[1]],dvv)\\r\\n        + sgn[2]*(nv[z_index][index1[2]]/nv[z_index][index2[2]])*dot(vv[z_index][index2[2]],dvv)\\r\\n    );\\r\\n\\r\\n\\r\\n    grad[z_index][x] = dptol1423 + dptol1453;\\r\\n\\r\\n}\\r\\n\\r\\nfn hess_compute(x : u32, z_index : u32){\\r\\n\\r\\n    var sgn : array<f32, 3>;\\r\\n    \\r\\n    var index1 : array<u32, 2>;\\r\\n    var index2 : array<u32, 2>;\\r\\n    var index3 : array<u32, 2>;\\r\\n\\r\\n    let dvv : vec3f = dv[z_index][x];\\r\\n    let dvdv : f32 = dot(dvv,dvv);\\r\\n    let d2vv : vec3f = d2v[z_index][x];\\r\\n    \\r\\n    index1[1] = 1;\\r\\n\\r\\n\\r\\n    switch x {\\r\\n        case 0: {\\r\\n            index1[0] = 10;     index1[1] = 0;\\r\\n            index2[0] = 2;      index2[1] = 8;      \\r\\n            index3[0] = 1;      index3[1] = 12;\\r\\n            sgn[0] = f32(-1);   sgn[1] = f32(1);   sgn[2] = f32(1);\\r\\n\\r\\n        }\\r\\n        case 1: {\\r\\n            index1[0] = 6;     index1[1] = 1;\\r\\n            index2[0] = 0;      index2[1] = 13;      \\r\\n            index3[0] = 2;      index3[1] = 5;\\r\\n            sgn[0] = f32(1);   sgn[1] = f32(-1);   sgn[2] = f32(1);\\r\\n\\r\\n        }\\r\\n        case 2: {\\r\\n            index1[0] = 5;     index1[1] = 2;\\r\\n            index2[0] = 1;      index2[1] = 6;      \\r\\n            index3[0] = 0;      index3[1] = 10;\\r\\n            sgn[0] = f32(1);   sgn[1] = f32(1);   sgn[2] = f32(-1);\\r\\n\\r\\n        }\\r\\n        default {\\r\\n            sgn[0] = f32(0);   sgn[1] = f32(0);   sgn[2] = f32(0);\\r\\n        }\\r\\n    }\\r\\n    \\r\\n\\r\\n    let d2ptol1423_diag : f32 = (\\r\\n        sgn[0]*(nv[z_index][index1[0]]/nv[z_index][index1[1]])*(dot(vv[z_index][index1[1]],d2vv) + dvdv - pow(dot(vv[z_index][index1[1]],dvv), f32(2))/(pow(nv[z_index][index1[1]], f32(2))))\\r\\n        + sgn[1]*(nv[z_index][index2[0]]/nv[z_index][index2[1]])*(dot(vv[z_index][index2[1]],d2vv) + dvdv - pow(dot(vv[z_index][index2[1]],dvv), f32(2))/(pow(nv[z_index][index2[1]], f32(2))))\\r\\n        + sgn[2]*(nv[z_index][index3[0]]/nv[z_index][index3[1]])*(dot(vv[z_index][index3[1]],d2vv) + dvdv - pow(dot(vv[z_index][index3[1]],dvv), f32(2))/(pow(nv[z_index][index3[1]], f32(2))))\\r\\n    );\\r\\n\\r\\n    switch x {\\r\\n        case 1: {\\r\\n            index1[0] = 3;     index1[1] = 13;\\r\\n            index2[0] = 2;      index2[1] = 9;      \\r\\n            index3[0] = 15;      index3[1] = 1;\\r\\n            sgn[0] = f32(-1);   sgn[1] = f32(1);   sgn[2] = f32(1);\\r\\n\\r\\n        }\\r\\n        case 2: {\\r\\n            index1[0] = 1;     index1[1] = 14;\\r\\n            index2[0] = 3;      index2[1] = 10;      \\r\\n            index3[0] = 11;      index3[1] = 2;\\r\\n            sgn[0] = f32(1);   sgn[1] = f32(-1);   sgn[2] = f32(1);\\r\\n\\r\\n        }\\r\\n        case 3: {\\r\\n            index1[0] = 2;     index1[1] = 11;\\r\\n            index2[0] = 1;      index2[1] = 15;      \\r\\n            index3[0] = 10;      index3[1] = 3;\\r\\n            sgn[0] = f32(1);   sgn[1] = f32(1);   sgn[2] = f32(-1);\\r\\n\\r\\n        }\\r\\n        default {\\r\\n            sgn[0] = f32(0);   sgn[1] = f32(0);   sgn[2] = f32(0);\\r\\n        }\\r\\n    }\\r\\n    \\r\\n\\r\\n    let d2ptol1453_diag : f32 = (\\r\\n        sgn[0]*(nv[z_index][index1[0]]/nv[z_index][index1[1]])*(dot(vv[z_index][index1[1]],d2vv) + dvdv - pow(dot(vv[z_index][index1[1]],dvv), f32(2))/(pow(nv[z_index][index1[1]], f32(2))))\\r\\n        + sgn[1]*(nv[z_index][index2[0]]/nv[z_index][index2[1]])*(dot(vv[z_index][index2[1]],d2vv) + dvdv - pow(dot(vv[z_index][index2[1]],dvv), f32(2))/(pow(nv[z_index][index2[1]], f32(2))))\\r\\n        + sgn[2]*(nv[z_index][index3[0]]/nv[z_index][index3[1]])*(dot(vv[z_index][index3[1]],d2vv) + dvdv - pow(dot(vv[z_index][index3[1]],dvv), f32(2))/(pow(nv[z_index][index3[1]], f32(2))))\\r\\n    );\\r\\n\\r\\n    hess[z_index][x + 4*x] = d2ptol1423_diag + d2ptol1453_diag;\\r\\n\\r\\n    \\r\\n    var xindex : u32 = 1;\\r\\n    var yindex : u32 = 1;\\r\\n\\r\\n\\r\\n\\r\\n    switch x {\\r\\n        case 1: {\\r\\n            // block index 1\\r\\n            index1[0] = 2;    index1[1] = 5;\\r\\n            index2[0] = 10;    index2[1] = 0;    \\r\\n            index3[0] = 1;    index3[1] = 6;  \\r\\n            xindex = 1;\\r\\n            yindex = 0;\\r\\n            sgn[0] = f32(-1);   sgn[1] = f32(1);   sgn[2] = f32(-1);        \\r\\n\\r\\n        }\\r\\n        case 2: {\\r\\n            // block index 2\\r\\n            index1[0] = 1;    index1[1] = 6;\\r\\n            index2[0] = 10;    index2[1] = 0;    \\r\\n            index3[0] = 2;    index3[1] = 5;    \\r\\n            xindex = 2;\\r\\n            yindex = 0;\\r\\n            sgn[0] = f32(-1);   sgn[1] = f32(-1);   sgn[2] = f32(-1);        \\r\\n\\r\\n        }\\r\\n        case 3: {\\r\\n            // block index 6\\r\\n            index1[0] = 0;    index1[1] = 10;\\r\\n            index2[0] = 6;    index2[1] = 1;    \\r\\n            index3[0] = 2;    index3[1] = 5;    \\r\\n            xindex = 2;\\r\\n            yindex = 1;\\r\\n            sgn[0] = f32(1);   sgn[1] = f32(1);   sgn[2] = f32(1);        \\r\\n\\r\\n        }\\r\\n        default {\\r\\n            sgn[0] = f32(0);   sgn[1] = f32(0);   sgn[2] = f32(0);\\r\\n        }\\r\\n    }\\r\\n    \\r\\n\\r\\n    let d2ptol1423_non_diag : f32 = (\\r\\n        sgn[0]*(nv[z_index][index1[0]]/nv[z_index][index1[1]])*(dot(dv[z_index][xindex],dv[z_index][yindex]) - dot(vv[z_index][index1[1]],dv[z_index][xindex])*dot(vv[z_index][index1[1]],dv[z_index][yindex])/(nv[z_index][index1[1]]*nv[z_index][index1[1]]))\\r\\n        + sgn[1]/(nv[z_index][index2[0]]*nv[z_index][index2[1]])*dot(vv[z_index][index2[0]],dv[z_index][xindex])*dot(vv[z_index][index2[1]],dv[z_index][yindex])\\r\\n        + sgn[2]/(nv[z_index][index3[0]]*nv[z_index][index3[1]])*dot(vv[z_index][index3[0]],dv[z_index][xindex])*dot(vv[z_index][index3[1]],dv[z_index][yindex])\\r\\n    );\\r\\n\\r\\n\\r\\n\\r\\n    switch x {\\r\\n        case 3: {\\r\\n            // block index 6\\r\\n            index1[0] = 3;    index1[1] = 10;\\r\\n            index2[0] = 2;    index2[1] = 11;    \\r\\n            index3[0] = 15;    index3[1] = 1;   \\r\\n            xindex = 2;\\r\\n            yindex = 1; \\r\\n            sgn[0] = f32(1);   sgn[1] = f32(-1);   sgn[2] = f32(-1);        \\r\\n\\r\\n        }\\r\\n        case 2: {\\r\\n            // block index 7\\r\\n            index1[0] = 2;    index1[1] = 11;\\r\\n            index2[0] = 3;    index2[1] = 10;    \\r\\n            index3[0] = 15;    index3[1] = 1;    \\r\\n            xindex = 3;\\r\\n            yindex = 1;\\r\\n            sgn[0] = f32(-1);   sgn[1] = f32(1);   sgn[2] = f32(1);        \\r\\n\\r\\n        }\\r\\n        case 1: {\\r\\n            // block index 11\\r\\n            index1[0] = 1;    index1[1] = 15;\\r\\n            index2[0] = 3;    index2[1] = 10;    \\r\\n            index3[0] = 11;    index3[1] = 2;   \\r\\n            xindex = 3;\\r\\n            yindex = 2; \\r\\n            sgn[0] = f32(-1);   sgn[1] = f32(-1);   sgn[2] = f32(1);        \\r\\n\\r\\n        }\\r\\n        default {\\r\\n            sgn[0] = f32(0);   sgn[1] = f32(0);   sgn[2] = f32(0);\\r\\n        }\\r\\n    }\\r\\n    \\r\\n\\r\\n    let d2ptol1453_non_diag : f32 = (\\r\\n        sgn[0]*(nv[z_index][index1[0]]/nv[z_index][index1[1]])*(dot(dv[z_index][xindex],dv[z_index][yindex]) - dot(vv[z_index][index1[1]],dv[z_index][xindex])*dot(vv[z_index][index1[1]],dv[z_index][yindex])/(nv[z_index][index1[1]]*nv[z_index][index1[1]]))\\r\\n        + sgn[1]/(nv[z_index][index2[0]]*nv[z_index][index2[1]])*dot(vv[z_index][index2[0]],dv[z_index][xindex])*dot(vv[z_index][index2[1]],dv[z_index][yindex])\\r\\n        + sgn[2]/(nv[z_index][index3[0]]*nv[z_index][index3[1]])*dot(vv[z_index][index3[0]],dv[z_index][xindex])*dot(vv[z_index][index3[1]],dv[z_index][yindex])\\r\\n    );\\r\\n\\r\\n\\r\\n    switch x {\\r\\n        case 3: {\\r\\n            hess[z_index][6] = d2ptol1423_non_diag + d2ptol1453_non_diag;\\r\\n            hess[z_index][9] = hess[z_index][6];\\r\\n        }\\r\\n        case 2: {\\r\\n            hess[z_index][2] = d2ptol1423_non_diag;\\r\\n            hess[z_index][7] = d2ptol1453_non_diag;\\r\\n            hess[z_index][8] = hess[z_index][2];\\r\\n            hess[z_index][13] = hess[z_index][7];\\r\\n\\r\\n        }\\r\\n        case 1: {\\r\\n            hess[z_index][1] = d2ptol1423_non_diag;\\r\\n            hess[z_index][11] = d2ptol1453_non_diag;\\r\\n            hess[z_index][4] = hess[z_index][1];\\r\\n            hess[z_index][14] = hess[z_index][11];\\r\\n\\r\\n        }\\r\\n        default {\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n@compute @workgroup_size(4,16)\\r\\nfn main(\\r\\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\\r\\n    @builtin(local_invocation_id) local_invocation_id : vec3<u32>,\\r\\n    @builtin(global_invocation_id) global_invocation_id : vec3<u32>,\\r\\n    @builtin(local_invocation_index) local_invocation_index: u32,\\r\\n    @builtin(num_workgroups) num_workgroups: vec3<u32>\\r\\n) {\\r\\n\\r\\n    \\r\\n\\r\\n    let workgroup_index = (\\r\\n        workgroup_id.x +\\r\\n        workgroup_id.y * num_workgroups.x +\\r\\n        workgroup_id.z * num_workgroups.x * num_workgroups.y\\r\\n    );\\r\\n    \\r\\n    let newton_index = (\\r\\n        workgroup_index * 16 +\\r\\n        local_invocation_id.y\\r\\n    );\\r\\n    \\r\\n\\r\\n\\r\\n    let global_invocation_index = (\\r\\n        workgroup_index * 64 +\\r\\n        local_invocation_index\\r\\n    );\\r\\n\\r\\n\\r\\n    let tlist_index = (\\r\\n        newton_index*5\\r\\n    );\\r\\n\\r\\n\\r\\n\\r\\n        // Avoid accessing the buffer out of bounds\\r\\n    if (tlist_index >= BUFFER_SIZE) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    var grad_length: f32;\\r\\n\\r\\n    var i : u32;\\r\\n    var grad_dot_diff: f32;\\r\\n    var func: f32;\\r\\n    var min_backtrack : u32;\\r\\n\\r\\n    var x_n : array<f32, 5>;\\r\\n\\r\\n    let c : f32 = 0.0001;\\r\\n    const rho : f32 = 0.65;\\r\\n\\tvar alpha : f32 = pow(rho, f32(4*local_invocation_id.x));\\r\\n\\t\\r\\n\\r\\n    t_i[local_invocation_id.y][0] = tlist[tlist_index];\\r\\n    t_i[local_invocation_id.y][1] = tlist[tlist_index + 1];\\r\\n    t_i[local_invocation_id.y][2] = tlist[tlist_index + 2];\\r\\n    t_i[local_invocation_id.y][3] = tlist[tlist_index + 3];\\r\\n    t_i[local_invocation_id.y][4] = tlist[tlist_index + 4];\\r\\n\\r\\n\\r\\n    var iter : i32;\\r\\n\\r\\n    output[tlist_index] = 1.0;\\r\\n\\r\\n\\r\\n    for(iter = 0; iter< MAX_ITER; iter++){\\r\\n\\r\\n        set_variables(local_invocation_id.x, local_invocation_id.y);\\r\\n\\r\\n        if(abort[local_invocation_id.y] == true){\\r\\n            return;\\r\\n        }\\r\\n\\r\\n\\r\\n\\r\\n        grad_compute(local_invocation_id.x, local_invocation_id.y);\\r\\n        hess_compute(local_invocation_id.x, local_invocation_id.y);\\r\\n\\r\\n        \\r\\n        grad_length = sqrt(\\r\\n            pow(grad[local_invocation_id.y][0], 2.0) \\r\\n            + pow(grad[local_invocation_id.y][1], 2.0)\\r\\n            + pow(grad[local_invocation_id.y][2], 2.0)\\r\\n            + pow(grad[local_invocation_id.y][3], 2.0)\\r\\n        );\\r\\n\\r\\n\\r\\n        if((grad_length < grad_stop_double) || (ptol[local_invocation_id.y] <= ptol_stop_double)){\\r\\n            if(ptol[local_invocation_id.y] > ptol_stop_double){\\r\\n                return;\\r\\n            }\\r\\n\\r\\n\\r\\n            if(check_order(t_i[local_invocation_id.y])){\\r\\n\\r\\n                if(check_pentagon(t_i[local_invocation_id.y])){\\r\\n\\r\\n                    if(local_invocation_id.x == 0){\\r\\n                        output[tlist_index] = t_i[local_invocation_id.y][0];\\r\\n                        output[tlist_index + 1] = t_i[local_invocation_id.y][1];\\r\\n                        output[tlist_index + 2] = t_i[local_invocation_id.y][2];\\r\\n                        output[tlist_index + 3] = t_i[local_invocation_id.y][3];\\r\\n                        output[tlist_index + 4] = t_i[local_invocation_id.y][4];\\r\\n                    }\\r\\n                }\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            var tmp : f32 = t_i[local_invocation_id.y][1];\\r\\n\\r\\n            t_i[local_invocation_id.y][1] = t_i[local_invocation_id.y][4];\\r\\n            t_i[local_invocation_id.y][4] = tmp;\\r\\n            tmp = t_i[local_invocation_id.y][2];\\r\\n            t_i[local_invocation_id.y][2] = t_i[local_invocation_id.y][3];\\r\\n            t_i[local_invocation_id.y][3] = tmp;\\r\\n\\r\\n            if(check_order(t_i[local_invocation_id.y])){\\r\\n\\r\\n                if(check_pentagon(t_i[local_invocation_id.y])){\\r\\n\\r\\n                    if(local_invocation_id.x == 0){\\r\\n                        output[tlist_index] = t_i[local_invocation_id.y][0];\\r\\n                        output[tlist_index + 1] = t_i[local_invocation_id.y][1];\\r\\n                        output[tlist_index + 2] = t_i[local_invocation_id.y][2];\\r\\n                        output[tlist_index + 3] = t_i[local_invocation_id.y][3];\\r\\n                        output[tlist_index + 4] = t_i[local_invocation_id.y][4];\\r\\n                    }\\r\\n            \\r\\n                }\\r\\n            }\\r\\n\\r\\n            return;\\r\\n\\r\\n        }\\r\\n\\r\\n\\r\\n\\r\\n        modified_Cholesky(local_invocation_id.y);\\r\\n\\r\\n\\r\\n        grad_dot_diff = (\\r\\n            grad[local_invocation_id.y][0] * diff[local_invocation_id.y][0]\\r\\n            + grad[local_invocation_id.y][1] * diff[local_invocation_id.y][1]\\r\\n            + grad[local_invocation_id.y][2] * diff[local_invocation_id.y][2]\\r\\n            + grad[local_invocation_id.y][3] * diff[local_invocation_id.y][3]\\r\\n        );\\r\\n\\r\\n\\r\\n        for (i = 0; i < 4; i++)\\r\\n        {\\r\\n\\r\\n            x_n[0] = t_i[local_invocation_id.y][0];\\r\\n            x_n[1] = t_i[local_invocation_id.y][1] - alpha*diff[local_invocation_id.y][0];\\r\\n            x_n[2] = t_i[local_invocation_id.y][2] - alpha*diff[local_invocation_id.y][1];\\r\\n            x_n[3] = t_i[local_invocation_id.y][3] - alpha*diff[local_invocation_id.y][2];\\r\\n            x_n[4] = t_i[local_invocation_id.y][4] - alpha*diff[local_invocation_id.y][3];\\r\\n\\r\\n            func = (\\r\\n                length(knotc(x_n[0]) - knotc(x_n[3])) * length(knotc(x_n[1]) - knotc(x_n[2]))\\r\\n                + length(knotc(x_n[1]) - knotc(x_n[3])) * length(knotc(x_n[0]) - knotc(x_n[2]))\\r\\n                - length(knotc(x_n[0]) - knotc(x_n[1])) * length(knotc(x_n[2]) - knotc(x_n[3]))\\r\\n                \\r\\n                + length(knotc(x_n[0]) - knotc(x_n[3])) * length(knotc(x_n[2]) - knotc(x_n[4]))\\r\\n                + length(knotc(x_n[0]) - knotc(x_n[2])) * length(knotc(x_n[3]) - knotc(x_n[4]))\\r\\n                - length(knotc(x_n[0]) - knotc(x_n[4])) * length(knotc(x_n[2]) - knotc(x_n[3]))\\r\\n            );\\r\\n\\r\\n            if(func <= (ptol[local_invocation_id.y] - c*alpha*grad_dot_diff)){\\r\\n                backtrack[local_invocation_id.y][4*local_invocation_id.x + i] = 4*local_invocation_id.x + i;\\r\\n            } else {\\r\\n                backtrack[local_invocation_id.y][4*local_invocation_id.x + i] = 15;\\r\\n            }\\r\\n\\r\\n            alpha = alpha * rho;\\r\\n\\r\\n        }\\r\\n\\r\\n\\r\\n\\r\\n        min_backtrack = 15;\\r\\n\\r\\n        if(local_invocation_id.x == 0){\\r\\n\\r\\n            for (i = 0; i < 16; i++)\\r\\n            {\\r\\n                if(backtrack[local_invocation_id.y][i] < min_backtrack){\\r\\n                    min_backtrack = backtrack[local_invocation_id.y][i];\\r\\n                }\\r\\n            }\\r\\n\\r\\n            alpha = pow(rho, f32(min_backtrack));\\r\\n\\r\\n            t_i[local_invocation_id.y][1] = t_i[local_invocation_id.y][1] - alpha*diff[local_invocation_id.y][0];\\r\\n            t_i[local_invocation_id.y][2] = t_i[local_invocation_id.y][2] - alpha*diff[local_invocation_id.y][1];\\r\\n            t_i[local_invocation_id.y][3] = t_i[local_invocation_id.y][3] - alpha*diff[local_invocation_id.y][2];\\r\\n            t_i[local_invocation_id.y][4] = t_i[local_invocation_id.y][4] - alpha*diff[local_invocation_id.y][3];\\r\\n        }\\r\\n        \\r\\n\\r\\n        t_i[local_invocation_id.y][local_invocation_id.x + 1] = fract(t_i[local_invocation_id.y][local_invocation_id.x + 1]);\\r\\n\\r\\n        proxim(local_invocation_id.x, local_invocation_id.y, error_field);\\r\\n\\r\\n        if(abort[local_invocation_id.y] == true){\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        iter ++;\\r\\n\\r\\n    }\\r\\n\\r\\n\\r\\n}\\r\\n\\r\\nfn check_order(t_i : array<f32, 5>) -> bool{\\r\\n    if(\\r\\n        (t_i[0] < t_i[1])\\r\\n        && (t_i[1] < t_i[2])\\r\\n        && (t_i[2] < t_i[3])\\r\\n        && (t_i[3] < t_i[4])\\r\\n    ){\\r\\n        return true;\\r\\n    }else if(\\r\\n        (t_i[4] < t_i[0])\\r\\n        && (t_i[0] < t_i[1])\\r\\n        && (t_i[1] < t_i[2])\\r\\n        && (t_i[2] < t_i[3])\\r\\n    ){\\r\\n        return true;\\r\\n    }else if(\\r\\n        (t_i[3] < t_i[4])\\r\\n        && (t_i[4] < t_i[0])\\r\\n        && (t_i[0] < t_i[1])\\r\\n        && (t_i[1] < t_i[2])\\r\\n    ){\\r\\n        return true;\\r\\n    }else if(\\r\\n        (t_i[2] < t_i[3])\\r\\n        && (t_i[3] < t_i[4])\\r\\n        && (t_i[4] < t_i[0])\\r\\n        && (t_i[0] < t_i[1])\\r\\n    ){\\r\\n        return true;\\r\\n    }else if(\\r\\n        (t_i[1] < t_i[2])\\r\\n        && (t_i[2] < t_i[3])\\r\\n        && (t_i[3] < t_i[4])\\r\\n        && (t_i[4] < t_i[0])\\r\\n    ){\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    return false;\\r\\n}\\r\\n\\r\\nfn proxim(x : u32, y : u32, proxim_float : f32){\\r\\n    for(var i = i32(x) + 1; i < 5; i++){\\r\\n        let t_diff = t_i[y][i] - t_i[y][x];\\r\\n\\r\\n        if((abs(t_diff) < proxim_float)\\r\\n            || (abs(t_diff + 1.0) < proxim_float)\\r\\n            || (abs(1.0 - t_diff) < proxim_float))\\r\\n        {\\r\\n            abort[y] = true;\\r\\n            return;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nfn modified_Cholesky(z: u32) {\\r\\n\\r\\n    var max_diag : f32 = 0.0;\\r\\n    var max_nondiag : f32 = 0.0;\\r\\n\\r\\n\\r\\n    for (var i = 0; i < 4; i++)\\r\\n    {\\r\\n        if(abs(hess[z][i*4+i]) > max_diag){\\r\\n            max_diag = abs(hess[z][i*4+i]);\\r\\n        }\\r\\n        for(var j =i+1; j < 4; j++){\\r\\n            if(abs(hess[z][i*4+j]) > max_nondiag){\\r\\n                max_nondiag = abs(hess[z][i*4+j]);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    var beta2 : f32 = max(max(max_diag, max_nondiag/(sqrt(f32(15)))), 0.0001);\\r\\n\\r\\n    var temp : array<f32, 16>;\\r\\n    var D : array<f32, 4>;\\r\\n    var L : array<f32, 16>;\\r\\n\\r\\n    var theta : array<f32, 4>;\\r\\n\\r\\n    for(var j =0; j<4; j++){\\r\\n        temp[j*4 + j] = hess[z][j*4 + j];\\r\\n        for(var s = 0; s< j; s++){\\r\\n            temp[j*4 + j] -= D[s]*L[j*4 + s]*L[j*4 + s];\\r\\n        }\\r\\n        \\r\\n        for(var i=j+1; i<4; i++){\\r\\n            temp[i*4 + j] = hess[z][i*4 + j];\\r\\n            for(var s = 0; s< j; s++){\\r\\n                temp[i*4 + j] -= D[s]*L[i*4 + s]*L[j*4 + s];\\r\\n            }\\r\\n\\r\\n            if(theta[j]< abs(temp[i*4 + j])){\\r\\n                theta[j]= abs(temp[i*4 + j]);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        D[j] = max(max(abs(temp[j*4 + j]), theta[j]*theta[j]/beta2), 0.001);\\r\\n        \\r\\n        for(var i=j+1; i<4; i++){\\r\\n            L[i*4 + j] = temp[i*4 + j]/D[j];\\r\\n        }\\r\\n        L[j*4 + j] = 1.0;\\r\\n    }\\r\\n\\r\\n    // forward substitution.\\r\\n    var y : array<f32, 4>;\\r\\n    var sum : f32;\\r\\n\\r\\n    for (var i = 0; i < 4; i++)\\r\\n    {\\r\\n        sum = grad[z][i];\\r\\n        for (var j = 0; j < i; j++){\\r\\n            sum -= L[i*4+j] * y[j];\\r\\n        }\\r\\n        y[i] = sum / L[i*4 +i];\\r\\n    }\\r\\n\\r\\n\\r\\n    // back substitution.\\r\\n    // var retval = new Array(4);\\r\\n\\r\\n    for (var k = 3; k >= 0; k--)\\r\\n    {\\r\\n        sum = y[k];\\r\\n        for (var j = k + 1; j < 4; j++){\\r\\n            sum -= L[j*4+k] * diff[z][j] * D[k];\\r\\n        }\\r\\n        diff[z][k] = sum/(D[k]);\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\nfn check_pentagon(t_i : array<f32, 5>) -> bool {\\r\\n\\r\\n    let v1 = knotc(t_i[0]);\\r\\n    let v2 = knotc(t_i[3]);\\r\\n    let v3 = knotc(t_i[1]);\\r\\n    let v4 = knotc(t_i[4]);\\r\\n    let v5 = knotc(t_i[2]);\\r\\n\\r\\n    let v12 = (v2-v1);\\r\\n    let v23 = (v3-v2);\\r\\n    let v34 = (v4-v3);\\r\\n    let v45 = (v5-v4);\\r\\n    let v51 = (v1-v5);\\r\\n\\r\\n    var sum_angle : f32 = 0.0;\\r\\n\\r\\n    sum_angle += acos(-1*dot(v12,v23)/(length(v12)*length(v23)));\\r\\n    sum_angle += acos(-1*dot(v23,v34)/(length(v23)*length(v34)));\\r\\n    sum_angle += acos(-1*dot(v34,v45)/(length(v34)*length(v45)));\\r\\n    sum_angle += acos(-1*dot(v45,v51)/(length(v45)*length(v51)));\\r\\n    sum_angle += acos(-1*dot(v51,v12)/(length(v51)*length(v12)));\\r\\n\\r\\n    if(abs(sum_angle - 3*PI) < 0.02){\\r\\n        return true;\\r\\n    }\\r\\n    return false;\\r\\n\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\nfn knotc(param : f32) -> vec3f {\\r\\n    let t : f32 = 2 * PI * param;\\r\\n    let ret : vec3f = (\\r\\n        knot_info.cos[0] * cos(t) + knot_info.cos[1] * cos(2*t) + knot_info.cos[2] * cos(3*t) + knot_info.cos[3] * cos(4*t) + knot_info.cos[4] * cos(5*t) + knot_info.cos[5] * cos(6*t)\\r\\n        + knot_info.sin[0] * sin(t) + knot_info.sin[1] * sin(2*t) + knot_info.sin[2] * sin(3*t) + knot_info.sin[3] * sin(4*t) + knot_info.sin[4] * sin(5*t)+ knot_info.sin[5] * sin(6*t)\\r\\n    );\\r\\n\\treturn ret;\\r\\n}\\r\\nfn knotd(param : f32) -> vec3f {\\r\\n    let t : f32 = 2 * PI * param;\\r\\n    let ret : vec3f = (\\r\\n        knot_info.sin[0] * cos(t) + knot_info.sin[1] *2* cos(2*t) + knot_info.sin[2] *3* cos(3*t) + knot_info.sin[3] *4* cos(4*t) + knot_info.sin[4] *5* cos(5*t)+ knot_info.sin[5] *6* cos(6*t)\\r\\n        - knot_info.cos[0] * sin(t) - knot_info.cos[1] *2* sin(2*t) - knot_info.cos[2] *3* sin(3*t) - knot_info.cos[3] *4* sin(4*t) - knot_info.cos[4] *5* sin(5*t)- knot_info.cos[5] *6* sin(6*t)\\r\\n    );\\r\\n\\treturn 2*PI*ret;\\r\\n}\\r\\nfn knotd2(param : f32) -> vec3f {\\r\\n    let t : f32 = 2 * PI * param;\\r\\n    let ret : vec3f = (\\r\\n        knot_info.cos[0] * cos(t) + knot_info.cos[1] *4* cos(2*t) + knot_info.cos[2] *9* cos(3*t) + knot_info.cos[3] *16* cos(4*t) + knot_info.cos[4] *25* cos(5*t)+ knot_info.cos[5] *36* cos(6*t)\\r\\n        + knot_info.sin[0] * sin(t) + knot_info.sin[1] *4* sin(2*t) + knot_info.sin[2] *9* sin(3*t) + knot_info.sin[3] *16* sin(4*t) + knot_info.sin[4] *25* sin(5*t)+ knot_info.sin[5] *36* sin(6*t)\\r\\n    );\\r\\n\\treturn -4*PI*PI*ret;\\r\\n}\\r\\n\\r\\n\"","import { vec2, vec3 } from \"gl-matrix\";\r\n\r\n\r\nimport { LinkedKnot } from \"../math/LinkedKnot\"\r\nimport { FourierKnot } from \"../math/FourierKnot\"\r\nimport { Quintuples } from \"../math/Quintuples\"\r\n\r\nimport { Loader, DropDown } from \"../controls/Overlay\"\r\n\r\ntype SceneType = \"Linked Knot\" | \"Fourier Knot\" | \"Quintuples\";\r\n\r\nexport class Scene{\r\n\r\n    private _linkedKnot : LinkedKnot;\r\n    private _fourierKnot : FourierKnot;\r\n    private _quintpules : Quintuples;\r\n\r\n    private _freeze : boolean;\r\n\r\n    private _knotMenu : KnotMenu;\r\n    private _loader : Loader;\r\n\r\n\r\n\r\n\r\n    constructor(){\r\n\r\n        this._loader = new Loader();\r\n        this._loader.initCallback();\r\n\r\n        this._linkedKnot = new LinkedKnot();\r\n        this._fourierKnot = new FourierKnot();\r\n        this._quintpules = new Quintuples();\r\n        this._quintpules.Initialize();\r\n\r\n        this._freeze = false;\r\n\r\n        this._knotMenu = new KnotMenu(this);\r\n        this._knotMenu.initCallback();\r\n\r\n\r\n\r\n    }\r\n\r\n    get sceneType(){\r\n        return this._knotMenu.sceneType;\r\n    }\r\n\r\n    public async advanceScene(str : SceneType){\r\n\r\n        this._freeze = true;\r\n        this.linkedKnot.selected = null;\r\n        this.linkedKnot.drawingTool.Disable(true);\r\n\r\n        if(str === \"Quintuples\"){\r\n\r\n            if(!this.fourierKnot.calculated || this.fourierKnot.intersecting){\r\n                alert(\"Tried to find circles on incomplete knot\");\r\n                this._knotMenu.sceneType = \"Fourier Knot\";\r\n            }\r\n\r\n            this._loader.load(true);\r\n\r\n            const KIArr = this.fourierKnot.exportKIArr();\r\n            this.quintuples.initKnot(KIArr);\r\n\r\n            const KI = this.fourierKnot.exportKI();\r\n            await this.quintuples.findCircles(KI, this._knotMenu.doubleCheck, this._knotMenu.maxCircles, this._knotMenu.knotDivision, this._loader);\r\n\r\n            this._loader.load(false);\r\n            this._knotMenu.resetCircleOption();\r\n            this.quintuples.player.reset();\r\n\r\n            if(!this._quintpules.calculated){\r\n                this._quintpules.deleteData();\r\n                this._knotMenu.sceneType = \"Fourier Knot\";\r\n                this._freeze = false;\r\n                return;\r\n            }\r\n            this._knotMenu.sceneType = \"Quintuples\";\r\n            \r\n        }else if(str === \"Fourier Knot\"){\r\n\r\n            if(!this.linkedKnot.isKnot){\r\n                alert(\"Tried to smoothen incomplete knot\")\r\n                this._knotMenu.sceneType = \"Linked Knot\";\r\n            }\r\n\r\n            var nodeArr : vec3[] = <vec3[]>this.linkedKnot.nodeArr;\r\n            this.fourierKnot.calcFourier(nodeArr);\r\n\r\n            this._knotMenu.sceneType = \"Fourier Knot\";\r\n        }\r\n        this._freeze = false;\r\n    }\r\n\r\n    public drawScene(gl : WebGLRenderingContext, program : WebGLProgram, render : boolean = true) {\r\n\r\n        if(this._freeze){\r\n            return;\r\n        }\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n        if(this.sceneType == \"Linked Knot\"){\r\n            this.linkedKnot.draw(gl, program);\r\n\r\n        }else if(this.sceneType == \"Fourier Knot\"){\r\n            if(!render){\r\n                return;\r\n            }\r\n            this._fourierKnot.draw(gl, program);\r\n        } else if(this.sceneType == \"Quintuples\"){\r\n            if(!render){\r\n                return;\r\n            }\r\n            this._fourierKnot.draw(gl, program);\r\n            this._quintpules.draw(gl, program);\r\n            \r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    get linkedKnot(){\r\n        return this._linkedKnot;\r\n    }\r\n\r\n    get fourierKnot(){\r\n        return this._fourierKnot;\r\n    }\r\n\r\n    get quintuples(){\r\n        return this._quintpules;\r\n    }\r\n\r\n    get transform_z(){\r\n        return this.linkedKnot.transform_z;\r\n    }\r\n\r\n    set transform_z(bool : boolean){\r\n        this.linkedKnot.transform_z = bool;\r\n    }\r\n\r\n\r\n    get selected(){\r\n        return this.linkedKnot.selected;\r\n    }\r\n\r\n    get InsertOrConnect(){\r\n        return this.linkedKnot.drawingTool.connectLast || this.linkedKnot.drawingTool.insert;\r\n    }\r\n\r\n    get EraseOrSubdiv(){\r\n        return this.linkedKnot.drawingTool.erase || this.linkedKnot.drawingTool.subdivide;\r\n    }\r\n\r\n    get selectedNode(){\r\n        return this.linkedKnot.selectedNode;\r\n    }\r\n\r\n    public btnManager(){\r\n        this._knotMenu.disableAdvance();\r\n        this._knotMenu.disableDelete();\r\n        \r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport class KnotMenu{\r\n    \r\n    private _advance : HTMLButtonElement;\r\n    private _delete : HTMLElement;\r\n\r\n    private _doubleCheck : {\r\n\r\n        overlay : HTMLElement;\r\n        confirm : HTMLElement;\r\n        cancel : HTMLElement;\r\n    };\r\n\r\n    private _slider :{\r\n        linkedKnot : HTMLInputElement;\r\n        fourierKnot : HTMLInputElement;\r\n        quintuples : HTMLInputElement;\r\n    }\r\n\r\n    private _circleOptions:{\r\n        overlay : HTMLElement;\r\n        doubleCheck : HTMLInputElement;\r\n        maxCircles : DropDown;\r\n        knotDivision : DropDown;\r\n        submit : HTMLElement;\r\n        cancel : HTMLElement;\r\n    }\r\n\r\n\r\n\r\n    private _scene : Scene;\r\n    private _sceneType : SceneType;\r\n    \r\n\r\n    constructor(scene : Scene){\r\n        this._scene = scene;\r\n        this._sceneType = \"Linked Knot\";\r\n\r\n        this._advance = <HTMLButtonElement>document.getElementById(\"advance scene\");\r\n        this._delete = <HTMLElement>document.getElementById(\"delete scene\");\r\n        this._doubleCheck = {\r\n            overlay : <HTMLElement>document.getElementById(\"delete-check\"),\r\n            confirm : <HTMLElement>document.getElementById(\"delete-confirm\"),\r\n            cancel : <HTMLElement>document.getElementById(\"delete-cancel\"),\r\n        };\r\n\r\n        this._slider = {\r\n            linkedKnot : <HTMLInputElement>document.getElementById(\"Linked Knot\"),\r\n            fourierKnot : <HTMLInputElement>document.getElementById(\"Fourier Knot\"),\r\n            quintuples : <HTMLInputElement>document.getElementById(\"Quintuples\"),\r\n        };\r\n\r\n        this._slider.fourierKnot.disabled = true;\r\n        this._slider.quintuples.disabled = true;\r\n\r\n\r\n        this._circleOptions = {\r\n            overlay : <HTMLElement>document.getElementById(\"circle options\"),\r\n            doubleCheck : <HTMLInputElement>document.getElementById(\"double check box\"),\r\n            maxCircles : new DropDown(\"circle max dropdown\", 10),\r\n            knotDivision : new DropDown(\"knotDivision\", 1600),\r\n            submit : <HTMLElement>document.getElementById(\"confirm calculate\"),\r\n            cancel: <HTMLElement>document.getElementById(\"cancel calculate\"),\r\n        }\r\n\r\n        this.cancelBtnResponse();\r\n        this.sceneSelect();\r\n\r\n    }\r\n\r\n\r\n    public initCallback(){\r\n        this._advance.addEventListener('click', () => {this.advanceBtnResponse();});\r\n        this._delete.addEventListener('click', ()=>{this.deleteBtnResponse();});\r\n\r\n        this._doubleCheck.confirm.addEventListener('click', () => {this.confirmBtnResponse();});\r\n        this._doubleCheck.cancel.addEventListener('click', () => {this.cancelBtnResponse();});\r\n\r\n        document.addEventListener('mousedown', (event) => {   \r\n            if ((this.sceneType === \"Linked Knot\") && !(this._doubleCheck.overlay.contains(event.target as Node)) && !(this._doubleCheck.overlay.classList.contains(\"hidden\"))){\r\n  \r\n                this._doubleCheck.overlay.classList.toggle(\"hidden\", true);\r\n            }\r\n        });\r\n\r\n        this._slider.linkedKnot.addEventListener('click', ()=>{this.sceneSelect();});\r\n        this._slider.fourierKnot.addEventListener('click', ()=>{this.sceneSelect();});\r\n        this._slider.quintuples.addEventListener('click', ()=>{this.sceneSelect();});\r\n\r\n\r\n        this._circleOptions.submit.addEventListener('click', () => {this._circleOptions.overlay.classList.toggle('hidden', true); this._scene.advanceScene(\"Quintuples\");});\r\n        this._circleOptions.cancel.addEventListener('click', () => {this.resetCircleOption();});\r\n\r\n    }\r\n\r\n    private advanceBtnResponse(){\r\n        if(this.sceneType === \"Linked Knot\"){\r\n            this._scene.advanceScene(\"Fourier Knot\");\r\n        }else if(this.sceneType === \"Fourier Knot\"){\r\n            this._circleOptions.overlay.classList.toggle('hidden', false);\r\n        }\r\n    }\r\n\r\n    public resetCircleOption(){\r\n        this._circleOptions.knotDivision.reset();\r\n        this._circleOptions.maxCircles.reset();\r\n        this._circleOptions.doubleCheck.checked = true;\r\n        this._circleOptions.overlay.classList.toggle('hidden', true);\r\n    }\r\n\r\n    get knotDivision(){\r\n        return this._circleOptions.knotDivision.value;\r\n    }\r\n\r\n    get maxCircles(){\r\n        return this._circleOptions.maxCircles.value;\r\n    }\r\n\r\n    get doubleCheck(){\r\n        return this._circleOptions.doubleCheck.checked;\r\n    }\r\n\r\n\r\n    private deleteBtnResponse(){\r\n        if(this.sceneType === \"Linked Knot\"){\r\n            this._doubleCheck.overlay.classList.toggle('hidden', false);\r\n        }\r\n    }\r\n\r\n    private confirmBtnResponse(){\r\n        if(this.sceneType === \"Linked Knot\"){\r\n            this._scene.linkedKnot.deleteData();\r\n            this._doubleCheck.overlay.classList.toggle(\"hidden\", true);\r\n            this.disableDelete();\r\n            this.disableAdvance();\r\n        }\r\n    }\r\n    \r\n    private cancelBtnResponse(){\r\n        this._doubleCheck.overlay.classList.toggle('hidden', true);\r\n    }\r\n\r\n    public disableDelete(){\r\n        if((this.sceneType == \"Linked Knot\") && !this._scene.linkedKnot.isEmpty){\r\n            this._delete.classList.toggle('hidden', false);\r\n        }else{\r\n            this._delete.classList.toggle('hidden', true);\r\n        }\r\n    }\r\n\r\n    public disableAdvance(){\r\n        if(this.sceneType == \"Linked Knot\"){\r\n            this._advance.disabled = !this._scene.linkedKnot.isKnot;\r\n        }else if(this.sceneType == \"Fourier Knot\"){\r\n            this._advance.disabled = this._scene.fourierKnot.intersecting;\r\n        }\r\n    }\r\n\r\n    private sceneSelect(){\r\n        if(this._slider.linkedKnot.checked){\r\n            this.sceneType = \"Linked Knot\";\r\n        }else if(this._slider.fourierKnot.checked){\r\n            this.sceneType = \"Fourier Knot\";\r\n        }else if(this._slider.quintuples.checked){\r\n            this.sceneType = \"Quintuples\";\r\n        }\r\n    }\r\n\r\n    \r\n    get sceneType(){\r\n        return this._sceneType;\r\n    }\r\n\r\n    set sceneType(scenetype : SceneType){\r\n        this._sceneType = scenetype;\r\n        if(this.sceneType == \"Linked Knot\"){\r\n            this._slider.linkedKnot.checked = true;\r\n            this._scene.linkedKnot.drawingTool.Disable(false);\r\n            this._scene.quintuples.player.Disable(true);\r\n            this._advance.textContent = \"Smoothen Knot\"\r\n        }else if(this.sceneType == \"Fourier Knot\"){\r\n            this._slider.fourierKnot.disabled = false;\r\n            this._slider.fourierKnot.checked = true;\r\n            this._scene.linkedKnot.selected = null;\r\n            this._scene.linkedKnot.drawingTool.Disable(true);\r\n            this._scene.quintuples.player.Disable(true);\r\n            this._advance.textContent = \"Find Circles\"\r\n        }else if(this.sceneType == \"Quintuples\"){\r\n            this._slider.quintuples.disabled = false;\r\n            this._slider.quintuples.checked = true;\r\n            this._scene.linkedKnot.selected = null;\r\n            this._scene.linkedKnot.drawingTool.Disable(true);\r\n            this._scene.quintuples.player.Disable(false);\r\n        }\r\n        this._advance.setAttribute('sceneType', this._sceneType);\r\n        this.disableAdvance();\r\n        this.disableDelete();\r\n        this.resetCircleOption();\r\n        this._circleOptions.overlay.classList.toggle('hidden', true);\r\n    }\r\n\r\n\r\n    \r\n\r\n}\r\n","import MainVertexShader from \"../../shaders/MainVertex.glsl\"\r\nimport MainfragShader from \"../../shaders/MainFrag.glsl\"\r\nimport { glUtils } from \"../utils/glUtils\"\r\nimport { uiUtils } from \"../utils/uiUtils\"\r\nimport { vec3, vec4 } from \"gl-matrix\"\r\nimport { Camera } from \"../models/Camera\"\r\nimport { Light } from \"../models/Light\"\r\nimport { Scene } from \"./Scene\"\r\n\r\nconst clickDist = 25;\r\n\r\n\r\nexport class App {\r\n\r\n    private canvas : HTMLCanvasElement;\r\n    private boundingClientRect : DOMRect;\r\n    private gl : WebGLRenderingContext;\r\n    private programs : {\r\n        render : WebGLProgram;\r\n    };\r\n\r\n    private camera : Camera;\r\n\r\n    private scene : Scene;\r\n\r\n    private ui : {\r\n        left_down: boolean;\r\n        wheel_down: boolean;\r\n        mouse: {\r\n            lastX: number;\r\n            lastY: number;\r\n        };\r\n        doubleClick: {\r\n            click : boolean;\r\n            sameObj : boolean;\r\n            lastX: number;\r\n            lastY: number;\r\n        };\r\n        shift: boolean;\r\n    };\r\n\r\n\r\n    private _fps : {\r\n        fpsLimit : number;\r\n        prev: number;\r\n    }\r\n\r\n    private _infoPage : {\r\n        hidden : boolean;\r\n        overlay : HTMLElement;\r\n        btn : HTMLElement;\r\n        exit : HTMLElement;\r\n    }\r\n\r\n\r\n\r\n    constructor(canvas : HTMLCanvasElement){\r\n\r\n        this.canvas = canvas;\r\n        this.boundingClientRect = this.canvas.getBoundingClientRect();\r\n        this.gl = <WebGLRenderingContext>glUtils.checkWebGL(this.canvas);\r\n        this.programs = {\r\n            render : <WebGLProgram>glUtils.createProgram(this.gl, MainVertexShader, MainfragShader)\r\n        };\r\n\r\n        this.camera = new Camera();\r\n\r\n        this.scene = new Scene();\r\n\r\n\r\n\r\n        this.ui = {\r\n            left_down: false,\r\n            wheel_down: false,\r\n            mouse: {\r\n                lastX: 0,\r\n                lastY: 0,\r\n            },\r\n            doubleClick: {\r\n                click : false,\r\n                sameObj : false,\r\n                lastX: 0,\r\n                lastY: 0,\r\n            },\r\n            shift: false,\r\n        };\r\n\r\n        this._fps = {\r\n            fpsLimit : 30,\r\n            prev: 0,\r\n        }\r\n\r\n        this._infoPage = {\r\n            hidden : true,\r\n            overlay : <HTMLElement>document.getElementById(\"about overlay\"),\r\n            btn : <HTMLElement>document.getElementById(\"about button\"),\r\n            exit : <HTMLElement>document.getElementById(\"info-exit\"),\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    public run(){\r\n\r\n        this.initGL();\r\n        this.initCallbacks();\r\n\r\n\r\n        requestAnimationFrame(this.animate.bind(this));\r\n        \r\n    }\r\n\r\n     \r\n    private initGL() {\r\n        this.gl.clearColor(0.9855,0.9867,0.9812,1);\r\n        this.gl.enable(this.gl.DEPTH_TEST);\r\n        this.gl.useProgram(this.programs.render);\r\n        Light.setLight(this.gl, this.programs.render, [50, 50, 50]);\r\n        this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\r\n        this.gl.blendEquation(this.gl.FUNC_ADD);\r\n    }\r\n\r\n\r\n    private initCallbacks() {\r\n\r\n        window.addEventListener(\"beforeunload\", (event) => {\r\n            event.returnValue = true;\r\n        });\r\n\r\n\r\n        this._infoPage.btn.addEventListener('click', () => {this._infoPage.overlay.classList.toggle(\"hidden\", false); this._infoPage.hidden = false;})\r\n        this._infoPage.exit.addEventListener('click', () => {this._infoPage.overlay.classList.toggle(\"hidden\", true); this._infoPage.hidden = true;})\r\n\r\n        document.addEventListener('mousedown', (event) => \r\n        {   \r\n            if((event.target as HTMLElement).id == this.canvas.id){\r\n                this.mouseDown(event);\r\n            }else if (!(this._infoPage.overlay.querySelector(\"#info-content\")?.contains(event.target as Node)) && !this._infoPage.hidden){\r\n                this._infoPage.overlay.classList.toggle(\"hidden\", true);\r\n                this._infoPage.hidden = true;\r\n            }\r\n        });\r\n\r\n        document.addEventListener(\"mouseup\", (event : MouseEvent) => {this.mouseUp(event);});\r\n        document.addEventListener(\"click\", ()=>\r\n        {\r\n            if(this.ui.doubleClick.click){\r\n                if(this.scene.InsertOrConnect || this.scene.EraseOrSubdiv){\r\n                    this.scene.linkedKnot.btnManager();\r\n                }else if(this.ui.doubleClick.sameObj){\r\n                    this.scene.transform_z = !this.scene.transform_z;\r\n                }\r\n            }\r\n            this.scene.btnManager();\r\n            this.ui.doubleClick.sameObj = false;\r\n            this.configCamera();\r\n        \r\n        });\r\n\r\n        document.addEventListener(\"mousemove\", (event : MouseEvent) => {this.mouseMove(event);});\r\n\r\n        document.addEventListener(\"keydown\",  (event : KeyboardEvent) => {this.keyDown(event);});\r\n        document.addEventListener(\"keyup\",  (event : KeyboardEvent) => {this.keyUp(event);});\r\n\r\n        window.addEventListener(\"resize\",  () => {this.resizer();});\r\n        this.resizer();\r\n\r\n        this.canvas.addEventListener(\"wheel\", (event : WheelEvent) =>\r\n        {\r\n            this.zoom(event);\r\n            if(event.ctrlKey == true)\r\n            {\r\n                event.preventDefault(); \r\n            }\r\n        },\r\n        {passive : false});\r\n\r\n        document.getElementById(\"camera button\")?.addEventListener('click', () => {this.camera.reset = true;})\r\n    }\r\n        \r\n    private configCamera() {\r\n        this.camera.update(this.gl, this.programs.render, this.canvas.width, this.canvas.height);\r\n        this.camera.setRay();\r\n    }\r\n        \r\n        \r\n        \r\n    private animate(time : number) : void {\r\n        requestAnimationFrame(this.animate.bind(this));\r\n\r\n        if(this.camera.reset){\r\n            this.camera.resetCam(this.gl, this.programs.render, this.canvas.width, this.canvas.height);\r\n        }\r\n                    \r\n\r\n        const deltaTime = (time - this._fps.prev);         \r\n        if (deltaTime < ((1000 / this._fps.fpsLimit)-0.1)) {\r\n            return;\r\n        }\r\n\r\n        this.scene.drawScene(this.gl, this.programs.render, true);\r\n\r\n    }\r\n        \r\n    \r\n        \r\n    private keyDown(event : KeyboardEvent) {\r\n        this.ui.shift = event.shiftKey;   \r\n        if(event.key === \"Delete\"){\r\n            this.scene.linkedKnot.delete();\r\n        }else if(event.key === \"Backspace\"){\r\n            this.scene.linkedKnot.delete();\r\n        }\r\n\r\n        if((event.key == '=' && event.ctrlKey == true) || (event.key == '-' && event.ctrlKey == true))\r\n        {\r\n            event.preventDefault(); \r\n        }\r\n    }\r\n    private keyUp(event : KeyboardEvent){\r\n        this.ui.shift = event.shiftKey;\r\n    }\r\n        \r\n        \r\n    private mouseDown(event : MouseEvent) {\r\n        if(this.camera.reset){\r\n            this.camera.reset = false;\r\n            this.configCamera();\r\n        }\r\n        \r\n        this.ui.doubleClick.click = true;\r\n        this.ui.doubleClick.lastX = event.clientX;\r\n        this.ui.doubleClick.lastY = event.clientY;\r\n\r\n        if(event.button == 0){\r\n\r\n            this.ui.left_down = true;\r\n            const temp = this.scene.selected;\r\n            if((this.scene.sceneType == \"Linked Knot\") && !this.scene.InsertOrConnect){\r\n\r\n                const {relx,rely} = uiUtils.pixelInputToGLCoord(event, this.boundingClientRect);\r\n    \r\n                var from = vec4.transformMat4(vec4.create(), [relx, rely, -1, 1], this.camera.toWorld);\r\n                var to = vec4.transformMat4(vec4.create(), [relx, rely, 1, 1], this.camera.toWorld);\r\n                vec4.scale(from, from, 1/from[3]);\r\n                vec4.scale(to, to, 1/to[3]);\r\n                \r\n                const dirvec = vec3.subtract(vec3.create(), [to[0], to[1], to[2]], [from[0], from[1], from[2]]);\r\n        \r\n                this.scene.linkedKnot.pickObj(dirvec, this.camera.absPos);\r\n\r\n            }\r\n            if((temp === this.scene.selected) && (this.scene.selectedNode || this.ui.shift)){\r\n                this.ui.doubleClick.sameObj = true;\r\n            }\r\n\r\n        } \r\n\r\n        if(event.button == 1){\r\n            this.ui.wheel_down = true;\r\n        }\r\n        \r\n    }\r\n    \r\n    private mouseUp(event : MouseEvent) {\r\n        if(event.button == 0){\r\n            this.ui.left_down = false;\r\n        }\r\n\r\n        if(event.button == 1){\r\n            this.ui.wheel_down = false;\r\n        }\r\n\r\n        this.camera.setRay();\r\n\r\n    }\r\n\r\n    private checkClick(x: number, y: number, diff: number = clickDist){\r\n        const diffX = Math.abs(x - this.ui.doubleClick.lastX);\r\n        const diffY = Math.abs(y - this.ui.doubleClick.lastY);\r\n        return ((diffX < diff) && (diffY < diff));\r\n    }\r\n    \r\n\r\n        \r\n    private mouseMove(event : MouseEvent) {\r\n        const x = event.clientX;\r\n        const y = event.clientY;\r\n        if (!this.scene.selectedNode && (this.ui.left_down || this.ui.wheel_down)) {   \r\n\r\n            const factor = 1/this.canvas.height;\r\n            const dx = factor * (x - this.ui.mouse.lastX);\r\n            const dy = factor * (y - this.ui.mouse.lastY);\r\n\r\n            if (this.ui.left_down && !this.ui.shift) {\r\n                this.camera.addAngle(dx, dy);\r\n                this.camera.update(this.gl, this.programs.render, this.canvas.width, this.canvas.height);\r\n                this.ui.doubleClick.click = false;\r\n            }else if ((this.ui.wheel_down) || (this.ui.shift && this.ui.left_down)) {\r\n                if(this.ui.doubleClick.click){\r\n                    this.ui.doubleClick.click = this.checkClick(x,y, 3);\r\n                }\r\n                this.camera.transform(dx, dy, this.scene.transform_z);\r\n                this.camera.update(this.gl, this.programs.render, this.canvas.width, this.canvas.height);\r\n            }\r\n\r\n\r\n        }else if((this.scene.sceneType == \"Linked Knot\") && (this.scene.InsertOrConnect || this.scene.EraseOrSubdiv) && (this.ui.left_down || this.ui.wheel_down)){\r\n\r\n            if (this.ui.doubleClick.click) {\r\n                this.ui.doubleClick.click = this.checkClick(x,y);\r\n                return;\r\n            } \r\n\r\n            const factor = 1/this.canvas.height;\r\n            const dx = factor * (x - this.ui.mouse.lastX);\r\n            const dy = factor * (y - this.ui.mouse.lastY);\r\n\r\n            if (this.ui.left_down && !this.ui.shift) {\r\n                this.camera.addAngle(dx, dy);\r\n                this.camera.update(this.gl, this.programs.render, this.canvas.width, this.canvas.height);\r\n            }else if ((this.ui.wheel_down) || (this.ui.shift && this.ui.left_down)) {\r\n                this.camera.transform(dx, dy, this.scene.transform_z);\r\n                this.camera.update(this.gl, this.programs.render, this.canvas.width, this.canvas.height);\r\n            }\r\n            \r\n        }else if((this.scene.sceneType == \"Linked Knot\") && this.scene.selectedNode && (this.ui.left_down || this.scene.InsertOrConnect)){\r\n\r\n            if(this.ui.doubleClick.click){\r\n                this.ui.doubleClick.click = this.checkClick(x,y, 3);\r\n                return;\r\n            }\r\n\r\n            const {relx,rely} = uiUtils.pixelInputToGLCoord(event, this.boundingClientRect);\r\n    \r\n            var from = vec4.transformMat4(vec4.create(), [relx, rely, -1, 1], this.camera.toWorld);\r\n            var to = vec4.transformMat4(vec4.create(), [relx, rely, 1, 1], this.camera.toWorld);\r\n            vec4.scale(from, from, 1/from[3]);\r\n            vec4.scale(to, to, 1/to[3]);\r\n            \r\n            const dirvec = vec3.subtract(vec3.create(), [to[0], to[1], to[2]], [from[0], from[1], from[2]]);\r\n    \r\n            this.scene.linkedKnot.moveNode(dirvec, this.camera.absPos, this.camera.normal);\r\n           \r\n        }\r\n\r\n        this.ui.mouse.lastX = x;\r\n        this.ui.mouse.lastY = y;\r\n    }\r\n        \r\n\r\n    private zoom(event : WheelEvent) {\r\n        this.camera.reset = false;\r\n        this.camera.addRadius(event.deltaY);\r\n        this.configCamera();\r\n    }\r\n\r\n    private resizer(){\r\n        this.scene.quintuples.player.resize();\r\n        this.resizeCanvasToDisplaySize();\r\n        this.configCamera();\r\n        this.boundingClientRect = this.canvas.getBoundingClientRect();\r\n    }\r\n        \r\n\r\n\r\n    private resizeCanvasToDisplaySize() {\r\n        const dpr = window.devicePixelRatio;\r\n        const {width, height} = this.canvas.getBoundingClientRect();\r\n        const displayWidth  = Math.round(width * dpr);\r\n        const displayHeight = Math.round(height * dpr);\r\n  \r\n        this.canvas.width  = displayWidth;\r\n        this.canvas.height = displayHeight;\r\n        \r\n    }\r\n\r\n}","export default \"precision mediump float;\\r\\nattribute vec4 aColor;\\r\\nattribute vec4 aNormal;\\r\\nattribute vec4 aPosition;\\r\\n\\r\\nuniform mat4 mWorld;\\r\\nuniform mat4 mView;\\r\\nuniform mat4 mProj;\\r\\n\\r\\n\\r\\nuniform mat3 uNormalMatrix;\\r\\n\\r\\nvarying vec4 vColor;\\r\\nvarying vec3 vNormal;\\r\\n\\r\\nvoid main() {\\r\\n    gl_Position = mProj * mView * mWorld * aPosition;\\r\\n\\r\\n    vColor = aColor;\\r\\n    vNormal = uNormalMatrix * vec3(aNormal);\\r\\n}\"","export default \"precision mediump float;\\r\\n\\r\\nuniform vec3 uDiffuseLight;\\r\\nuniform vec3 uLightPosition;\\r\\nuniform vec3 uAmbientLight;\\r\\n\\r\\nvarying vec4 vColor;\\r\\nvarying vec3 vNormal;\\r\\n\\r\\n\\r\\nvoid main() {\\r\\n    // Normalize the normal because it is interpolated and not 1.0 in length any more\\r\\n    vec3 normal = normalize(vNormal);\\r\\n\\r\\n    // Calculate the light direction and make its length 1.\\r\\n    vec3 lightDirection = uLightPosition;\\r\\n\\r\\n    // The dot product of the light direction and the orientation of a surface (the normal)\\r\\n    float nDotL = max(dot(lightDirection, normal), 0.0);\\r\\n\\r\\n    // Calculate the final color from diffuse reflection and ambient reflection\\r\\n    vec3 diffuse = uDiffuseLight * vColor.rgb * nDotL;\\r\\n    vec3 ambient = uAmbientLight * vColor.rgb;\\r\\n    gl_FragColor = vec4(diffuse + ambient, vColor.a);\\r\\n}\"","import { App } from \"./libs/controls/App\";\r\n\r\nconst canvas : HTMLCanvasElement = <HTMLCanvasElement> document.getElementById(\"gfx-main\");\r\nconst errorScreen : HTMLCanvasElement = <HTMLCanvasElement> document.getElementById(\"error-screen\");\r\n\r\n\r\nlet check = false;\r\n(function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent);\r\nif(check){\r\n    errorScreen.textContent = \"Mobile and Tablets not supported.\"\r\n    errorScreen.classList.remove(\"hidden\");\r\n    throw new Error(\"Use chrome on PC\");\r\n}else{\r\n    \r\n\r\n    var app : App;\r\n    try{\r\n        app = new App(canvas);\r\n    }catch(e){\r\n        console.log(e);\r\n        errorScreen.textContent = \"Try a new version of Chrome.\"\r\n        errorScreen.classList.remove(\"hidden\");\r\n        throw new Error();\r\n    }\r\n    //@ts-ignore\r\n    app.run();\r\n\r\n    \r\n \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  "],"names":["___HTML_LOADER_IMPORT_0___","___HTML_LOADER_IMPORT_1___","___HTML_LOADER_IMPORT_2___","___HTML_LOADER_IMPORT_3___","___HTML_LOADER_IMPORT_4___","___HTML_LOADER_IMPORT_5___","___HTML_LOADER_IMPORT_6___","___HTML_LOADER_IMPORT_7___","___HTML_LOADER_IMPORT_8___","___HTML_LOADER_IMPORT_9___","module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","p","b","document","baseURI","self","location","href","glUtils","static","canvas","contexts","gl","getContext","preserveDrawingBuffer","i","length","e","alert","vertexShaderSource","fragmentShaderSource","program","createProgram","vertexShader","getShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","error","getProgramInfoLog","console","log","deleteProgram","deleteShader","attributes","indices","attributeCount","ACTIVE_ATTRIBUTES","info","getActiveAttrib","objAttribute","name","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","attr","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","size","FLOAT","BYTES_PER_ELEMENT","offset","indexBuffer","ELEMENT_ARRAY_BUFFER","buffers","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","uiUtils","event","x","clientX","y","clientY","rect","target","getBoundingClientRect","left","right","top","bottom","midX","midY","relx","rely","point","pixelInputToCanvasCoord","pixels","Uint8Array","readPixels","RGBA","UNSIGNED_BYTE","EPSILON","ARRAY_TYPE","Float32Array","Array","create","out","scale","transformMat4","z","w","Math","hypot","len","sqrt","ax","ay","az","bx","by","bz","q","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","random","PI","arguments","identity","translate","v","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","fromTranslation","fromRotationTranslationScale","s","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","sx","sy","sz","pi","cos","t","sin","Camera","constructor","theta","phi","radius","transformation","this","_spherical","_position","_ray","absPos","normal","toWorld","_transformation","_mView","_mProj","_reset","updateCameraPos","setRay","update","width","height","matViewUniformLocation","getUniformLocation","matProjUniformLocation","viewport","fovy","aspect","near","far","nf","f","tan","Infinity","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","abs","uniformMatrix4fv","resetCam","dtheta","dphi","drad","sign","min","max","dtrans","reset","addAngle","addRadius","dradius","transform","dx","dy","transform_z","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","b0","b1","b2","b3","bool","Light","pos","light_pos","uAmbientLight","uDiffuseLight","uLightPosition","uniform3f","normalFromMat4","Sphere","color","rad","_rad","_SBO","SBO","check","_state","position","mvp","nm","updateMat","draw","init","initBuffers","matWorldUniformLocation","uNormalMatrix","bindBuffers","uniformMatrix3fv","drawElements","TRIANGLES","numVert","UNSIGNED_SHORT","changeColor","SBOList","_init","_color","sectorAngle","stackAngle","sectorStep","stackStep","k1","k2","vertices","normals","colors","j","push","_attributes","aColor","aPosition","aNormal","_indices","Uint16Array","_numVert","_buffers","_indexBuffer","temp","sbo","tmpvec3","xUnitVec3","yUnitVec3","rotationTo","dot","axis","setAxisAngle","Cylinder","start","end","_CBO","CBO","rotQuat","CBOList","k","cbo","XYPlane","_opacity1","_opacity2","_attributes1","_indices1","_attributes2","n1","n2","_buffers1","_indexBuffer1","_buffers2","drawArrays","LINES","VerticalArrows","_arrows","Arrow","Error","PlanarArrows","sectorCount","shaftRad","coneRad","normQuat","renderBuffers","Guide","_opacity","floor","LinkedKnot","_nodeStack","Stack","_edgeStack","_nodeNum","_edgeNum","_isKnot","_nodeArr","_transform_z","_selected","_xyPlane","_planeArrows","_verticalArrows","_guide","_overlapNode","_drawingTool","DrawingTool","initCallback","deleteData","insert","selectedNode","selected","object","index","available","node","Node","nodeNum","connect","prev","next","edge","curNext","prevCur","reverse","Edge","edgeNum","checkKnot","subdivide","startNode","endNode","delete","connected","curr","first","data","enable","BLEND","depthMask","disable","isEmpty","isKnot","nodeArr","drawingTool","num","setDrawState","render","forEach","value","drawState","readState","btnManager","connectFirst","connectLast","moveNode","vec","updatedPos","diff","dist","overlapping","updatePos","adjNode","pickObj","tempPos","minTempPos","c","closest","erase","_data","free","_startNode","_endNode","_object","_prev","_next","_curNext","_prevCur","tempNode","tempEdge","linkedKnot","_linkedKnot","_overlay","getElementById","_insertBtn","_connectBtn","_subdivideBtn","_eraseBtn","_insert","_connectFirst","_connectLast","_subdivide","_erase","addEventListener","resize","insertBtnResponse","connectBtnResponse","eraseBtnResponse","subdivideBtnResponse","classList","toggle","Disable","offsetY","offsetX","style","FourierKnot","_cosCoef","_sinCoef","_calculated","_intersecting","calcFourier","arr","cosCoef","sinCoef","L","maxDist","factor","lower_bound","upper_bound","upper_sum","lower_sum","cos_coef","sin_coef","stack","normVec","prevCurvature","knot","sector_angle","sector","checkIntersection","param","calculated","exportKI","ret","exportKIArr","dcosCoef","dsinCoef","d2cosCoef","d2sinCoef","intervals","KnotDivision","round","intersecting","Circle","setCenterNormalRad","ratio","_majorRad","loops","outerRad","slice","slice_angle","cos_slices","sin_slices","slice_rad","loop","loop_angle","cos_loops","sin_loops","vertsPerSlice","Loader","_loader","_text","_quit","_doubleCheck","overlay","confirm","cancel","_cancel","quitBtnResponse","confirmBtnResponse","cancelBtnResponse","load","text","textContent","DropDown","idName","initvalue","_resetValue","_value","dropdown","_button","querySelector","_resetStr","elements","querySelectorAll","_element","Number","getAttribute","val","Quintuples","_bufferSize","_calc","error_field","ACPolyAve","_frames","_dcosCoef","_dsinCoef","_d2cosCoef","_d2sinCoef","_circles","pow","_spheres","red","black","_player","Player","Initialize","navigator","gpu","_adapter","requestAdapter","_device","requestDevice","initKnot","coefs","findCircles","knotInfo","doubleCheck","maxCircles","knotDivision","loader","ki","input","output","staging","toFixed","temp_data","_bindGroupLayout","createBindGroupLayout","entries","binding","visibility","GPUShaderStage","COMPUTE","shaderModule","createShaderModule","code","_computePipeline","createComputePipeline","layout","createPipelineLayout","bindGroupLayouts","compute","entryPoint","constants","BUFFER_SIZE","calc_iter","tlist","sett_i","commandEncoder","createCommandEncoder","passEncoder","beginComputePass","usage","GPUBufferUsage","UNIFORM","COPY_DST","queue","writeBuffer","STORAGE","COPY_SRC","MAP_READ","bindGroup","createBindGroup","resource","setPipeline","setBindGroup","dispatchWorkgroups","copyBufferToBuffer","submit","finish","mapAsync","GPUMapMode","READ","getMappedRange","ind","ACPolyOpt","removeDupe","c5_ptolemy","frameIndex","leftIndex","rightIndex","maxIndex","tempDoubleCheckData","wonrgACPoly","setFrameData","player","play","list","aprox","include","len2","t_0num","ind2","ind3","ind4","ind5","ind1","partitions","t_i","r","tempSphere","radID","iter","redPoints","blackPoints","circles","frameData","log2","circleRadLimit","tempCircle","objs","frame","addFrame","toCVR","v1","v2","v3","v12","v23","v31","lenv","alpha","beta","gamma","addv","scalarmult","lena","decim","proxim","proxim_double","modified_Cholesky","A","X","max_diag","max_nondiag","beta2","D","sum","retval","gradient_ptolemy","nv","vdv","grad","dptolemy1423d2","dptolemy1423d3","dptolemy1423d4","dptolemy1253d2","dptolemy1253d3","dptolemy1253d5","hessian_ptolemy","dvdv","vd2v","hess","d2ptolemy1423d2d2","d2ptolemy1423d2d3","d2ptolemy1423d2d4","d2ptolemy1423d3d3","d2ptolemy1423d3d4","d2ptolemy1423d4d4","d2ptolemy1253d2d2","d2ptolemy1253d2d3","d2ptolemy1253d2d5","d2ptolemy1253d3d3","d2ptolemy1253d3d5","d2ptolemy1253d5d5","setvariables","vv","dv","d2v","dknot","d2knot","ptol","diff_len","grad_dot_diff","counter","func","quint","x_n","ticker","flat","videoControls","playpause","progress","progressBar","pressed","speedDrop","_animation","speed","playBtnResponse","button","progressResponse","offsetWidth","setAttribute","Scene","_fourierKnot","_quintpules","_freeze","_knotMenu","KnotMenu","sceneType","advanceScene","str","fourierKnot","KIArr","quintuples","KI","resetCircleOption","drawScene","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","InsertOrConnect","EraseOrSubdiv","disableAdvance","disableDelete","scene","_scene","_sceneType","_advance","_delete","_slider","disabled","_circleOptions","sceneSelect","advanceBtnResponse","deleteBtnResponse","contains","checked","scenetype","App","boundingClientRect","checkWebGL","programs","camera","ui","left_down","wheel_down","mouse","lastX","lastY","doubleClick","click","sameObj","shift","_fps","fpsLimit","_infoPage","hidden","btn","exit","run","initGL","initCallbacks","requestAnimationFrame","animate","bind","clearColor","DEPTH_TEST","useProgram","setLight","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","blendEquation","FUNC_ADD","window","returnValue","id","mouseDown","mouseUp","configCamera","mouseMove","keyDown","keyUp","resizer","zoom","ctrlKey","preventDefault","passive","time","shiftKey","pixelInputToGLCoord","from","to","dirvec","checkClick","diffX","diffY","deltaY","resizeCanvasToDisplaySize","dpr","devicePixelRatio","displayWidth","displayHeight","errorScreen","app","userAgent","substr","remove","URL"],"sourceRoot":""}